

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 04 19:51:51 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Version 2.40
    33                           ; Generated 17/11/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4520 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     _PORTD	set	3971
    68   000000                     _PORTBbits	set	3969
    69   000000                     _PORTDbits	set	3971
    70   000000                     _TXSTAbits	set	4012
    71   000000                     _TXREG	set	4013
    72   000000                     _SPBRG	set	4015
    73   000000                     _TRISB	set	3987
    74   000000                     _TRISCbits	set	3988
    75   000000                     _TRISD	set	3989
    76   000000                     _RCSTAbits	set	4011
    77   000000                     _BAUDCONbits	set	4024
    78   000000                     _SPBRGH	set	4016
    79   000000                     _ADCON1	set	4033
    80   000000                     _RCONbits	set	4048
    81   000000                     _INTCON2bits	set	4081
    82   000000                     _INTCONbits	set	4082
    83                           
    84                           	psect	smallconst
    85   000600                     __psmallconst:
    86                           	callstack 0
    87   000600  00                 	db	0
    88   000601                     STR_1:
    89   000601  49                 	db	73	;'I'
    90   000602  6E                 	db	110	;'n'
    91   000603  69                 	db	105	;'i'
    92   000604  74                 	db	116	;'t'
    93   000605  20                 	db	32
    94   000606  55                 	db	85	;'U'
    95   000607  41                 	db	65	;'A'
    96   000608  52                 	db	82	;'R'
    97   000609  54                 	db	84	;'T'
    98   00060A  21                 	db	33
    99   00060B  20                 	db	32
   100   00060C  0A                 	db	10
   101   00060D  00                 	db	0
   102   00060E                     STR_2:
   103   00060E  25                 	db	37
   104   00060F  64                 	db	100	;'d'
   105   000610  20                 	db	32
   106   000611  00                 	db	0
   107   000612  00                 	db	0	; dummy byte at the end
   108   000000                     
   109                           ; #config settings
   110                           
   111                           	psect	cinit
   112   001026                     __pcinit:
   113                           	callstack 0
   114   001026                     start_initialization:
   115                           	callstack 0
   116   001026                     __initialization:
   117                           	callstack 0
   118                           
   119                           ; Clear objects allocated to BANK0 (32 bytes)
   120   001026  EE00  F080         	lfsr	0,__pbssBANK0
   121   00102A  0E20               	movlw	32
   122   00102C                     clear_0:
   123   00102C  6AEE               	clrf	postinc0,c
   124   00102E  06E8               	decf	wreg,f,c
   125   001030  E1FD               	bnz	clear_0
   126                           
   127                           ; Clear objects allocated to COMRAM (25 bytes)
   128   001032  EE00  F05A         	lfsr	0,__pbssCOMRAM
   129   001036  0E19               	movlw	25
   130   001038                     clear_1:
   131   001038  6AEE               	clrf	postinc0,c
   132   00103A  06E8               	decf	wreg,f,c
   133   00103C  E1FD               	bnz	clear_1
   134   00103E                     end_of_initialization:
   135                           	callstack 0
   136   00103E                     __end_of__initialization:
   137                           	callstack 0
   138   00103E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   139   001040  6EF8               	movwf	tblptru,c
   140   001042  0100               	movlb	0
   141   001044  EF0A  F003         	goto	_main	;jump to C main() function
   142                           
   143                           	psect	bssCOMRAM
   144   00005A                     __pbssCOMRAM:
   145                           	callstack 0
   146   00005A                     	ds	8
   147   000062                     	ds	8
   148   00006A                     _width:
   149                           	callstack 0
   150   00006A                     	ds	2
   151   00006C                     _prec:
   152                           	callstack 0
   153   00006C                     	ds	2
   154   00006E                     _flags:
   155                           	callstack 0
   156   00006E                     	ds	1
   157   00006F                     _seed:
   158                           	callstack 0
   159   00006F                     	ds	4
   160                           
   161                           	psect	bssBANK0
   162   000080                     __pbssBANK0:
   163                           	callstack 0
   164   000080                     _dbuf:
   165                           	callstack 0
   166   000080                     	ds	32
   167                           
   168                           	psect	cstackCOMRAM
   169   000001                     __pcstackCOMRAM:
   170                           	callstack 0
   171   000001                     ?___awdiv:
   172                           	callstack 0
   173   000001                     ?___awmod:
   174                           	callstack 0
   175   000001                     ?___lmul:
   176                           	callstack 0
   177   000001                     putch@byte:
   178                           	callstack 0
   179   000001                     setLED@value:
   180                           	callstack 0
   181   000001                     ___awdiv@dividend:
   182                           	callstack 0
   183   000001                     ___awmod@dividend:
   184                           	callstack 0
   185   000001                     ___lmul@multiplier:
   186                           	callstack 0
   187                           
   188                           ; 4 bytes @ 0x0
   189   000001                     	ds	1
   190   000002                     ??_setLED:
   191   000002                     fputc@c:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x1
   195   000002                     	ds	1
   196   000003                     ___awdiv@divisor:
   197                           	callstack 0
   198   000003                     ___awmod@divisor:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x2
   202   000003                     	ds	1
   203   000004                     setLED@pos:
   204                           	callstack 0
   205   000004                     fputc@fp:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x3
   209   000004                     	ds	1
   210   000005                     ___awdiv@counter:
   211                           	callstack 0
   212   000005                     ___awmod@counter:
   213                           	callstack 0
   214   000005                     ___lmul@multiplicand:
   215                           	callstack 0
   216                           
   217                           ; 4 bytes @ 0x4
   218   000005                     	ds	1
   219   000006                     ??_fputc:
   220   000006                     ___awdiv@sign:
   221                           	callstack 0
   222   000006                     ___awmod@sign:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0x5
   226   000006                     	ds	1
   227   000007                     ?_abs:
   228                           	callstack 0
   229   000007                     ___awdiv@quotient:
   230                           	callstack 0
   231   000007                     abs@a:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x6
   235   000007                     	ds	2
   236   000009                     ??_abs:
   237   000009                     ___lmul@product:
   238                           	callstack 0
   239                           
   240                           ; 4 bytes @ 0x8
   241   000009                     	ds	2
   242   00000B                     fputs@s:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0xA
   246   00000B                     	ds	2
   247   00000D                     ?_rand:
   248                           	callstack 0
   249   00000D                     fputs@fp:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xC
   253   00000D                     	ds	2
   254   00000F                     ??_rand:
   255   00000F                     fputs@c:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0xE
   259   00000F                     	ds	1
   260   000010                     fputs@i:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0xF
   264   000010                     	ds	2
   265   000012                     pad@fp:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x11
   269   000012                     	ds	2
   270   000014                     pad@buf:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x13
   274   000014                     	ds	2
   275   000016                     pad@p:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x15
   279   000016                     	ds	2
   280   000018                     ??_pad:
   281                           
   282                           ; 1 bytes @ 0x17
   283   000018                     	ds	1
   284   000019                     pad@i:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x18
   288   000019                     	ds	2
   289   00001B                     pad@w:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x1A
   293   00001B                     	ds	2
   294   00001D                     dtoa@fp:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x1C
   298   00001D                     	ds	2
   299   00001F                     dtoa@d:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x1E
   303   00001F                     	ds	2
   304   000021                     _dtoa$1127:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x20
   308   000021                     	ds	2
   309   000023                     dtoa@p:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x22
   313   000023                     	ds	2
   314   000025                     dtoa@w:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x24
   318   000025                     	ds	2
   319   000027                     dtoa@i:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x26
   323   000027                     	ds	2
   324   000029                     dtoa@s:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x28
   328   000029                     	ds	1
   329   00002A                     vfpfcnvrt@fp:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x29
   333   00002A                     	ds	2
   334   00002C                     vfpfcnvrt@fmt:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x2B
   338   00002C                     	ds	2
   339   00002E                     vfpfcnvrt@ap:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x2D
   343   00002E                     	ds	2
   344   000030                     ??_vfpfcnvrt:
   345                           
   346                           ; 1 bytes @ 0x2F
   347   000030                     	ds	2
   348   000032                     vfpfcnvrt@convarg:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0x31
   352   000032                     	ds	4
   353   000036                     vfpfcnvrt@cp:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x35
   357   000036                     	ds	2
   358   000038                     ?_vfprintf:
   359                           	callstack 0
   360   000038                     vfprintf@fp:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x37
   364   000038                     	ds	2
   365   00003A                     vfprintf@fmt:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x39
   369   00003A                     	ds	2
   370   00003C                     vfprintf@ap:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x3B
   374   00003C                     	ds	2
   375   00003E                     vfprintf@cfmt:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x3D
   379   00003E                     	ds	2
   380   000040                     ?_printf:
   381                           	callstack 0
   382   000040                     printf@fmt:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x3F
   386   000040                     	ds	4
   387   000044                     printf@ap:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x43
   391   000044                     	ds	2
   392   000046                     ??_main:
   393                           
   394                           ; 1 bytes @ 0x45
   395   000046                     	ds	2
   396   000048                     main@array:
   397                           	callstack 0
   398                           
   399                           ; 8 bytes @ 0x47
   400   000048                     	ds	8
   401   000050                     main@i:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x4F
   405   000050                     	ds	2
   406   000052                     main@i_616:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x51
   410   000052                     	ds	2
   411   000054                     main@r:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x53
   415   000054                     	ds	2
   416   000056                     main@i_613:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x55
   420   000056                     	ds	2
   421   000058                     main@i_617:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x57
   425   000058                     	ds	2
   426                           
   427 ;;
   428 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   429 ;;
   430 ;; *************** function _main *****************
   431 ;; Defined at:
   432 ;;		line 140 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;  i               2   87[COMRAM] int 
   437 ;;  i               2   81[COMRAM] int 
   438 ;;  i               2   85[COMRAM] int 
   439 ;;  i               2   79[COMRAM] int 
   440 ;;  array           8   71[COMRAM] int [4]
   441 ;;  r               2   83[COMRAM] int 
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   451 ;;      Params:         0       0       0       0       0       0       0
   452 ;;      Locals:        18       0       0       0       0       0       0
   453 ;;      Temps:          2       0       0       0       0       0       0
   454 ;;      Totals:        20       0       0       0       0       0       0
   455 ;;Total ram usage:       20 bytes
   456 ;; Hardware stack levels required when called: 8
   457 ;; This function calls:
   458 ;;		_init
   459 ;;		_initUART
   460 ;;		_printf
   461 ;;		_rand
   462 ;;		_setLED
   463 ;; This function is called by:
   464 ;;		Startup code after reset
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text0
   469   000614                     __ptext0:
   470                           	callstack 0
   471   000614                     _main:
   472                           	callstack 23
   473   000614                     
   474                           ;main.c: 141:     init();
   475   000614  EC3C  F008         	call	_init	;wreg free
   476                           
   477                           ;main.c: 142:     initUART();
   478   000618  EC24  F008         	call	_initUART	;wreg free
   479   00061C                     
   480                           ;main.c: 143:     printf("Init UART! \n");
   481   00061C  0E01               	movlw	low STR_1
   482   00061E  6E40               	movwf	printf@fmt^0,c
   483   000620  0E06               	movlw	high STR_1
   484   000622  6E41               	movwf	(printf@fmt+1)^0,c
   485   000624  EC00  F008         	call	_printf	;wreg free
   486   000628                     
   487                           ;main.c: 144:     int array[4] = {};
   488   000628  EE20  F048         	lfsr	2,main@array
   489   00062C  0E07               	movlw	7
   490   00062E                     u941:
   491   00062E  6ADE               	clrf	postinc2,c
   492   000630  06E8               	decf	wreg,f,c
   493   000632  E2FD               	bc	u941
   494   000634                     
   495                           ;main.c: 147:     for (int i = 0; i < 4; i++) {
   496   000634  0E00               	movlw	0
   497   000636  6E51               	movwf	(main@i+1)^0,c
   498   000638  0E00               	movlw	0
   499   00063A  6E50               	movwf	main@i^0,c
   500   00063C                     l1533:
   501                           
   502                           ;main.c: 148:         r = rand() % 4;
   503   00063C  EC2C  F007         	call	_rand	;wreg free
   504   000640  0E03               	movlw	3
   505   000642  140D               	andwf	?_rand^0,w,c
   506   000644  6E54               	movwf	main@r^0,c
   507   000646  6A55               	clrf	(main@r+1)^0,c
   508   000648                     
   509                           ;main.c: 149:         r = r + 1;
   510   000648  0E01               	movlw	1
   511   00064A  2454               	addwf	main@r^0,w,c
   512   00064C  6E54               	movwf	main@r^0,c
   513   00064E  0E00               	movlw	0
   514   000650  2055               	addwfc	(main@r+1)^0,w,c
   515   000652  6E55               	movwf	(main@r+1)^0,c
   516   000654                     
   517                           ;main.c: 150:         array[i] = r;
   518   000654  90D8               	bcf	status,0,c
   519   000656  3450               	rlcf	main@i^0,w,c
   520   000658  6ED9               	movwf	fsr2l,c
   521   00065A  3451               	rlcf	(main@i+1)^0,w,c
   522   00065C  6EDA               	movwf	fsr2h,c
   523   00065E  0E48               	movlw	low main@array
   524   000660  26D9               	addwf	fsr2l,f,c
   525   000662  0E00               	movlw	high main@array
   526   000664  22DA               	addwfc	fsr2h,f,c
   527   000666  C054  FFDE         	movff	main@r,postinc2
   528   00066A  C055  FFDD         	movff	main@r+1,postdec2
   529   00066E                     
   530                           ;main.c: 151:     }
   531   00066E  4A50               	infsnz	main@i^0,f,c
   532   000670  2A51               	incf	(main@i+1)^0,f,c
   533   000672  BE51               	btfsc	(main@i+1)^0,7,c
   534   000674  EF45  F003         	goto	u951
   535   000678  5051               	movf	(main@i+1)^0,w,c
   536   00067A  E109               	bnz	u950
   537   00067C  0E04               	movlw	4
   538   00067E  5C50               	subwf	main@i^0,w,c
   539   000680  A0D8               	btfss	status,0,c
   540   000682  EF45  F003         	goto	u951
   541   000686  EF47  F003         	goto	u950
   542   00068A                     u951:
   543   00068A  EF1E  F003         	goto	l1533
   544   00068E                     u950:
   545   00068E                     
   546                           ;main.c: 153:     for (int i = 0; i < 4; i++) {
   547   00068E  0E00               	movlw	0
   548   000690  6E57               	movwf	(main@i_613+1)^0,c
   549   000692  0E00               	movlw	0
   550   000694  6E56               	movwf	main@i_613^0,c
   551   000696                     l1549:
   552                           
   553                           ;main.c: 154:         printf("%d ", array[i]);
   554   000696  0E0E               	movlw	low STR_2
   555   000698  6E40               	movwf	printf@fmt^0,c
   556   00069A  0E06               	movlw	high STR_2
   557   00069C  6E41               	movwf	(printf@fmt+1)^0,c
   558   00069E  90D8               	bcf	status,0,c
   559   0006A0  3456               	rlcf	main@i_613^0,w,c
   560   0006A2  6ED9               	movwf	fsr2l,c
   561   0006A4  3457               	rlcf	(main@i_613+1)^0,w,c
   562   0006A6  6EDA               	movwf	fsr2h,c
   563   0006A8  0E48               	movlw	low main@array
   564   0006AA  26D9               	addwf	fsr2l,f,c
   565   0006AC  0E00               	movlw	high main@array
   566   0006AE  22DA               	addwfc	fsr2h,f,c
   567   0006B0  CFDE F042          	movff	postinc2,?_printf+2
   568   0006B4  CFDD F043          	movff	postdec2,?_printf+3
   569   0006B8  EC00  F008         	call	_printf	;wreg free
   570   0006BC                     
   571                           ;main.c: 155:         setLED(array[i], 1);
   572   0006BC  0E01               	movlw	1
   573   0006BE  6E01               	movwf	setLED@value^0,c
   574   0006C0  90D8               	bcf	status,0,c
   575   0006C2  3456               	rlcf	main@i_613^0,w,c
   576   0006C4  6ED9               	movwf	fsr2l,c
   577   0006C6  3457               	rlcf	(main@i_613+1)^0,w,c
   578   0006C8  6EDA               	movwf	fsr2h,c
   579   0006CA  0E48               	movlw	low main@array
   580   0006CC  26D9               	addwf	fsr2l,f,c
   581   0006CE  0E00               	movlw	high main@array
   582   0006D0  22DA               	addwfc	fsr2h,f,c
   583   0006D2  50DF               	movf	indf2,w,c
   584   0006D4  ECB2  F006         	call	_setLED
   585   0006D8                     
   586                           ;main.c: 156:         _delay((unsigned long)((1000)*(16000000/4000.0)));
   587   0006D8  0E15               	movlw	21
   588   0006DA  6E47               	movwf	(??_main+1)^0,c
   589   0006DC  0E4B               	movlw	75
   590   0006DE  6E46               	movwf	??_main^0,c
   591   0006E0  0EBE               	movlw	190
   592   0006E2                     u997:
   593   0006E2  2EE8               	decfsz	wreg,f,c
   594   0006E4  D7FE               	bra	u997
   595   0006E6  2E46               	decfsz	??_main^0,f,c
   596   0006E8  D7FC               	bra	u997
   597   0006EA  2E47               	decfsz	(??_main+1)^0,f,c
   598   0006EC  D7FA               	bra	u997
   599   0006EE  D000               	nop2	
   600   0006F0                     
   601                           ;main.c: 157:         setLED(array[i], 0);
   602   0006F0  0E00               	movlw	0
   603   0006F2  6E01               	movwf	setLED@value^0,c
   604   0006F4  90D8               	bcf	status,0,c
   605   0006F6  3456               	rlcf	main@i_613^0,w,c
   606   0006F8  6ED9               	movwf	fsr2l,c
   607   0006FA  3457               	rlcf	(main@i_613+1)^0,w,c
   608   0006FC  6EDA               	movwf	fsr2h,c
   609   0006FE  0E48               	movlw	low main@array
   610   000700  26D9               	addwf	fsr2l,f,c
   611   000702  0E00               	movlw	high main@array
   612   000704  22DA               	addwfc	fsr2h,f,c
   613   000706  50DF               	movf	indf2,w,c
   614   000708  ECB2  F006         	call	_setLED
   615   00070C                     
   616                           ;main.c: 158:         _delay((unsigned long)((500)*(16000000/4000.0)));
   617   00070C  0E0B               	movlw	11
   618   00070E  6E47               	movwf	(??_main+1)^0,c
   619   000710  0E26               	movlw	38
   620   000712  6E46               	movwf	??_main^0,c
   621   000714  0E5E               	movlw	94
   622   000716                     u1007:
   623   000716  2EE8               	decfsz	wreg,f,c
   624   000718  D7FE               	bra	u1007
   625   00071A  2E46               	decfsz	??_main^0,f,c
   626   00071C  D7FC               	bra	u1007
   627   00071E  2E47               	decfsz	(??_main+1)^0,f,c
   628   000720  D7FA               	bra	u1007
   629   000722                     
   630                           ;main.c: 159:     }
   631   000722  4A56               	infsnz	main@i_613^0,f,c
   632   000724  2A57               	incf	(main@i_613+1)^0,f,c
   633   000726  BE57               	btfsc	(main@i_613+1)^0,7,c
   634   000728  EF9F  F003         	goto	u961
   635   00072C  5057               	movf	(main@i_613+1)^0,w,c
   636   00072E  E109               	bnz	u960
   637   000730  0E04               	movlw	4
   638   000732  5C56               	subwf	main@i_613^0,w,c
   639   000734  A0D8               	btfss	status,0,c
   640   000736  EF9F  F003         	goto	u961
   641   00073A  EFA1  F003         	goto	u960
   642   00073E                     u961:
   643   00073E  EF4B  F003         	goto	l1549
   644   000742                     u960:
   645   000742                     
   646                           ;main.c: 161:     _delay((unsigned long)((2000)*(16000000/4000.0)));
   647   000742  0E29               	movlw	41
   648   000744  6E47               	movwf	(??_main+1)^0,c
   649   000746  0E96               	movlw	150
   650   000748  6E46               	movwf	??_main^0,c
   651   00074A  0E7F               	movlw	127
   652   00074C                     u1017:
   653   00074C  2EE8               	decfsz	wreg,f,c
   654   00074E  D7FE               	bra	u1017
   655   000750  2E46               	decfsz	??_main^0,f,c
   656   000752  D7FC               	bra	u1017
   657   000754  2E47               	decfsz	(??_main+1)^0,f,c
   658   000756  D7FA               	bra	u1017
   659   000758  F000               	nop	
   660   00075A                     
   661                           ;main.c: 163:     for (int i = 0; i < 4; i++) {
   662   00075A  0E00               	movlw	0
   663   00075C  6E53               	movwf	(main@i_616+1)^0,c
   664   00075E  0E00               	movlw	0
   665   000760  6E52               	movwf	main@i_616^0,c
   666   000762                     l1571:
   667                           
   668                           ;main.c: 164:         r = rand() % 4;
   669   000762  EC2C  F007         	call	_rand	;wreg free
   670   000766  0E03               	movlw	3
   671   000768  140D               	andwf	?_rand^0,w,c
   672   00076A  6E54               	movwf	main@r^0,c
   673   00076C  6A55               	clrf	(main@r+1)^0,c
   674   00076E                     
   675                           ;main.c: 165:         r = r + 1;
   676   00076E  0E01               	movlw	1
   677   000770  2454               	addwf	main@r^0,w,c
   678   000772  6E54               	movwf	main@r^0,c
   679   000774  0E00               	movlw	0
   680   000776  2055               	addwfc	(main@r+1)^0,w,c
   681   000778  6E55               	movwf	(main@r+1)^0,c
   682   00077A                     
   683                           ;main.c: 166:         array[i] = r;
   684   00077A  90D8               	bcf	status,0,c
   685   00077C  3452               	rlcf	main@i_616^0,w,c
   686   00077E  6ED9               	movwf	fsr2l,c
   687   000780  3453               	rlcf	(main@i_616+1)^0,w,c
   688   000782  6EDA               	movwf	fsr2h,c
   689   000784  0E48               	movlw	low main@array
   690   000786  26D9               	addwf	fsr2l,f,c
   691   000788  0E00               	movlw	high main@array
   692   00078A  22DA               	addwfc	fsr2h,f,c
   693   00078C  C054  FFDE         	movff	main@r,postinc2
   694   000790  C055  FFDD         	movff	main@r+1,postdec2
   695   000794                     
   696                           ;main.c: 167:     }
   697   000794  4A52               	infsnz	main@i_616^0,f,c
   698   000796  2A53               	incf	(main@i_616+1)^0,f,c
   699   000798  BE53               	btfsc	(main@i_616+1)^0,7,c
   700   00079A  EFD8  F003         	goto	u971
   701   00079E  5053               	movf	(main@i_616+1)^0,w,c
   702   0007A0  E109               	bnz	u970
   703   0007A2  0E04               	movlw	4
   704   0007A4  5C52               	subwf	main@i_616^0,w,c
   705   0007A6  A0D8               	btfss	status,0,c
   706   0007A8  EFD8  F003         	goto	u971
   707   0007AC  EFDA  F003         	goto	u970
   708   0007B0                     u971:
   709   0007B0  EFB1  F003         	goto	l1571
   710   0007B4                     u970:
   711   0007B4                     
   712                           ;main.c: 169:     for (int i = 0; i < 4; i++) {
   713   0007B4  0E00               	movlw	0
   714   0007B6  6E59               	movwf	(main@i_617+1)^0,c
   715   0007B8  0E00               	movlw	0
   716   0007BA  6E58               	movwf	main@i_617^0,c
   717   0007BC                     l1587:
   718                           
   719                           ;main.c: 170:         printf("%d ", array[i]);
   720   0007BC  0E0E               	movlw	low STR_2
   721   0007BE  6E40               	movwf	printf@fmt^0,c
   722   0007C0  0E06               	movlw	high STR_2
   723   0007C2  6E41               	movwf	(printf@fmt+1)^0,c
   724   0007C4  90D8               	bcf	status,0,c
   725   0007C6  3458               	rlcf	main@i_617^0,w,c
   726   0007C8  6ED9               	movwf	fsr2l,c
   727   0007CA  3459               	rlcf	(main@i_617+1)^0,w,c
   728   0007CC  6EDA               	movwf	fsr2h,c
   729   0007CE  0E48               	movlw	low main@array
   730   0007D0  26D9               	addwf	fsr2l,f,c
   731   0007D2  0E00               	movlw	high main@array
   732   0007D4  22DA               	addwfc	fsr2h,f,c
   733   0007D6  CFDE F042          	movff	postinc2,?_printf+2
   734   0007DA  CFDD F043          	movff	postdec2,?_printf+3
   735   0007DE  EC00  F008         	call	_printf	;wreg free
   736   0007E2                     
   737                           ;main.c: 171:         setLED(array[i], 1);
   738   0007E2  0E01               	movlw	1
   739   0007E4  6E01               	movwf	setLED@value^0,c
   740   0007E6  90D8               	bcf	status,0,c
   741   0007E8  3458               	rlcf	main@i_617^0,w,c
   742   0007EA  6ED9               	movwf	fsr2l,c
   743   0007EC  3459               	rlcf	(main@i_617+1)^0,w,c
   744   0007EE  6EDA               	movwf	fsr2h,c
   745   0007F0  0E48               	movlw	low main@array
   746   0007F2  26D9               	addwf	fsr2l,f,c
   747   0007F4  0E00               	movlw	high main@array
   748   0007F6  22DA               	addwfc	fsr2h,f,c
   749   0007F8  50DF               	movf	indf2,w,c
   750   0007FA  ECB2  F006         	call	_setLED
   751   0007FE                     
   752                           ;main.c: 172:         _delay((unsigned long)((1000)*(16000000/4000.0)));
   753   0007FE  0E15               	movlw	21
   754   000800  6E47               	movwf	(??_main+1)^0,c
   755   000802  0E4B               	movlw	75
   756   000804  6E46               	movwf	??_main^0,c
   757   000806  0EBE               	movlw	190
   758   000808                     u1027:
   759   000808  2EE8               	decfsz	wreg,f,c
   760   00080A  D7FE               	bra	u1027
   761   00080C  2E46               	decfsz	??_main^0,f,c
   762   00080E  D7FC               	bra	u1027
   763   000810  2E47               	decfsz	(??_main+1)^0,f,c
   764   000812  D7FA               	bra	u1027
   765   000814  D000               	nop2	
   766   000816                     
   767                           ;main.c: 173:         setLED(array[i], 0);
   768   000816  0E00               	movlw	0
   769   000818  6E01               	movwf	setLED@value^0,c
   770   00081A  90D8               	bcf	status,0,c
   771   00081C  3458               	rlcf	main@i_617^0,w,c
   772   00081E  6ED9               	movwf	fsr2l,c
   773   000820  3459               	rlcf	(main@i_617+1)^0,w,c
   774   000822  6EDA               	movwf	fsr2h,c
   775   000824  0E48               	movlw	low main@array
   776   000826  26D9               	addwf	fsr2l,f,c
   777   000828  0E00               	movlw	high main@array
   778   00082A  22DA               	addwfc	fsr2h,f,c
   779   00082C  50DF               	movf	indf2,w,c
   780   00082E  ECB2  F006         	call	_setLED
   781   000832                     
   782                           ;main.c: 174:         _delay((unsigned long)((500)*(16000000/4000.0)));
   783   000832  0E0B               	movlw	11
   784   000834  6E47               	movwf	(??_main+1)^0,c
   785   000836  0E26               	movlw	38
   786   000838  6E46               	movwf	??_main^0,c
   787   00083A  0E5E               	movlw	94
   788   00083C                     u1037:
   789   00083C  2EE8               	decfsz	wreg,f,c
   790   00083E  D7FE               	bra	u1037
   791   000840  2E46               	decfsz	??_main^0,f,c
   792   000842  D7FC               	bra	u1037
   793   000844  2E47               	decfsz	(??_main+1)^0,f,c
   794   000846  D7FA               	bra	u1037
   795   000848                     
   796                           ;main.c: 175:     }
   797   000848  4A58               	infsnz	main@i_617^0,f,c
   798   00084A  2A59               	incf	(main@i_617+1)^0,f,c
   799   00084C  BE59               	btfsc	(main@i_617+1)^0,7,c
   800   00084E  EF32  F004         	goto	u981
   801   000852  5059               	movf	(main@i_617+1)^0,w,c
   802   000854  E109               	bnz	u980
   803   000856  0E04               	movlw	4
   804   000858  5C58               	subwf	main@i_617^0,w,c
   805   00085A  A0D8               	btfss	status,0,c
   806   00085C  EF32  F004         	goto	u981
   807   000860  EF34  F004         	goto	u980
   808   000864                     u981:
   809   000864  EFDE  F003         	goto	l1587
   810   000868                     u980:
   811   000868                     l90:
   812   000868  EF34  F004         	goto	l90
   813   00086C  EF00  F000         	goto	start
   814   000870                     __end_of_main:
   815                           	callstack 0
   816                           
   817 ;; *************** function _setLED *****************
   818 ;; Defined at:
   819 ;;		line 58 in file "main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  pos             1    wreg     unsigned char 
   822 ;;  value           1    0[COMRAM] unsigned char 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  pos             1    3[COMRAM] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   834 ;;      Params:         1       0       0       0       0       0       0
   835 ;;      Locals:         1       0       0       0       0       0       0
   836 ;;      Temps:          2       0       0       0       0       0       0
   837 ;;      Totals:         4       0       0       0       0       0       0
   838 ;;Total ram usage:        4 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_main
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           	psect	text1
   848   000D64                     __ptext1:
   849                           	callstack 0
   850   000D64                     _setLED:
   851                           	callstack 30
   852                           
   853                           ;incstack = 0
   854                           ;setLED@pos stored from wreg
   855   000D64  6E04               	movwf	setLED@pos^0,c
   856   000D66                     
   857                           ;main.c: 59:     switch (pos) {
   858   000D66  EFD1  F006         	goto	l1481
   859   000D6A                     l48:
   860                           
   861                           ;main.c: 61:             PORTDbits.RD0 = value;
   862   000D6A  B001               	btfsc	setLED@value^0,0,c
   863   000D6C  D002               	bra	u875
   864   000D6E  9083               	bcf	131,0,c	;volatile
   865   000D70  D001               	bra	u876
   866   000D72                     u875:
   867   000D72  8083               	bsf	131,0,c	;volatile
   868   000D74                     u876:
   869                           
   870                           ;main.c: 62:             break;
   871   000D74  EFEE  F006         	goto	l53
   872   000D78                     l50:
   873                           
   874                           ;main.c: 64:             PORTDbits.RD1 = value;
   875   000D78  B001               	btfsc	setLED@value^0,0,c
   876   000D7A  D002               	bra	u885
   877   000D7C  9283               	bcf	131,1,c	;volatile
   878   000D7E  D001               	bra	u886
   879   000D80                     u885:
   880   000D80  8283               	bsf	131,1,c	;volatile
   881   000D82                     u886:
   882                           
   883                           ;main.c: 65:             break;
   884   000D82  EFEE  F006         	goto	l53
   885   000D86                     l51:
   886                           
   887                           ;main.c: 67:             PORTDbits.RD2 = value;
   888   000D86  B001               	btfsc	setLED@value^0,0,c
   889   000D88  D002               	bra	u895
   890   000D8A  9483               	bcf	131,2,c	;volatile
   891   000D8C  D001               	bra	u896
   892   000D8E                     u895:
   893   000D8E  8483               	bsf	131,2,c	;volatile
   894   000D90                     u896:
   895                           
   896                           ;main.c: 68:             break;
   897   000D90  EFEE  F006         	goto	l53
   898   000D94                     l52:
   899                           
   900                           ;main.c: 70:             PORTDbits.RD3 = value;
   901   000D94  B001               	btfsc	setLED@value^0,0,c
   902   000D96  D002               	bra	u905
   903   000D98  9683               	bcf	131,3,c	;volatile
   904   000D9A  D001               	bra	u906
   905   000D9C                     u905:
   906   000D9C  8683               	bsf	131,3,c	;volatile
   907   000D9E                     u906:
   908                           
   909                           ;main.c: 71:             break;
   910   000D9E  EFEE  F006         	goto	l53
   911   000DA2                     l1481:
   912   000DA2  5004               	movf	setLED@pos^0,w,c
   913   000DA4  6E02               	movwf	??_setLED^0,c
   914   000DA6  6A03               	clrf	(??_setLED+1)^0,c
   915                           
   916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   917                           ; Switch size 1, requested type "simple"
   918                           ; Number of cases is 1, Range of values is 0 to 0
   919                           ; switch strategies available:
   920                           ; Name         Instructions Cycles
   921                           ; simple_byte            4     3 (average)
   922                           ;	Chosen strategy is simple_byte
   923   000DA8  5003               	movf	(??_setLED+1)^0,w,c
   924   000DAA  0A00               	xorlw	0	; case 0
   925   000DAC  B4D8               	btfsc	status,2,c
   926   000DAE  EFDB  F006         	goto	l1621
   927   000DB2  EFEE  F006         	goto	l53
   928   000DB6                     l1621:
   929                           
   930                           ; Switch size 1, requested type "simple"
   931                           ; Number of cases is 4, Range of values is 1 to 4
   932                           ; switch strategies available:
   933                           ; Name         Instructions Cycles
   934                           ; simple_byte           13     7 (average)
   935                           ;	Chosen strategy is simple_byte
   936   000DB6  5002               	movf	??_setLED^0,w,c
   937   000DB8  0A01               	xorlw	1	; case 1
   938   000DBA  B4D8               	btfsc	status,2,c
   939   000DBC  EFB5  F006         	goto	l48
   940   000DC0  0A03               	xorlw	3	; case 2
   941   000DC2  B4D8               	btfsc	status,2,c
   942   000DC4  EFBC  F006         	goto	l50
   943   000DC8  0A01               	xorlw	1	; case 3
   944   000DCA  B4D8               	btfsc	status,2,c
   945   000DCC  EFC3  F006         	goto	l51
   946   000DD0  0A07               	xorlw	7	; case 4
   947   000DD2  B4D8               	btfsc	status,2,c
   948   000DD4  EFCA  F006         	goto	l52
   949   000DD8  EFEE  F006         	goto	l53
   950   000DDC                     l53:
   951   000DDC  0012               	return		;funcret
   952   000DDE                     __end_of_setLED:
   953                           	callstack 0
   954                           
   955 ;; *************** function _rand *****************
   956 ;; Defined at:
   957 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\rand.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  2   12[COMRAM] int 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   971 ;;      Params:         2       0       0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0       0       0
   973 ;;      Temps:          4       0       0       0       0       0       0
   974 ;;      Totals:         6       0       0       0       0       0       0
   975 ;;Total ram usage:        6 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 1
   978 ;; This function calls:
   979 ;;		___lmul
   980 ;; This function is called by:
   981 ;;		_main
   982 ;;		_generate_random_sequence_easy
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text2
   987   000E58                     __ptext2:
   988                           	callstack 0
   989   000E58                     _rand:
   990                           	callstack 29
   991   000E58  C06F  F001         	movff	_seed,___lmul@multiplier
   992   000E5C  C070  F002         	movff	_seed+1,___lmul@multiplier+1
   993   000E60  C071  F003         	movff	_seed+2,___lmul@multiplier+2
   994   000E64  C072  F004         	movff	_seed+3,___lmul@multiplier+3
   995   000E68  0E2D               	movlw	45
   996   000E6A  6E05               	movwf	___lmul@multiplicand^0,c
   997   000E6C  0E7F               	movlw	127
   998   000E6E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   999   000E70  0E95               	movlw	149
  1000   000E72  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1001   000E74  0E4C               	movlw	76
  1002   000E76  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1003   000E78  EC62  F007         	call	___lmul	;wreg free
  1004   000E7C  0E01               	movlw	1
  1005   000E7E  2401               	addwf	?___lmul^0,w,c
  1006   000E80  6E6F               	movwf	_seed^0,c
  1007   000E82  0E00               	movlw	0
  1008   000E84  2002               	addwfc	(?___lmul+1)^0,w,c
  1009   000E86  6E70               	movwf	(_seed+1)^0,c
  1010   000E88  0E00               	movlw	0
  1011   000E8A  2003               	addwfc	(?___lmul+2)^0,w,c
  1012   000E8C  6E71               	movwf	(_seed+2)^0,c
  1013   000E8E  0E00               	movlw	0
  1014   000E90  2004               	addwfc	(?___lmul+3)^0,w,c
  1015   000E92  6E72               	movwf	(_seed+3)^0,c
  1016   000E94  C06F  F00F         	movff	_seed,??_rand
  1017   000E98  C070  F010         	movff	_seed+1,??_rand+1
  1018   000E9C  C071  F011         	movff	_seed+2,??_rand+2
  1019   000EA0  C072  F012         	movff	_seed+3,??_rand+3
  1020   000EA4  0E12               	movlw	18
  1021   000EA6  EF5A  F007         	goto	u910
  1022   000EAA                     u915:
  1023   000EAA  90D8               	bcf	status,0,c
  1024   000EAC  3212               	rrcf	(??_rand+3)^0,f,c
  1025   000EAE  3211               	rrcf	(??_rand+2)^0,f,c
  1026   000EB0  3210               	rrcf	(??_rand+1)^0,f,c
  1027   000EB2  320F               	rrcf	??_rand^0,f,c
  1028   000EB4                     u910:
  1029   000EB4  2EE8               	decfsz	wreg,f,c
  1030   000EB6  EF55  F007         	goto	u915
  1031   000EBA  C00F  F00D         	movff	??_rand,?_rand
  1032   000EBE  C010  F00E         	movff	??_rand+1,?_rand+1
  1033   000EC2  0012               	return		;funcret
  1034   000EC4                     __end_of_rand:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function ___lmul *****************
  1038 ;; Defined at:
  1039 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  multiplier      4    0[COMRAM] unsigned long 
  1042 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  product         4    8[COMRAM] unsigned long 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  4    0[COMRAM] unsigned long 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1054 ;;      Params:         8       0       0       0       0       0       0
  1055 ;;      Locals:         4       0       0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0
  1057 ;;      Totals:        12       0       0       0       0       0       0
  1058 ;;Total ram usage:       12 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_rand
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text3
  1068   000EC4                     __ptext3:
  1069                           	callstack 0
  1070   000EC4                     ___lmul:
  1071                           	callstack 29
  1072   000EC4  0E00               	movlw	0
  1073   000EC6  6E09               	movwf	___lmul@product^0,c
  1074   000EC8  0E00               	movlw	0
  1075   000ECA  6E0A               	movwf	(___lmul@product+1)^0,c
  1076   000ECC  0E00               	movlw	0
  1077   000ECE  6E0B               	movwf	(___lmul@product+2)^0,c
  1078   000ED0  0E00               	movlw	0
  1079   000ED2  6E0C               	movwf	(___lmul@product+3)^0,c
  1080   000ED4                     l1459:
  1081   000ED4  A001               	btfss	___lmul@multiplier^0,0,c
  1082   000ED6  EF6F  F007         	goto	u841
  1083   000EDA  EF71  F007         	goto	u840
  1084   000EDE                     u841:
  1085   000EDE  EF79  F007         	goto	l1463
  1086   000EE2                     u840:
  1087   000EE2  5005               	movf	___lmul@multiplicand^0,w,c
  1088   000EE4  2609               	addwf	___lmul@product^0,f,c
  1089   000EE6  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1090   000EE8  220A               	addwfc	(___lmul@product+1)^0,f,c
  1091   000EEA  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1092   000EEC  220B               	addwfc	(___lmul@product+2)^0,f,c
  1093   000EEE  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1094   000EF0  220C               	addwfc	(___lmul@product+3)^0,f,c
  1095   000EF2                     l1463:
  1096   000EF2  90D8               	bcf	status,0,c
  1097   000EF4  3605               	rlcf	___lmul@multiplicand^0,f,c
  1098   000EF6  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1099   000EF8  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1100   000EFA  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1101   000EFC  90D8               	bcf	status,0,c
  1102   000EFE  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1103   000F00  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1104   000F02  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1105   000F04  3201               	rrcf	___lmul@multiplier^0,f,c
  1106   000F06  5001               	movf	___lmul@multiplier^0,w,c
  1107   000F08  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1108   000F0A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1109   000F0C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1110   000F0E  A4D8               	btfss	status,2,c
  1111   000F10  EF8C  F007         	goto	u851
  1112   000F14  EF8E  F007         	goto	u850
  1113   000F18                     u851:
  1114   000F18  EF6A  F007         	goto	l1459
  1115   000F1C                     u850:
  1116   000F1C  C009  F001         	movff	___lmul@product,?___lmul
  1117   000F20  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1118   000F24  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1119   000F28  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1120   000F2C  0012               	return		;funcret
  1121   000F2E                     __end_of___lmul:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _printf *****************
  1125 ;; Defined at:
  1126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  fmt             2   63[COMRAM] PTR const unsigned char 
  1129 ;;		 -> STR_3(4), STR_2(4), STR_1(13), 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  ap              2   67[COMRAM] PTR void [1]
  1132 ;;		 -> ?_printf(2), 
  1133 ;;  ret             2    0        int 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2   63[COMRAM] int 
  1136 ;; Registers used:
  1137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1143 ;;      Params:         4       0       0       0       0       0       0
  1144 ;;      Locals:         2       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0
  1146 ;;      Totals:         6       0       0       0       0       0       0
  1147 ;;Total ram usage:        6 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 7
  1150 ;; This function calls:
  1151 ;;		_vfprintf
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text4
  1158   001000                     __ptext4:
  1159                           	callstack 0
  1160   001000                     _printf:
  1161                           	callstack 23
  1162   001000  0E42               	movlw	low (?_printf+2)
  1163   001002  6E44               	movwf	printf@ap^0,c
  1164   001004  0E00               	movlw	high (?_printf+2)
  1165   001006  6E45               	movwf	(printf@ap+1)^0,c
  1166   001008  0E00               	movlw	0
  1167   00100A  6E38               	movwf	vfprintf@fp^0,c
  1168   00100C  0E00               	movlw	0
  1169   00100E  6E39               	movwf	(vfprintf@fp+1)^0,c
  1170   001010  C040  F03A         	movff	printf@fmt,vfprintf@fmt
  1171   001014  C041  F03B         	movff	printf@fmt+1,vfprintf@fmt+1
  1172   001018  0E44               	movlw	low printf@ap
  1173   00101A  6E3C               	movwf	vfprintf@ap^0,c
  1174   00101C  0E00               	movlw	high printf@ap
  1175   00101E  6E3D               	movwf	(vfprintf@ap+1)^0,c
  1176   001020  EC97  F007         	call	_vfprintf	;wreg free
  1177   001024  0012               	return		;funcret
  1178   001026                     __end_of_printf:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _vfprintf *****************
  1182 ;; Defined at:
  1183 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  1186 ;;		 -> NULL(0), 
  1187 ;;  fmt             2   57[COMRAM] PTR const unsigned char 
  1188 ;;		 -> STR_3(4), STR_2(4), STR_1(13), 
  1189 ;;  ap              2   59[COMRAM] PTR PTR void 
  1190 ;;		 -> printf@ap(2), 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  cfmt            2   61[COMRAM] PTR unsigned char 
  1193 ;;		 -> STR_3(4), STR_2(4), STR_1(13), 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  2   55[COMRAM] int 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1203 ;;      Params:         6       0       0       0       0       0       0
  1204 ;;      Locals:         2       0       0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0
  1206 ;;      Totals:         8       0       0       0       0       0       0
  1207 ;;Total ram usage:        8 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 6
  1210 ;; This function calls:
  1211 ;;		_vfpfcnvrt
  1212 ;; This function is called by:
  1213 ;;		_printf
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text5
  1218   000F2E                     __ptext5:
  1219                           	callstack 0
  1220   000F2E                     _vfprintf:
  1221                           	callstack 23
  1222   000F2E                     
  1223                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1224   000F2E  C03A  F03E         	movff	vfprintf@fmt,vfprintf@cfmt
  1225   000F32  C03B  F03F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1226                           
  1227                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1228   000F36  EFAB  F007         	goto	l1471
  1229   000F3A                     l1469:
  1230                           
  1231                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1232   000F3A  C038  F02A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1233   000F3E  C039  F02B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1234   000F42  0E3E               	movlw	low vfprintf@cfmt
  1235   000F44  6E2C               	movwf	vfpfcnvrt@fmt^0,c
  1236   000F46  0E00               	movlw	high vfprintf@cfmt
  1237   000F48  6E2D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1238   000F4A  C03C  F02E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1239   000F4E  C03D  F02F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1240   000F52  EC02  F005         	call	_vfpfcnvrt	;wreg free
  1241   000F56                     l1471:
  1242                           
  1243                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1244   000F56  C03E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1245   000F5A  C03F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1246   000F5E                     	if	0	;tblptru may be non-zero
  1247   000F5E                     	endif
  1248   000F5E                     	if	0	;tblptru may be non-zero
  1249   000F5E                     	endif
  1250   000F5E  0008               	tblrd		*
  1251   000F60  50F5               	movf	tablat,w,c
  1252   000F62  0900               	iorlw	0
  1253   000F64  A4D8               	btfss	status,2,c
  1254   000F66  EFB7  F007         	goto	u861
  1255   000F6A  EFB9  F007         	goto	u860
  1256   000F6E                     u861:
  1257   000F6E  EF9D  F007         	goto	l1469
  1258   000F72                     u860:
  1259   000F72                     
  1260                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1261   000F72  0E00               	movlw	0
  1262   000F74  6E39               	movwf	(?_vfprintf+1)^0,c
  1263   000F76  0E00               	movlw	0
  1264   000F78  6E38               	movwf	?_vfprintf^0,c
  1265   000F7A  0012               	return		;funcret
  1266   000F7C                     __end_of_vfprintf:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _vfpfcnvrt *****************
  1270 ;; Defined at:
  1271 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  1274 ;;		 -> NULL(0), 
  1275 ;;  fmt             2   43[COMRAM] PTR PTR unsigned char 
  1276 ;;		 -> vfprintf@cfmt(2), 
  1277 ;;  ap              2   45[COMRAM] PTR PTR void 
  1278 ;;		 -> printf@ap(2), 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  convarg         4   49[COMRAM] struct .
  1281 ;;  cp              2   53[COMRAM] PTR unsigned char 
  1282 ;;		 -> STR_3(4), STR_2(4), STR_1(13), 
  1283 ;;  i               2    0        int 
  1284 ;;  done            2    0        int 
  1285 ;;  c               1    0        unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1295 ;;      Params:         6       0       0       0       0       0       0
  1296 ;;      Locals:         6       0       0       0       0       0       0
  1297 ;;      Temps:          2       0       0       0       0       0       0
  1298 ;;      Totals:        14       0       0       0       0       0       0
  1299 ;;Total ram usage:       14 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 5
  1302 ;; This function calls:
  1303 ;;		_dtoa
  1304 ;;		_fputc
  1305 ;; This function is called by:
  1306 ;;		_vfprintf
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text6
  1311   000A04                     __ptext6:
  1312                           	callstack 0
  1313   000A04                     _vfpfcnvrt:
  1314                           	callstack 23
  1315   000A04                     
  1316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1317   000A04  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1318   000A08  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1319   000A0C  CFDE FFF6          	movff	postinc2,tblptrl
  1320   000A10  CFDD FFF7          	movff	postdec2,tblptrh
  1321   000A14                     	if	0	;tblptru may be non-zero
  1322   000A14                     	endif
  1323   000A14                     	if	0	;tblptru may be non-zero
  1324   000A14                     	endif
  1325   000A14  0008               	tblrd		*
  1326   000A16  50F5               	movf	tablat,w,c
  1327   000A18  0A25               	xorlw	37
  1328   000A1A  A4D8               	btfss	status,2,c
  1329   000A1C  EF12  F005         	goto	u811
  1330   000A20  EF14  F005         	goto	u810
  1331   000A24                     u811:
  1332   000A24  EF7E  F005         	goto	l1451
  1333   000A28                     u810:
  1334   000A28                     
  1335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1336   000A28  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1337   000A2C  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1338   000A30  2ADE               	incf	postinc2,f,c
  1339   000A32  0E00               	movlw	0
  1340   000A34  22DD               	addwfc	postdec2,f,c
  1341   000A36                     
  1342                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1343   000A36  0E00               	movlw	0
  1344   000A38  6E6B               	movwf	(_width+1)^0,c
  1345   000A3A  0E00               	movlw	0
  1346   000A3C  6E6A               	movwf	_width^0,c
  1347   000A3E  C06A  F06E         	movff	_width,_flags
  1348   000A42                     
  1349                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1350   000A42  686C               	setf	_prec^0,c
  1351   000A44  686D               	setf	(_prec+1)^0,c
  1352   000A46                     
  1353                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1354   000A46  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1355   000A4A  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1356   000A4E  CFDE F036          	movff	postinc2,vfpfcnvrt@cp
  1357   000A52  CFDD F037          	movff	postdec2,vfpfcnvrt@cp+1
  1358   000A56                     
  1359                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1360   000A56  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1361   000A5A  C037  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1362   000A5E                     	if	0	;tblptru may be non-zero
  1363   000A5E                     	endif
  1364   000A5E                     	if	0	;tblptru may be non-zero
  1365   000A5E                     	endif
  1366   000A5E  0008               	tblrd		*
  1367   000A60  50F5               	movf	tablat,w,c
  1368   000A62  0A64               	xorlw	100
  1369   000A64  B4D8               	btfsc	status,2,c
  1370   000A66  EF37  F005         	goto	u821
  1371   000A6A  EF39  F005         	goto	u820
  1372   000A6E                     u821:
  1373   000A6E  EF47  F005         	goto	l1441
  1374   000A72                     u820:
  1375   000A72  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1376   000A76  C037  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1377   000A7A                     	if	0	;tblptru may be non-zero
  1378   000A7A                     	endif
  1379   000A7A                     	if	0	;tblptru may be non-zero
  1380   000A7A                     	endif
  1381   000A7A  0008               	tblrd		*
  1382   000A7C  50F5               	movf	tablat,w,c
  1383   000A7E  0A69               	xorlw	105
  1384   000A80  A4D8               	btfss	status,2,c
  1385   000A82  EF45  F005         	goto	u831
  1386   000A86  EF47  F005         	goto	u830
  1387   000A8A                     u831:
  1388   000A8A  EF75  F005         	goto	l1447
  1389   000A8E                     u830:
  1390   000A8E                     l1441:
  1391                           
  1392                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1393   000A8E  C02E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1394   000A92  C02F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1395   000A96  CFDF F030          	movff	indf2,??_vfpfcnvrt
  1396   000A9A  0E02               	movlw	2
  1397   000A9C  26DE               	addwf	postinc2,f,c
  1398   000A9E  CFDF F031          	movff	indf2,??_vfpfcnvrt+1
  1399   000AA2  0E00               	movlw	0
  1400   000AA4  22DD               	addwfc	postdec2,f,c
  1401   000AA6  C030  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1402   000AAA  C031  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1403   000AAE  CFDE F032          	movff	postinc2,vfpfcnvrt@convarg
  1404   000AB2  CFDD F033          	movff	postdec2,vfpfcnvrt@convarg+1
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1407   000AB6  0E01               	movlw	1
  1408   000AB8  2436               	addwf	vfpfcnvrt@cp^0,w,c
  1409   000ABA  6E30               	movwf	??_vfpfcnvrt^0,c
  1410   000ABC  0E00               	movlw	0
  1411   000ABE  2037               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1412   000AC0  6E31               	movwf	(??_vfpfcnvrt+1)^0,c
  1413   000AC2  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1414   000AC6  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1415   000ACA  C030  FFDE         	movff	??_vfpfcnvrt,postinc2
  1416   000ACE  C031  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1417   000AD2                     
  1418                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1419   000AD2  C02A  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1420   000AD6  C02B  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1421   000ADA  C032  F01F         	movff	vfpfcnvrt@convarg,dtoa@d
  1422   000ADE  C033  F020         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1423   000AE2  EC38  F004         	call	_dtoa	;wreg free
  1424   000AE6  EF92  F005         	goto	l826
  1425   000AEA                     l1447:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1428   000AEA  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1429   000AEE  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1430   000AF2  2ADE               	incf	postinc2,f,c
  1431   000AF4  0E00               	movlw	0
  1432   000AF6  22DD               	addwfc	postdec2,f,c
  1433   000AF8  EF92  F005         	goto	l826
  1434   000AFC                     l1451:
  1435                           
  1436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1437   000AFC  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1438   000B00  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1439   000B04  CFDE FFF6          	movff	postinc2,tblptrl
  1440   000B08  CFDD FFF7          	movff	postdec2,tblptrh
  1441   000B0C                     	if	0	;tblptru may be non-zero
  1442   000B0C                     	endif
  1443   000B0C                     	if	0	;tblptru may be non-zero
  1444   000B0C                     	endif
  1445   000B0C  0008               	tblrd		*
  1446   000B0E  50F5               	movf	tablat,w,c
  1447   000B10  6E02               	movwf	fputc@c^0,c
  1448   000B12  6A03               	clrf	(fputc@c+1)^0,c
  1449   000B14  C02A  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1450   000B18  C02B  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1451   000B1C  EC93  F005         	call	_fputc	;wreg free
  1452   000B20  EF75  F005         	goto	l1447
  1453   000B24                     l826:
  1454   000B24  0012               	return		;funcret
  1455   000B26                     __end_of_vfpfcnvrt:
  1456                           	callstack 0
  1457                           
  1458 ;; *************** function _dtoa *****************
  1459 ;; Defined at:
  1460 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1463 ;;		 -> NULL(0), 
  1464 ;;  d               2   30[COMRAM] int 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  i               2   38[COMRAM] int 
  1467 ;;  w               2   36[COMRAM] int 
  1468 ;;  p               2   34[COMRAM] int 
  1469 ;;  s               1   40[COMRAM] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  1    wreg      void 
  1472 ;; Registers used:
  1473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1479 ;;      Params:         4       0       0       0       0       0       0
  1480 ;;      Locals:         9       0       0       0       0       0       0
  1481 ;;      Temps:          0       0       0       0       0       0       0
  1482 ;;      Totals:        13       0       0       0       0       0       0
  1483 ;;Total ram usage:       13 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; Hardware stack levels required when called: 4
  1486 ;; This function calls:
  1487 ;;		___awdiv
  1488 ;;		___awmod
  1489 ;;		_abs
  1490 ;;		_pad
  1491 ;; This function is called by:
  1492 ;;		_vfpfcnvrt
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text7
  1497   000870                     __ptext7:
  1498                           	callstack 0
  1499   000870                     _dtoa:
  1500                           	callstack 23
  1501   000870                     
  1502                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  1503   000870  BE20               	btfsc	(dtoa@d+1)^0,7,c
  1504   000872  EF3D  F004         	goto	u711
  1505   000876  EF40  F004         	goto	u710
  1506   00087A                     u711:
  1507   00087A  0E01               	movlw	1
  1508   00087C  EF41  F004         	goto	u720
  1509   000880                     u710:
  1510   000880  0E00               	movlw	0
  1511   000882                     u720:
  1512   000882  6E29               	movwf	dtoa@s^0,c
  1513   000884                     
  1514                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  1515   000884  5029               	movf	dtoa@s^0,w,c
  1516   000886  B4D8               	btfsc	status,2,c
  1517   000888  EF48  F004         	goto	u731
  1518   00088C  EF4A  F004         	goto	u730
  1519   000890                     u731:
  1520   000890  EF4E  F004         	goto	l1383
  1521   000894                     u730:
  1522   000894                     
  1523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  1524   000894  6C1F               	negf	dtoa@d^0,c
  1525   000896  1E20               	comf	(dtoa@d+1)^0,f,c
  1526   000898  B0D8               	btfsc	status,0,c
  1527   00089A  2A20               	incf	(dtoa@d+1)^0,f,c
  1528   00089C                     l1383:
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  1531   00089C  BE6D               	btfsc	(_prec+1)^0,7,c
  1532   00089E  EF55  F004         	goto	u740
  1533   0008A2  EF53  F004         	goto	u741
  1534   0008A6                     u741:
  1535   0008A6  EF5B  F004         	goto	l805
  1536   0008AA                     u740:
  1537   0008AA  0E00               	movlw	0
  1538   0008AC  6E24               	movwf	(dtoa@p+1)^0,c
  1539   0008AE  0E01               	movlw	1
  1540   0008B0  6E23               	movwf	dtoa@p^0,c
  1541   0008B2  EF5F  F004         	goto	l807
  1542   0008B6                     l805:
  1543   0008B6  C06C  F023         	movff	_prec,dtoa@p
  1544   0008BA  C06D  F024         	movff	_prec+1,dtoa@p+1
  1545   0008BE                     l807:
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  1548   0008BE  C06A  F025         	movff	_width,dtoa@w
  1549   0008C2  C06B  F026         	movff	_width+1,dtoa@w+1
  1550   0008C6                     
  1551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  1552   0008C6  5029               	movf	dtoa@s^0,w,c
  1553   0008C8  B4D8               	btfsc	status,2,c
  1554   0008CA  EF69  F004         	goto	u751
  1555   0008CE  EF6B  F004         	goto	u750
  1556   0008D2                     u751:
  1557   0008D2  EF82  F004         	goto	l808
  1558   0008D6                     u750:
  1559   0008D6                     
  1560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  1561   0008D6  0625               	decf	dtoa@w^0,f,c
  1562   0008D8  A0D8               	btfss	status,0,c
  1563   0008DA  0626               	decf	(dtoa@w+1)^0,f,c
  1564   0008DC                     
  1565                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  1566   0008DC  5029               	movf	dtoa@s^0,w,c
  1567   0008DE  A4D8               	btfss	status,2,c
  1568   0008E0  EF74  F004         	goto	u761
  1569   0008E4  EF76  F004         	goto	u760
  1570   0008E8                     u761:
  1571   0008E8  EF7C  F004         	goto	l1395
  1572   0008EC                     u760:
  1573   0008EC  0E00               	movlw	0
  1574   0008EE  6E22               	movwf	(_dtoa$1127+1)^0,c
  1575   0008F0  0E2B               	movlw	43
  1576   0008F2  6E21               	movwf	_dtoa$1127^0,c
  1577   0008F4  EF80  F004         	goto	l1397
  1578   0008F8                     l1395:
  1579   0008F8  0E00               	movlw	0
  1580   0008FA  6E22               	movwf	(_dtoa$1127+1)^0,c
  1581   0008FC  0E2D               	movlw	45
  1582   0008FE  6E21               	movwf	_dtoa$1127^0,c
  1583   000900                     l1397:
  1584   000900  C021  F029         	movff	_dtoa$1127,dtoa@s
  1585   000904                     l808:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  1588   000904  0E00               	movlw	0
  1589   000906  6E28               	movwf	(dtoa@i+1)^0,c
  1590   000908  0E1F               	movlw	31
  1591   00090A  6E27               	movwf	dtoa@i^0,c
  1592   00090C                     
  1593                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  1594   00090C  0E00               	movlw	0
  1595   00090E  0100               	movlb	0	; () banked
  1596   000910  6F9F               	movwf	(_dbuf+31)& (0+255),b
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1599   000912  EFBB  F004         	goto	l1411
  1600   000916                     l1401:
  1601                           
  1602                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  1603   000916  0627               	decf	dtoa@i^0,f,c
  1604   000918  A0D8               	btfss	status,0,c
  1605   00091A  0628               	decf	(dtoa@i+1)^0,f,c
  1606   00091C                     
  1607                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1608   00091C  0E80               	movlw	low _dbuf
  1609   00091E  2427               	addwf	dtoa@i^0,w,c
  1610   000920  6ED9               	movwf	fsr2l,c
  1611   000922  0E00               	movlw	high _dbuf
  1612   000924  2028               	addwfc	(dtoa@i+1)^0,w,c
  1613   000926  6EDA               	movwf	fsr2h,c
  1614   000928  C01F  F001         	movff	dtoa@d,___awmod@dividend
  1615   00092C  C020  F002         	movff	dtoa@d+1,___awmod@dividend+1
  1616   000930  0E00               	movlw	0
  1617   000932  6E04               	movwf	(___awmod@divisor+1)^0,c
  1618   000934  0E0A               	movlw	10
  1619   000936  6E03               	movwf	___awmod@divisor^0,c
  1620   000938  EC5A  F006         	call	___awmod	;wreg free
  1621   00093C  C001  F007         	movff	?___awmod,abs@a
  1622   000940  C002  F008         	movff	?___awmod+1,abs@a+1
  1623   000944  ECE0  F007         	call	_abs	;wreg free
  1624   000948  5007               	movf	?_abs^0,w,c
  1625   00094A  0F30               	addlw	48
  1626   00094C  6EDF               	movwf	indf2,c
  1627   00094E                     
  1628                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  1629   00094E  0623               	decf	dtoa@p^0,f,c
  1630   000950  A0D8               	btfss	status,0,c
  1631   000952  0624               	decf	(dtoa@p+1)^0,f,c
  1632   000954                     
  1633                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  1634   000954  0625               	decf	dtoa@w^0,f,c
  1635   000956  A0D8               	btfss	status,0,c
  1636   000958  0626               	decf	(dtoa@w+1)^0,f,c
  1637   00095A                     
  1638                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  1639   00095A  C01F  F001         	movff	dtoa@d,___awdiv@dividend
  1640   00095E  C020  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  1641   000962  0E00               	movlw	0
  1642   000964  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1643   000966  0E0A               	movlw	10
  1644   000968  6E03               	movwf	___awdiv@divisor^0,c
  1645   00096A  ECF8  F005         	call	___awdiv	;wreg free
  1646   00096E  C001  F01F         	movff	?___awdiv,dtoa@d
  1647   000972  C002  F020         	movff	?___awdiv+1,dtoa@d+1
  1648   000976                     l1411:
  1649                           
  1650                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1651   000976  BE28               	btfsc	(dtoa@i+1)^0,7,c
  1652   000978  EFC6  F004         	goto	u771
  1653   00097C  5028               	movf	(dtoa@i+1)^0,w,c
  1654   00097E  E108               	bnz	u770
  1655   000980  0427               	decf	dtoa@i^0,w,c
  1656   000982  A0D8               	btfss	status,0,c
  1657   000984  EFC6  F004         	goto	u771
  1658   000988  EFC8  F004         	goto	u770
  1659   00098C                     u771:
  1660   00098C  EFDE  F004         	goto	l1417
  1661   000990                     u770:
  1662   000990  501F               	movf	dtoa@d^0,w,c
  1663   000992  1020               	iorwf	(dtoa@d+1)^0,w,c
  1664   000994  A4D8               	btfss	status,2,c
  1665   000996  EFCF  F004         	goto	u781
  1666   00099A  EFD1  F004         	goto	u780
  1667   00099E                     u781:
  1668   00099E  EF8B  F004         	goto	l1401
  1669   0009A2                     u780:
  1670   0009A2  BE24               	btfsc	(dtoa@p+1)^0,7,c
  1671   0009A4  EFDE  F004         	goto	u790
  1672   0009A8  5024               	movf	(dtoa@p+1)^0,w,c
  1673   0009AA  E106               	bnz	u791
  1674   0009AC  0423               	decf	dtoa@p^0,w,c
  1675   0009AE  B0D8               	btfsc	status,0,c
  1676   0009B0  EFDC  F004         	goto	u791
  1677   0009B4  EFDE  F004         	goto	u790
  1678   0009B8                     u791:
  1679   0009B8  EF8B  F004         	goto	l1401
  1680   0009BC                     u790:
  1681   0009BC                     l1417:
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  1684   0009BC  5029               	movf	dtoa@s^0,w,c
  1685   0009BE  B4D8               	btfsc	status,2,c
  1686   0009C0  EFE4  F004         	goto	u801
  1687   0009C4  EFE6  F004         	goto	u800
  1688   0009C8                     u801:
  1689   0009C8  EFF1  F004         	goto	l1423
  1690   0009CC                     u800:
  1691   0009CC                     
  1692                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  1693   0009CC  0627               	decf	dtoa@i^0,f,c
  1694   0009CE  A0D8               	btfss	status,0,c
  1695   0009D0  0628               	decf	(dtoa@i+1)^0,f,c
  1696   0009D2                     
  1697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  1698   0009D2  0E80               	movlw	low _dbuf
  1699   0009D4  2427               	addwf	dtoa@i^0,w,c
  1700   0009D6  6ED9               	movwf	fsr2l,c
  1701   0009D8  0E00               	movlw	high _dbuf
  1702   0009DA  2028               	addwfc	(dtoa@i+1)^0,w,c
  1703   0009DC  6EDA               	movwf	fsr2h,c
  1704   0009DE  C029  FFDF         	movff	dtoa@s,indf2
  1705   0009E2                     l1423:
  1706                           
  1707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1708   0009E2  C01D  F012         	movff	dtoa@fp,pad@fp
  1709   0009E6  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  1710   0009EA  0E80               	movlw	low _dbuf
  1711   0009EC  2427               	addwf	dtoa@i^0,w,c
  1712   0009EE  6E14               	movwf	pad@buf^0,c
  1713   0009F0  0E00               	movlw	high _dbuf
  1714   0009F2  2028               	addwfc	(dtoa@i+1)^0,w,c
  1715   0009F4  6E15               	movwf	(pad@buf+1)^0,c
  1716   0009F6  C025  F016         	movff	dtoa@w,pad@p
  1717   0009FA  C026  F017         	movff	dtoa@w+1,pad@p+1
  1718   0009FE  ECEF  F006         	call	_pad	;wreg free
  1719   000A02  0012               	return		;funcret
  1720   000A04                     __end_of_dtoa:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _pad *****************
  1724 ;; Defined at:
  1725 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  1728 ;;		 -> NULL(0), 
  1729 ;;  buf             2   19[COMRAM] PTR unsigned char 
  1730 ;;		 -> dbuf(32), 
  1731 ;;  p               2   21[COMRAM] int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  w               2   26[COMRAM] int 
  1734 ;;  i               2   24[COMRAM] int 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1744 ;;      Params:         6       0       0       0       0       0       0
  1745 ;;      Locals:         4       0       0       0       0       0       0
  1746 ;;      Temps:          1       0       0       0       0       0       0
  1747 ;;      Totals:        11       0       0       0       0       0       0
  1748 ;;Total ram usage:       11 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 3
  1751 ;; This function calls:
  1752 ;;		_fputc
  1753 ;;		_fputs
  1754 ;; This function is called by:
  1755 ;;		_dtoa
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text8
  1760   000DDE                     __ptext8:
  1761                           	callstack 0
  1762   000DDE                     _pad:
  1763                           	callstack 23
  1764   000DDE                     
  1765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  1766   000DDE  BE17               	btfsc	(pad@p+1)^0,7,c
  1767   000DE0  EFF4  F006         	goto	u681
  1768   000DE4  EFF6  F006         	goto	u680
  1769   000DE8                     u681:
  1770   000DE8  EFFC  F006         	goto	l1363
  1771   000DEC                     u680:
  1772   000DEC  C016  F01B         	movff	pad@p,pad@w
  1773   000DF0  C017  F01C         	movff	pad@p+1,pad@w+1
  1774   000DF4  EF00  F007         	goto	l796
  1775   000DF8                     l1363:
  1776   000DF8  0E00               	movlw	0
  1777   000DFA  6E1C               	movwf	(pad@w+1)^0,c
  1778   000DFC  0E00               	movlw	0
  1779   000DFE  6E1B               	movwf	pad@w^0,c
  1780   000E00                     l796:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  1783   000E00  0E00               	movlw	0
  1784   000E02  6E1A               	movwf	(pad@i+1)^0,c
  1785   000E04  0E00               	movlw	0
  1786   000E06  6E19               	movwf	pad@i^0,c
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1789   000E08  EF12  F007         	goto	l1369
  1790   000E0C                     l1365:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  1793   000E0C  0E00               	movlw	0
  1794   000E0E  6E03               	movwf	(fputc@c+1)^0,c
  1795   000E10  0E20               	movlw	32
  1796   000E12  6E02               	movwf	fputc@c^0,c
  1797   000E14  C012  F004         	movff	pad@fp,fputc@fp
  1798   000E18  C013  F005         	movff	pad@fp+1,fputc@fp+1
  1799   000E1C  EC93  F005         	call	_fputc	;wreg free
  1800   000E20                     
  1801                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  1802   000E20  4A19               	infsnz	pad@i^0,f,c
  1803   000E22  2A1A               	incf	(pad@i+1)^0,f,c
  1804   000E24                     l1369:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1807   000E24  501B               	movf	pad@w^0,w,c
  1808   000E26  5C19               	subwf	pad@i^0,w,c
  1809   000E28  501A               	movf	(pad@i+1)^0,w,c
  1810   000E2A  0A80               	xorlw	128
  1811   000E2C  6E18               	movwf	??_pad^0,c
  1812   000E2E  501C               	movf	(pad@w+1)^0,w,c
  1813   000E30  0A80               	xorlw	128
  1814   000E32  5818               	subwfb	??_pad^0,w,c
  1815   000E34  A0D8               	btfss	status,0,c
  1816   000E36  EF1F  F007         	goto	u691
  1817   000E3A  EF21  F007         	goto	u690
  1818   000E3E                     u691:
  1819   000E3E  EF06  F007         	goto	l1365
  1820   000E42                     u690:
  1821   000E42                     
  1822                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  1823   000E42  C014  F00B         	movff	pad@buf,fputs@s
  1824   000E46  C015  F00C         	movff	pad@buf+1,fputs@s+1
  1825   000E4A  C012  F00D         	movff	pad@fp,fputs@fp
  1826   000E4E  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  1827   000E52  ECBE  F007         	call	_fputs	;wreg free
  1828   000E56  0012               	return		;funcret
  1829   000E58                     __end_of_pad:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function _fputs *****************
  1833 ;; Defined at:
  1834 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  s               2   10[COMRAM] PTR const unsigned char 
  1837 ;;		 -> dbuf(32), 
  1838 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  1839 ;;		 -> NULL(0), 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  i               2   15[COMRAM] int 
  1842 ;;  c               1   14[COMRAM] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2   10[COMRAM] int 
  1845 ;; Registers used:
  1846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1852 ;;      Params:         4       0       0       0       0       0       0
  1853 ;;      Locals:         3       0       0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0       0       0
  1855 ;;      Totals:         7       0       0       0       0       0       0
  1856 ;;Total ram usage:        7 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 2
  1859 ;; This function calls:
  1860 ;;		_fputc
  1861 ;; This function is called by:
  1862 ;;		_pad
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text9
  1867   000F7C                     __ptext9:
  1868                           	callstack 0
  1869   000F7C                     _fputs:
  1870                           	callstack 23
  1871   000F7C  0E00               	movlw	0
  1872   000F7E  6E11               	movwf	(fputs@i+1)^0,c
  1873   000F80  0E00               	movlw	0
  1874   000F82  6E10               	movwf	fputs@i^0,c
  1875   000F84  EFCF  F007         	goto	l1277
  1876   000F88                     l1273:
  1877   000F88  C00F  F002         	movff	fputs@c,fputc@c
  1878   000F8C  6A03               	clrf	(fputc@c+1)^0,c
  1879   000F8E  C00D  F004         	movff	fputs@fp,fputc@fp
  1880   000F92  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  1881   000F96  EC93  F005         	call	_fputc	;wreg free
  1882   000F9A  4A10               	infsnz	fputs@i^0,f,c
  1883   000F9C  2A11               	incf	(fputs@i+1)^0,f,c
  1884   000F9E                     l1277:
  1885   000F9E  5010               	movf	fputs@i^0,w,c
  1886   000FA0  240B               	addwf	fputs@s^0,w,c
  1887   000FA2  6ED9               	movwf	fsr2l,c
  1888   000FA4  5011               	movf	(fputs@i+1)^0,w,c
  1889   000FA6  200C               	addwfc	(fputs@s+1)^0,w,c
  1890   000FA8  6EDA               	movwf	fsr2h,c
  1891   000FAA  50DF               	movf	indf2,w,c
  1892   000FAC  6E0F               	movwf	fputs@c^0,c
  1893   000FAE  500F               	movf	fputs@c^0,w,c
  1894   000FB0  A4D8               	btfss	status,2,c
  1895   000FB2  EFDD  F007         	goto	u551
  1896   000FB6  EFDF  F007         	goto	u550
  1897   000FBA                     u551:
  1898   000FBA  EFC4  F007         	goto	l1273
  1899   000FBE                     u550:
  1900   000FBE  0012               	return		;funcret
  1901   000FC0                     __end_of_fputs:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _fputc *****************
  1905 ;; Defined at:
  1906 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  c               2    1[COMRAM] int 
  1909 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  1910 ;;		 -> NULL(0), 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2    1[COMRAM] int 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1922 ;;      Params:         4       0       0       0       0       0       0
  1923 ;;      Locals:         0       0       0       0       0       0       0
  1924 ;;      Temps:          5       0       0       0       0       0       0
  1925 ;;      Totals:         9       0       0       0       0       0       0
  1926 ;;Total ram usage:        9 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 1
  1929 ;; This function calls:
  1930 ;;		_putch
  1931 ;; This function is called by:
  1932 ;;		_pad
  1933 ;;		_vfpfcnvrt
  1934 ;;		_fputs
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text10
  1939   000B26                     __ptext10:
  1940                           	callstack 0
  1941   000B26                     _fputc:
  1942                           	callstack 26
  1943   000B26  5004               	movf	fputc@fp^0,w,c
  1944   000B28  1005               	iorwf	(fputc@fp+1)^0,w,c
  1945   000B2A  B4D8               	btfsc	status,2,c
  1946   000B2C  EF9A  F005         	goto	u511
  1947   000B30  EF9C  F005         	goto	u510
  1948   000B34                     u511:
  1949   000B34  EFA5  F005         	goto	l1261
  1950   000B38                     u510:
  1951   000B38  5004               	movf	fputc@fp^0,w,c
  1952   000B3A  1005               	iorwf	(fputc@fp+1)^0,w,c
  1953   000B3C  A4D8               	btfss	status,2,c
  1954   000B3E  EFA3  F005         	goto	u521
  1955   000B42  EFA5  F005         	goto	u520
  1956   000B46                     u521:
  1957   000B46  EFAA  F005         	goto	l1263
  1958   000B4A                     u520:
  1959   000B4A                     l1261:
  1960   000B4A  5002               	movf	fputc@c^0,w,c
  1961   000B4C  EC31  F008         	call	_putch
  1962   000B50  EFF7  F005         	goto	l851
  1963   000B54                     l1263:
  1964   000B54  EE20 F00A          	lfsr	2,10
  1965   000B58  5004               	movf	fputc@fp^0,w,c
  1966   000B5A  26D9               	addwf	fsr2l,f,c
  1967   000B5C  5005               	movf	(fputc@fp+1)^0,w,c
  1968   000B5E  22DA               	addwfc	fsr2h,f,c
  1969   000B60  50DE               	movf	postinc2,w,c
  1970   000B62  10DE               	iorwf	postinc2,w,c
  1971   000B64  B4D8               	btfsc	status,2,c
  1972   000B66  EFB7  F005         	goto	u531
  1973   000B6A  EFB9  F005         	goto	u530
  1974   000B6E                     u531:
  1975   000B6E  EFD4  F005         	goto	l1267
  1976   000B72                     u530:
  1977   000B72  EE20 F00A          	lfsr	2,10
  1978   000B76  5004               	movf	fputc@fp^0,w,c
  1979   000B78  26D9               	addwf	fsr2l,f,c
  1980   000B7A  5005               	movf	(fputc@fp+1)^0,w,c
  1981   000B7C  22DA               	addwfc	fsr2h,f,c
  1982   000B7E  EE10 F003          	lfsr	1,3
  1983   000B82  5004               	movf	fputc@fp^0,w,c
  1984   000B84  26E1               	addwf	fsr1l,f,c
  1985   000B86  5005               	movf	(fputc@fp+1)^0,w,c
  1986   000B88  22E2               	addwfc	fsr1h,f,c
  1987   000B8A  50DE               	movf	postinc2,w,c
  1988   000B8C  5CE6               	subwf	postinc1,w,c
  1989   000B8E  50E6               	movf	postinc1,w,c
  1990   000B90  0A80               	xorlw	128
  1991   000B92  6E0A               	movwf	(??_fputc+4)^0,c
  1992   000B94  50DE               	movf	postinc2,w,c
  1993   000B96  0A80               	xorlw	128
  1994   000B98  580A               	subwfb	(??_fputc+4)^0,w,c
  1995   000B9A  B0D8               	btfsc	status,0,c
  1996   000B9C  EFD2  F005         	goto	u541
  1997   000BA0  EFD4  F005         	goto	u540
  1998   000BA4                     u541:
  1999   000BA4  EFF7  F005         	goto	l851
  2000   000BA8                     u540:
  2001   000BA8                     l1267:
  2002   000BA8  EE20 F003          	lfsr	2,3
  2003   000BAC  5004               	movf	fputc@fp^0,w,c
  2004   000BAE  26D9               	addwf	fsr2l,f,c
  2005   000BB0  5005               	movf	(fputc@fp+1)^0,w,c
  2006   000BB2  22DA               	addwfc	fsr2h,f,c
  2007   000BB4  CFDE F006          	movff	postinc2,??_fputc
  2008   000BB8  CFDD F007          	movff	postdec2,??_fputc+1
  2009   000BBC  C004  FFD9         	movff	fputc@fp,fsr2l
  2010   000BC0  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2011   000BC4  CFDE F008          	movff	postinc2,??_fputc+2
  2012   000BC8  CFDD F009          	movff	postdec2,??_fputc+3
  2013   000BCC  5006               	movf	??_fputc^0,w,c
  2014   000BCE  2408               	addwf	(??_fputc+2)^0,w,c
  2015   000BD0  6ED9               	movwf	fsr2l,c
  2016   000BD2  5007               	movf	(??_fputc+1)^0,w,c
  2017   000BD4  2009               	addwfc	(??_fputc+3)^0,w,c
  2018   000BD6  6EDA               	movwf	fsr2h,c
  2019   000BD8  C002  FFDF         	movff	fputc@c,indf2
  2020   000BDC  EE20 F003          	lfsr	2,3
  2021   000BE0  5004               	movf	fputc@fp^0,w,c
  2022   000BE2  26D9               	addwf	fsr2l,f,c
  2023   000BE4  5005               	movf	(fputc@fp+1)^0,w,c
  2024   000BE6  22DA               	addwfc	fsr2h,f,c
  2025   000BE8  2ADE               	incf	postinc2,f,c
  2026   000BEA  0E00               	movlw	0
  2027   000BEC  22DD               	addwfc	postdec2,f,c
  2028   000BEE                     l851:
  2029   000BEE  0012               	return		;funcret
  2030   000BF0                     __end_of_fputc:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _putch *****************
  2034 ;; Defined at:
  2035 ;;		line 25 in file "main.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  byte            1    wreg     unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  byte            1    0[COMRAM] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2049 ;;      Params:         0       0       0       0       0       0       0
  2050 ;;      Locals:         1       0       0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0
  2052 ;;      Totals:         1       0       0       0       0       0       0
  2053 ;;Total ram usage:        1 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_fputc
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text11
  2063   001062                     __ptext11:
  2064                           	callstack 0
  2065   001062                     _putch:
  2066                           	callstack 26
  2067                           
  2068                           ;incstack = 0
  2069                           ;putch@byte stored from wreg
  2070   001062  6E01               	movwf	putch@byte^0,c
  2071   001064                     
  2072                           ;main.c: 26:     TXREG = byte;
  2073   001064  C001  FFAD         	movff	putch@byte,4013	;volatile
  2074   001068                     l41:
  2075   001068  A2AC               	btfss	172,1,c	;volatile
  2076   00106A  EF39  F008         	goto	u501
  2077   00106E  EF3B  F008         	goto	u500
  2078   001072                     u501:
  2079   001072  EF34  F008         	goto	l41
  2080   001076                     u500:
  2081   001076  0012               	return		;funcret
  2082   001078                     __end_of_putch:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _abs *****************
  2086 ;; Defined at:
  2087 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  a               2    6[COMRAM] int 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  2    6[COMRAM] int 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2101 ;;      Params:         2       0       0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0
  2103 ;;      Temps:          2       0       0       0       0       0       0
  2104 ;;      Totals:         4       0       0       0       0       0       0
  2105 ;;Total ram usage:        4 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_dtoa
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text12
  2115   000FC0                     __ptext12:
  2116                           	callstack 0
  2117   000FC0                     _abs:
  2118                           	callstack 26
  2119   000FC0  BE08               	btfsc	(abs@a+1)^0,7,c
  2120   000FC2  EFED  F007         	goto	u700
  2121   000FC6  5008               	movf	(abs@a+1)^0,w,c
  2122   000FC8  E106               	bnz	u701
  2123   000FCA  0407               	decf	abs@a^0,w,c
  2124   000FCC  B0D8               	btfsc	status,0,c
  2125   000FCE  EFEB  F007         	goto	u701
  2126   000FD2  EFED  F007         	goto	u700
  2127   000FD6                     u701:
  2128   000FD6  EFFB  F007         	goto	l836
  2129   000FDA                     u700:
  2130   000FDA  C007  F009         	movff	abs@a,??_abs
  2131   000FDE  C008  F00A         	movff	abs@a+1,??_abs+1
  2132   000FE2  1E09               	comf	??_abs^0,f,c
  2133   000FE4  1E0A               	comf	(??_abs+1)^0,f,c
  2134   000FE6  4A09               	infsnz	??_abs^0,f,c
  2135   000FE8  2A0A               	incf	(??_abs+1)^0,f,c
  2136   000FEA  C009  F007         	movff	??_abs,?_abs
  2137   000FEE  C00A  F008         	movff	??_abs+1,?_abs+1
  2138   000FF2  EFFF  F007         	goto	l839
  2139   000FF6                     l836:
  2140   000FF6  C007  F007         	movff	abs@a,?_abs
  2141   000FFA  C008  F008         	movff	abs@a+1,?_abs+1
  2142   000FFE                     l839:
  2143   000FFE  0012               	return		;funcret
  2144   001000                     __end_of_abs:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function ___awmod *****************
  2148 ;; Defined at:
  2149 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  dividend        2    0[COMRAM] int 
  2152 ;;  divisor         2    2[COMRAM] int 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  sign            1    5[COMRAM] unsigned char 
  2155 ;;  counter         1    4[COMRAM] unsigned char 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  2    0[COMRAM] int 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2165 ;;      Params:         4       0       0       0       0       0       0
  2166 ;;      Locals:         2       0       0       0       0       0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0
  2168 ;;      Totals:         6       0       0       0       0       0       0
  2169 ;;Total ram usage:        6 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_dtoa
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text13
  2179   000CB4                     __ptext13:
  2180                           	callstack 0
  2181   000CB4                     ___awmod:
  2182                           	callstack 26
  2183   000CB4  0E00               	movlw	0
  2184   000CB6  6E06               	movwf	___awmod@sign^0,c
  2185   000CB8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2186   000CBA  EF63  F006         	goto	u620
  2187   000CBE  EF61  F006         	goto	u621
  2188   000CC2                     u621:
  2189   000CC2  EF69  F006         	goto	l1331
  2190   000CC6                     u620:
  2191   000CC6  6C01               	negf	___awmod@dividend^0,c
  2192   000CC8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2193   000CCA  B0D8               	btfsc	status,0,c
  2194   000CCC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2195   000CCE  0E01               	movlw	1
  2196   000CD0  6E06               	movwf	___awmod@sign^0,c
  2197   000CD2                     l1331:
  2198   000CD2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2199   000CD4  EF70  F006         	goto	u630
  2200   000CD8  EF6E  F006         	goto	u631
  2201   000CDC                     u631:
  2202   000CDC  EF74  F006         	goto	l1335
  2203   000CE0                     u630:
  2204   000CE0  6C03               	negf	___awmod@divisor^0,c
  2205   000CE2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2206   000CE4  B0D8               	btfsc	status,0,c
  2207   000CE6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2208   000CE8                     l1335:
  2209   000CE8  5003               	movf	___awmod@divisor^0,w,c
  2210   000CEA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2211   000CEC  B4D8               	btfsc	status,2,c
  2212   000CEE  EF7B  F006         	goto	u641
  2213   000CF2  EF7D  F006         	goto	u640
  2214   000CF6                     u641:
  2215   000CF6  EFA1  F006         	goto	l1351
  2216   000CFA                     u640:
  2217   000CFA  0E01               	movlw	1
  2218   000CFC  6E05               	movwf	___awmod@counter^0,c
  2219   000CFE  EF85  F006         	goto	l1341
  2220   000D02                     l1339:
  2221   000D02  90D8               	bcf	status,0,c
  2222   000D04  3603               	rlcf	___awmod@divisor^0,f,c
  2223   000D06  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2224   000D08  2A05               	incf	___awmod@counter^0,f,c
  2225   000D0A                     l1341:
  2226   000D0A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2227   000D0C  EF8A  F006         	goto	u651
  2228   000D10  EF8C  F006         	goto	u650
  2229   000D14                     u651:
  2230   000D14  EF81  F006         	goto	l1339
  2231   000D18                     u650:
  2232   000D18                     l1343:
  2233   000D18  5003               	movf	___awmod@divisor^0,w,c
  2234   000D1A  5C01               	subwf	___awmod@dividend^0,w,c
  2235   000D1C  5004               	movf	(___awmod@divisor+1)^0,w,c
  2236   000D1E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2237   000D20  A0D8               	btfss	status,0,c
  2238   000D22  EF95  F006         	goto	u661
  2239   000D26  EF97  F006         	goto	u660
  2240   000D2A                     u661:
  2241   000D2A  EF9B  F006         	goto	l1347
  2242   000D2E                     u660:
  2243   000D2E  5003               	movf	___awmod@divisor^0,w,c
  2244   000D30  5E01               	subwf	___awmod@dividend^0,f,c
  2245   000D32  5004               	movf	(___awmod@divisor+1)^0,w,c
  2246   000D34  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2247   000D36                     l1347:
  2248   000D36  90D8               	bcf	status,0,c
  2249   000D38  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2250   000D3A  3203               	rrcf	___awmod@divisor^0,f,c
  2251   000D3C  2E05               	decfsz	___awmod@counter^0,f,c
  2252   000D3E  EF8C  F006         	goto	l1343
  2253   000D42                     l1351:
  2254   000D42  5006               	movf	___awmod@sign^0,w,c
  2255   000D44  B4D8               	btfsc	status,2,c
  2256   000D46  EFA7  F006         	goto	u671
  2257   000D4A  EFA9  F006         	goto	u670
  2258   000D4E                     u671:
  2259   000D4E  EFAD  F006         	goto	l1355
  2260   000D52                     u670:
  2261   000D52  6C01               	negf	___awmod@dividend^0,c
  2262   000D54  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2263   000D56  B0D8               	btfsc	status,0,c
  2264   000D58  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2265   000D5A                     l1355:
  2266   000D5A  C001  F001         	movff	___awmod@dividend,?___awmod
  2267   000D5E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2268   000D62  0012               	return		;funcret
  2269   000D64                     __end_of___awmod:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function ___awdiv *****************
  2273 ;; Defined at:
  2274 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  dividend        2    0[COMRAM] int 
  2277 ;;  divisor         2    2[COMRAM] int 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  quotient        2    6[COMRAM] int 
  2280 ;;  sign            1    5[COMRAM] unsigned char 
  2281 ;;  counter         1    4[COMRAM] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2    0[COMRAM] int 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2291 ;;      Params:         4       0       0       0       0       0       0
  2292 ;;      Locals:         4       0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0
  2294 ;;      Totals:         8       0       0       0       0       0       0
  2295 ;;Total ram usage:        8 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_dtoa
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text14
  2305   000BF0                     __ptext14:
  2306                           	callstack 0
  2307   000BF0                     ___awdiv:
  2308                           	callstack 26
  2309   000BF0  0E00               	movlw	0
  2310   000BF2  6E06               	movwf	___awdiv@sign^0,c
  2311   000BF4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2312   000BF6  EF01  F006         	goto	u560
  2313   000BFA  EFFF  F005         	goto	u561
  2314   000BFE                     u561:
  2315   000BFE  EF07  F006         	goto	l1287
  2316   000C02                     u560:
  2317   000C02  6C03               	negf	___awdiv@divisor^0,c
  2318   000C04  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2319   000C06  B0D8               	btfsc	status,0,c
  2320   000C08  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2321   000C0A  0E01               	movlw	1
  2322   000C0C  6E06               	movwf	___awdiv@sign^0,c
  2323   000C0E                     l1287:
  2324   000C0E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2325   000C10  EF0E  F006         	goto	u570
  2326   000C14  EF0C  F006         	goto	u571
  2327   000C18                     u571:
  2328   000C18  EF14  F006         	goto	l1293
  2329   000C1C                     u570:
  2330   000C1C  6C01               	negf	___awdiv@dividend^0,c
  2331   000C1E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2332   000C20  B0D8               	btfsc	status,0,c
  2333   000C22  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2334   000C24  0E01               	movlw	1
  2335   000C26  1A06               	xorwf	___awdiv@sign^0,f,c
  2336   000C28                     l1293:
  2337   000C28  0E00               	movlw	0
  2338   000C2A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2339   000C2C  0E00               	movlw	0
  2340   000C2E  6E07               	movwf	___awdiv@quotient^0,c
  2341   000C30  5003               	movf	___awdiv@divisor^0,w,c
  2342   000C32  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2343   000C34  B4D8               	btfsc	status,2,c
  2344   000C36  EF1F  F006         	goto	u581
  2345   000C3A  EF21  F006         	goto	u580
  2346   000C3E                     u581:
  2347   000C3E  EF49  F006         	goto	l1315
  2348   000C42                     u580:
  2349   000C42  0E01               	movlw	1
  2350   000C44  6E05               	movwf	___awdiv@counter^0,c
  2351   000C46  EF29  F006         	goto	l1301
  2352   000C4A                     l1299:
  2353   000C4A  90D8               	bcf	status,0,c
  2354   000C4C  3603               	rlcf	___awdiv@divisor^0,f,c
  2355   000C4E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2356   000C50  2A05               	incf	___awdiv@counter^0,f,c
  2357   000C52                     l1301:
  2358   000C52  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2359   000C54  EF2E  F006         	goto	u591
  2360   000C58  EF30  F006         	goto	u590
  2361   000C5C                     u591:
  2362   000C5C  EF25  F006         	goto	l1299
  2363   000C60                     u590:
  2364   000C60                     l1303:
  2365   000C60  90D8               	bcf	status,0,c
  2366   000C62  3607               	rlcf	___awdiv@quotient^0,f,c
  2367   000C64  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2368   000C66  5003               	movf	___awdiv@divisor^0,w,c
  2369   000C68  5C01               	subwf	___awdiv@dividend^0,w,c
  2370   000C6A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2371   000C6C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2372   000C6E  A0D8               	btfss	status,0,c
  2373   000C70  EF3C  F006         	goto	u601
  2374   000C74  EF3E  F006         	goto	u600
  2375   000C78                     u601:
  2376   000C78  EF43  F006         	goto	l1311
  2377   000C7C                     u600:
  2378   000C7C  5003               	movf	___awdiv@divisor^0,w,c
  2379   000C7E  5E01               	subwf	___awdiv@dividend^0,f,c
  2380   000C80  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2381   000C82  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2382   000C84  8007               	bsf	___awdiv@quotient^0,0,c
  2383   000C86                     l1311:
  2384   000C86  90D8               	bcf	status,0,c
  2385   000C88  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2386   000C8A  3203               	rrcf	___awdiv@divisor^0,f,c
  2387   000C8C  2E05               	decfsz	___awdiv@counter^0,f,c
  2388   000C8E  EF30  F006         	goto	l1303
  2389   000C92                     l1315:
  2390   000C92  5006               	movf	___awdiv@sign^0,w,c
  2391   000C94  B4D8               	btfsc	status,2,c
  2392   000C96  EF4F  F006         	goto	u611
  2393   000C9A  EF51  F006         	goto	u610
  2394   000C9E                     u611:
  2395   000C9E  EF55  F006         	goto	l1319
  2396   000CA2                     u610:
  2397   000CA2  6C07               	negf	___awdiv@quotient^0,c
  2398   000CA4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2399   000CA6  B0D8               	btfsc	status,0,c
  2400   000CA8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2401   000CAA                     l1319:
  2402   000CAA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2403   000CAE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2404   000CB2  0012               	return		;funcret
  2405   000CB4                     __end_of___awdiv:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _initUART *****************
  2409 ;; Defined at:
  2410 ;;		line 89 in file "main.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2424 ;;      Params:         0       0       0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_main
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text15
  2438   001048                     __ptext15:
  2439                           	callstack 0
  2440   001048                     _initUART:
  2441                           	callstack 30
  2442   001048                     
  2443                           ;main.c: 90:     TRISCbits.RC6 = 1;
  2444   001048  8C94               	bsf	148,6,c	;volatile
  2445                           
  2446                           ;main.c: 91:     TRISCbits.RC7 = 1;
  2447   00104A  8E94               	bsf	148,7,c	;volatile
  2448   00104C                     
  2449                           ;main.c: 92:     SPBRG = 34;
  2450   00104C  0E22               	movlw	34
  2451   00104E  6EAF               	movwf	175,c	;volatile
  2452                           
  2453                           ;main.c: 93:     SPBRGH = 0;
  2454   001050  0E00               	movlw	0
  2455   001052  6EB0               	movwf	176,c	;volatile
  2456   001054                     
  2457                           ;main.c: 94:     BAUDCONbits.BRG16 = 1;
  2458   001054  86B8               	bsf	184,3,c	;volatile
  2459   001056                     
  2460                           ;main.c: 95:     TXSTAbits.BRGH = 1;
  2461   001056  84AC               	bsf	172,2,c	;volatile
  2462   001058                     
  2463                           ;main.c: 96:     TXSTAbits.SYNC = 0;
  2464   001058  98AC               	bcf	172,4,c	;volatile
  2465   00105A                     
  2466                           ;main.c: 97:     TXSTAbits.TXEN = 1;
  2467   00105A  8AAC               	bsf	172,5,c	;volatile
  2468   00105C                     
  2469                           ;main.c: 98:     RCSTAbits.SPEN = 1;
  2470   00105C  8EAB               	bsf	171,7,c	;volatile
  2471   00105E                     
  2472                           ;main.c: 99:     RCSTAbits.CREN = 1;
  2473   00105E  88AB               	bsf	171,4,c	;volatile
  2474   001060  0012               	return		;funcret
  2475   001062                     __end_of_initUART:
  2476                           	callstack 0
  2477                           
  2478 ;; *************** function _init *****************
  2479 ;; Defined at:
  2480 ;;		line 102 in file "main.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2494 ;;      Params:         0       0       0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0
  2497 ;;      Totals:         0       0       0       0       0       0       0
  2498 ;;Total ram usage:        0 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text16
  2508   001078                     __ptext16:
  2509                           	callstack 0
  2510   001078                     _init:
  2511                           	callstack 30
  2512   001078                     
  2513                           ;main.c: 103:     ADCON1 = 0x0F;
  2514   001078  0E0F               	movlw	15
  2515   00107A  6EC1               	movwf	193,c	;volatile
  2516                           
  2517                           ;main.c: 104:     TRISD = 0x00;
  2518   00107C  0E00               	movlw	0
  2519   00107E  6E95               	movwf	149,c	;volatile
  2520                           
  2521                           ;main.c: 105:     PORTD = 0x00;
  2522   001080  0E00               	movlw	0
  2523   001082  6E83               	movwf	131,c	;volatile
  2524   001084                     
  2525                           ;main.c: 107:     TRISB = 0xFF;
  2526   001084  6893               	setf	147,c	;volatile
  2527   001086                     
  2528                           ;main.c: 108:     INTCON2bits.RBPU = 0;
  2529   001086  9EF1               	bcf	241,7,c	;volatile
  2530   001088                     
  2531                           ;main.c: 110:     RCONbits.IPEN = 0;
  2532   001088  9ED0               	bcf	208,7,c	;volatile
  2533   00108A                     
  2534                           ;main.c: 116:     INTCONbits.RBIE = 1;
  2535   00108A  86F2               	bsf	242,3,c	;volatile
  2536   00108C  0012               	return		;funcret
  2537   00108E                     __end_of_init:
  2538                           	callstack 0
  2539                           
  2540                           	psect	rparam
  2541   000000                     
  2542                           	psect	idloc
  2543                           
  2544                           ;Config register IDLOC0 @ 0x200000
  2545                           ;	unspecified, using default values
  2546   200000                     	org	2097152
  2547   200000  FF                 	db	255
  2548                           
  2549                           ;Config register IDLOC1 @ 0x200001
  2550                           ;	unspecified, using default values
  2551   200001                     	org	2097153
  2552   200001  FF                 	db	255
  2553                           
  2554                           ;Config register IDLOC2 @ 0x200002
  2555                           ;	unspecified, using default values
  2556   200002                     	org	2097154
  2557   200002  FF                 	db	255
  2558                           
  2559                           ;Config register IDLOC3 @ 0x200003
  2560                           ;	unspecified, using default values
  2561   200003                     	org	2097155
  2562   200003  FF                 	db	255
  2563                           
  2564                           ;Config register IDLOC4 @ 0x200004
  2565                           ;	unspecified, using default values
  2566   200004                     	org	2097156
  2567   200004  FF                 	db	255
  2568                           
  2569                           ;Config register IDLOC5 @ 0x200005
  2570                           ;	unspecified, using default values
  2571   200005                     	org	2097157
  2572   200005  FF                 	db	255
  2573                           
  2574                           ;Config register IDLOC6 @ 0x200006
  2575                           ;	unspecified, using default values
  2576   200006                     	org	2097158
  2577   200006  FF                 	db	255
  2578                           
  2579                           ;Config register IDLOC7 @ 0x200007
  2580                           ;	unspecified, using default values
  2581   200007                     	org	2097159
  2582   200007  FF                 	db	255
  2583                           
  2584                           	psect	config
  2585                           
  2586                           ; Padding undefined space
  2587   300000                     	org	3145728
  2588   300000  FF                 	db	255
  2589                           
  2590                           ;Config register CONFIG1H @ 0x300001
  2591                           ;	Oscillator Selection bits
  2592                           ;	OSC = XT, XT oscillator
  2593                           ;	Fail-Safe Clock Monitor Enable bit
  2594                           ;	FCMEN = 0x0, unprogrammed default
  2595                           ;	Internal/External Oscillator Switchover bit
  2596                           ;	IESO = 0x0, unprogrammed default
  2597   300001                     	org	3145729
  2598   300001  01                 	db	1
  2599                           
  2600                           ;Config register CONFIG2L @ 0x300002
  2601                           ;	Power-up Timer Enable bit
  2602                           ;	PWRT = 0x1, unprogrammed default
  2603                           ;	Brown-out Reset Enable bits
  2604                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2605                           ;	Brown Out Reset Voltage bits
  2606                           ;	BORV = 0x3, unprogrammed default
  2607   300002                     	org	3145730
  2608   300002  19                 	db	25
  2609                           
  2610                           ;Config register CONFIG2H @ 0x300003
  2611                           ;	Watchdog Timer Enable bit
  2612                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2613                           ;	Watchdog Timer Postscale Select bits
  2614                           ;	WDTPS = 0xF, unprogrammed default
  2615   300003                     	org	3145731
  2616   300003  1E                 	db	30
  2617                           
  2618                           ; Padding undefined space
  2619   300004                     	org	3145732
  2620   300004  FF                 	db	255
  2621                           
  2622                           ;Config register CONFIG3H @ 0x300005
  2623                           ;	unspecified, using default values
  2624                           ;	CCP2 MUX bit
  2625                           ;	CCP2MX = 0x1, unprogrammed default
  2626                           ;	PORTB A/D Enable bit
  2627                           ;	PBADEN = 0x1, unprogrammed default
  2628                           ;	Low-Power Timer1 Oscillator Enable bit
  2629                           ;	LPT1OSC = 0x0, unprogrammed default
  2630                           ;	MCLR Pin Enable bit
  2631                           ;	MCLRE = 0x1, unprogrammed default
  2632   300005                     	org	3145733
  2633   300005  83                 	db	131
  2634                           
  2635                           ;Config register CONFIG4L @ 0x300006
  2636                           ;	unspecified, using default values
  2637                           ;	Stack Full/Underflow Reset Enable bit
  2638                           ;	STVREN = 0x1, unprogrammed default
  2639                           ;	Single-Supply ICSP Enable bit
  2640                           ;	LVP = 0x1, unprogrammed default
  2641                           ;	Extended Instruction Set Enable bit
  2642                           ;	XINST = 0x0, unprogrammed default
  2643                           ;	Background Debugger Enable bit
  2644                           ;	DEBUG = 0x1, unprogrammed default
  2645   300006                     	org	3145734
  2646   300006  85                 	db	133
  2647                           
  2648                           ; Padding undefined space
  2649   300007                     	org	3145735
  2650   300007  FF                 	db	255
  2651                           
  2652                           ;Config register CONFIG5L @ 0x300008
  2653                           ;	unspecified, using default values
  2654                           ;	Code Protection bit
  2655                           ;	CP0 = 0x1, unprogrammed default
  2656                           ;	Code Protection bit
  2657                           ;	CP1 = 0x1, unprogrammed default
  2658                           ;	Code Protection bit
  2659                           ;	CP2 = 0x1, unprogrammed default
  2660                           ;	Code Protection bit
  2661                           ;	CP3 = 0x1, unprogrammed default
  2662   300008                     	org	3145736
  2663   300008  0F                 	db	15
  2664                           
  2665                           ;Config register CONFIG5H @ 0x300009
  2666                           ;	unspecified, using default values
  2667                           ;	Boot Block Code Protection bit
  2668                           ;	CPB = 0x1, unprogrammed default
  2669                           ;	Data EEPROM Code Protection bit
  2670                           ;	CPD = 0x1, unprogrammed default
  2671   300009                     	org	3145737
  2672   300009  C0                 	db	192
  2673                           
  2674                           ;Config register CONFIG6L @ 0x30000A
  2675                           ;	unspecified, using default values
  2676                           ;	Write Protection bit
  2677                           ;	WRT0 = 0x1, unprogrammed default
  2678                           ;	Write Protection bit
  2679                           ;	WRT1 = 0x1, unprogrammed default
  2680                           ;	Write Protection bit
  2681                           ;	WRT2 = 0x1, unprogrammed default
  2682                           ;	Write Protection bit
  2683                           ;	WRT3 = 0x1, unprogrammed default
  2684   30000A                     	org	3145738
  2685   30000A  0F                 	db	15
  2686                           
  2687                           ;Config register CONFIG6H @ 0x30000B
  2688                           ;	unspecified, using default values
  2689                           ;	Configuration Register Write Protection bit
  2690                           ;	WRTC = 0x1, unprogrammed default
  2691                           ;	Boot Block Write Protection bit
  2692                           ;	WRTB = 0x1, unprogrammed default
  2693                           ;	Data EEPROM Write Protection bit
  2694                           ;	WRTD = 0x1, unprogrammed default
  2695   30000B                     	org	3145739
  2696   30000B  E0                 	db	224
  2697                           
  2698                           ;Config register CONFIG7L @ 0x30000C
  2699                           ;	unspecified, using default values
  2700                           ;	Table Read Protection bit
  2701                           ;	EBTR0 = 0x1, unprogrammed default
  2702                           ;	Table Read Protection bit
  2703                           ;	EBTR1 = 0x1, unprogrammed default
  2704                           ;	Table Read Protection bit
  2705                           ;	EBTR2 = 0x1, unprogrammed default
  2706                           ;	Table Read Protection bit
  2707                           ;	EBTR3 = 0x1, unprogrammed default
  2708   30000C                     	org	3145740
  2709   30000C  0F                 	db	15
  2710                           
  2711                           ;Config register CONFIG7H @ 0x30000D
  2712                           ;	unspecified, using default values
  2713                           ;	Boot Block Table Read Protection bit
  2714                           ;	EBTRB = 0x1, unprogrammed default
  2715   30000D                     	org	3145741
  2716   30000D  40                 	db	64
  2717                           tosu	equ	0xFFF
  2718                           tosh	equ	0xFFE
  2719                           tosl	equ	0xFFD
  2720                           stkptr	equ	0xFFC
  2721                           pclatu	equ	0xFFB
  2722                           pclath	equ	0xFFA
  2723                           pcl	equ	0xFF9
  2724                           tblptru	equ	0xFF8
  2725                           tblptrh	equ	0xFF7
  2726                           tblptrl	equ	0xFF6
  2727                           tablat	equ	0xFF5
  2728                           prodh	equ	0xFF4
  2729                           prodl	equ	0xFF3
  2730                           indf0	equ	0xFEF
  2731                           postinc0	equ	0xFEE
  2732                           postdec0	equ	0xFED
  2733                           preinc0	equ	0xFEC
  2734                           plusw0	equ	0xFEB
  2735                           fsr0h	equ	0xFEA
  2736                           fsr0l	equ	0xFE9
  2737                           wreg	equ	0xFE8
  2738                           indf1	equ	0xFE7
  2739                           postinc1	equ	0xFE6
  2740                           postdec1	equ	0xFE5
  2741                           preinc1	equ	0xFE4
  2742                           plusw1	equ	0xFE3
  2743                           fsr1h	equ	0xFE2
  2744                           fsr1l	equ	0xFE1
  2745                           bsr	equ	0xFE0
  2746                           indf2	equ	0xFDF
  2747                           postinc2	equ	0xFDE
  2748                           postdec2	equ	0xFDD
  2749                           preinc2	equ	0xFDC
  2750                           plusw2	equ	0xFDB
  2751                           fsr2h	equ	0xFDA
  2752                           fsr2l	equ	0xFD9
  2753                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     89     114
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1060$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1060$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1100$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sp__generate_random_sequence_easy	PTR int  size(2) Largest target is 8
		 -> generate_random_sequence_easy@array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _rand->___lmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    6968
                                             69 COMRAM    20    20      0
                               _init
                           _initUART
                             _printf
                               _rand
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _setLED                                               4     3      1     414
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _rand                                                 6     4      2     370
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5544
                                             63 COMRAM     6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5262
                                             55 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    4912
                                             41 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    3670
                                             28 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2043
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     953
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     704
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _initUART
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _rand
     ___lmul
   _setLED

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      20       5       25.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     59      72       1       89.8%
BITBIGSFRhhhhlh     20      0       0      17        0.0%
BITBIGSFRlhh        15      0       0      22        0.0%
BITBIGSFRlhl         F      0       0      23        0.0%
BITBIGSFRhhhhll      E      0       0      18        0.0%
BITBIGSFRhhhhh       D      0       0      16        0.0%
BITBIGSFRhhhl        8      0       0      19        0.0%
BITBIGSFRhhl         7      0       0      20        0.0%
BITBIGSFRllh         1      0       0      24        0.0%
BITBIGSFRhl          1      0       0      21        0.0%
BITBIGSFRlll         1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      92      26        0.0%
DATA                 0      0      92       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 04 19:51:51 2023

                                l41 1068                                  l50 0D78  
                                l51 0D86                                  l44 1076  
                                l52 0D94                                  l53 0DDC  
                                l48 0D6A                                  l65 1060  
                                l90 0868                                  l68 108C  
                      ___awdiv@sign 0006                                 l107 0F1C  
                               l108 0F2C                                 l340 0D62  
                               l327 0CB2                                 l800 0E56  
                               l805 08B6                                 l807 08BE  
                               l808 0904                                 l832 0F7A  
                               l826 0B24                                 l851 0BEE  
                               l819 0A02                                 l836 0FF6  
                               l774 1024                                 l839 0FFE  
                               l859 0FBE                                 l867 0EC2  
                               l796 0E00                                 u500 1076  
                               u501 1072                                 u510 0B38  
                               u511 0B34                                 u600 0C7C  
                               u520 0B4A                                 u601 0C78  
                               u521 0B46                                 u610 0CA2  
                               u530 0B72                                 u611 0C9E  
                               u531 0B6E                                 u620 0CC6  
                               u700 0FDA                                 u540 0BA8  
                               u621 0CC2                                 u701 0FD6  
                               u541 0BA4                                 u630 0CE0  
                               u550 0FBE                                 u710 0880  
                               u631 0CDC                                 u551 0FBA  
                               u711 087A                                 u560 0C02  
                               u640 0CFA                                 u800 09CC  
                               u720 0882                                 u561 0BFE  
                               u641 0CF6                                 u801 09C8  
                               u570 0C1C                                 u650 0D18  
                               u730 0894                                 u810 0A28  
                               u571 0C18                                 u651 0D14  
                               u731 0890                                 u811 0A24  
                               u580 0C42                                 u660 0D2E  
                               u740 08AA                                 u820 0A72  
                               u581 0C3E                                 u661 0D2A  
                               u741 08A6                                 u821 0A6E  
                               u590 0C60                                 u670 0D52  
                               u750 08D6                                 u830 0A8E  
                               u910 0EB4                                 u591 0C5C  
                               u671 0D4E                                 u751 08D2  
                               u831 0A8A                                 u680 0DEC  
                               u760 08EC                                 u840 0EE2  
                               u681 0DE8                                 u761 08E8  
                               u841 0EDE                                 u905 0D9C  
                               u690 0E42                                 u770 0990  
                               u850 0F1C                                 u906 0D9E  
                               u691 0E3E                                 u771 098C  
                               u851 0F18                                 u915 0EAA  
                               u780 09A2                                 u860 0F72  
                               u781 099E                                 u861 0F6E  
                               u941 062E                                 u790 09BC  
                               u950 068E                                 u791 09B8  
                               u951 068A                                 u960 0742  
                               u961 073E                                 u970 07B4  
                               u875 0D72                                 u971 07B0  
                               u876 0D74                                 u980 0868  
                               u885 0D80                                 u981 0864  
                               u886 0D82                                 u895 0D8E  
                               u896 0D90                                 u997 06E2  
                               _abs 0FC0                                 _pad 0DDE  
                      ___awmod@sign 0006                                 wreg 0FE8  
                              l1101 1048                                l1111 105A  
                              l1103 104C                                l1121 1086  
                              l1113 105C                                l1105 1054  
                              l1123 1088                                l1115 105E  
                              l1107 1056                                ?_abs 0007  
                              l1125 108A                                l1117 1078  
                              l1109 1058                                l1301 0C52  
                              l1119 1084                                l1311 0C86  
                              l1303 0C60                                l1313 0C8C  
                              l1305 0C66                                l1401 0916  
                              l1307 0C7C                                l1315 0C92  
                              l1331 0CD2                                l1323 0CB4  
                              l1403 091C                                l1411 0976  
                              l1317 0CA2                                l1309 0C84  
                              l1341 0D0A                                l1333 0CE0  
                              l1325 0CB8                                l1261 0B4A  
                              l1421 09D2                                l1413 0990  
                              l1405 094E                                l1319 0CAA  
                              l1343 0D18                                l1351 0D42  
                              l1335 0CE8                                l1327 0CC6  
                              l1255 1064                                l1263 0B54  
                              l1271 0F7C                                l1423 09E2  
                              l1415 09A2                                l1407 0954  
                              l1431 0A36                                l1281 0BF4  
                              l1353 0D52                                l1345 0D2E  
                              l1337 0CFA                                l1329 0CCE  
                              l1265 0B72                                l1257 0B26  
                              l1273 0F88                                l1361 0DEC  
                              l1417 09BC                                l1409 095A  
                              l1441 0A8E                                l1433 0A42  
                              l1521 061C                                l1291 0C24  
                              l1283 0C02                                l1355 0D5A  
                              l1347 0D36                                l1339 0D02  
                              l1267 0BA8                                l1259 0B38  
                              l1275 0F9A                                l1371 0E42  
                              l1363 0DF8                                l1419 09CC  
                              l1443 0AD2                                l1435 0A46  
                              l1451 0AFC                                l1427 0A04  
                              l1523 0628                                l1293 0C28  
                              l1285 0C0A                                l1349 0D3C  
                              l1373 0FC0                                l1277 0F9E  
                              l1365 0E0C                                l1381 0894  
                              l1437 0A56                                l1429 0A28  
                              l1461 0EE2                                l1621 0DB6  
                              l1541 0672                                l1533 063C  
                              l1525 0634                                l1295 0C30  
                              l1287 0C0E                                l1279 0BF0  
                              l1375 0FDA                                l1367 0E20  
                              l1359 0DDE                                l1391 08DC  
                              l1383 089C                                l1447 0AEA  
                              l1439 0A72                                l1471 0F56  
                              l1463 0EF2                                l1551 06BC  
                              l1543 068E                                l1535 0648  
                              l1527 0634                                l1519 0614  
                              l1297 0C42                                l1289 0C1C  
                              l1369 0E24                                l1393 08EC  
                              l1385 08AA                                l1377 0870  
                              l1473 0F72                                l1465 0EFC  
                              l1457 0EC4                                l1481 0DA2  
                              l1561 0726                                l1553 06D8  
                              l1537 0654                                l1299 0C4A  
                              l1395 08F8                                l1387 08C6  
                              l1379 0884                                l1467 0F2E  
                              l1459 0ED4                                l1571 0762  
                              l1563 0742                                l1555 06F0  
                              l1539 066E                                l1397 0900  
                              l1389 08D6                                l1469 0F3A  
                              l1493 1000                                l1477 0D66  
                              l1581 07B4                                l1573 076E  
                              l1565 075A                                l1557 070C  
                              l1549 0696                                l1399 090C  
                              l1495 1008                                l1487 0E58  
                              l1591 07FE                                l1575 077A  
                              l1559 0722                                l1489 0E94  
                              l1593 0816                                l1577 0794  
                              l1595 0832                                l1587 07BC  
                              l1579 0798                                l1597 0848  
                              l1589 07E2                                l1599 084C  
                              ?_pad 0012                                STR_1 0601  
                              STR_2 060E                                STR_3 060E  
                              u1007 0716                                u1017 074C  
                              u1027 0808                                u1037 083C  
                              abs@a 0007                                _dbuf 0080  
                              _main 0614                                _dtoa 0870  
                              _init 1078                                _rand 0E58  
                              _seed 006F                                _prec 006C  
                              pad@i 0019                                pad@p 0016  
                              fsr1h 0FE2                                fsr2h 0FDA  
                              indf2 0FDF                                fsr1l 0FE1  
                              pad@w 001B                                fsr2l 0FD9  
                              start 0000                        ___param_bank 0000  
                             ??_abs 0009                               ??_pad 0018  
                             ?_main 0001                               ?_dtoa 001D  
                             ?_init 0001                               ?_rand 000D  
                   __end_of___awdiv 0CB4                     __end_of___awmod 0D64  
                   ___awdiv@divisor 0003                     ___awdiv@counter 0005  
                      vfpfcnvrt@fmt 002C                               _SPBRG 0FAF  
                             _PORTD 0F83                               _TRISB 0F93  
                             _TRISD 0F95                               _TXREG 0FAD  
               ___lmul@multiplicand 0005                               _flags 006E  
                             _fputc 0B26                               _fputs 0F7C  
                             pad@fp 0012                               _width 006A  
                             _putch 1062                               main@i 0050  
                             dtoa@d 001F                               main@r 0054  
                             dtoa@i 0027                               dtoa@p 0023  
                             dtoa@s 0029                               dtoa@w 0025  
                             tablat 0FF5                               status 0FD8  
                   __initialization 1026                        __end_of_main 0870  
                      __end_of_dtoa 0A04                        __end_of_init 108E  
                      __end_of_rand 0EC4                              ??_main 0046  
                            ??_dtoa 0021                              ??_init 0001  
                            ??_rand 000F                       __activetblptr 0002  
                            _ADCON1 0FC1                              ?_fputc 0002  
                            ?_fputs 000B                    ___awdiv@dividend 0001  
                            ?_putch 0001                              _SPBRGH 0FB0  
                      vfprintf@cfmt 003E                              ___lmul 0EC4  
                         ??___awdiv 0005                           ??___awmod 0005  
                  __end_of_initUART 1062                              _setLED 0D64  
                            clear_0 102C                              clear_1 1038  
                  ___awdiv@quotient 0007                     ___awmod@divisor 0003  
                       setLED@value 0001                              isa$std 0001  
                   ___awmod@counter 0005                              _printf 1000  
                            pad@buf 0014                              dtoa@fp 001D  
                            fputc@c 0002                              fputs@c 000F  
                            fputs@i 0010                              fputs@s 000B  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                  __end_of_vfprintf 0F7C                          __accesstop 0080  
           __end_of__initialization 103E                       ___rparam_used 0001  
                    __pcstackCOMRAM 0001                       __end_of_fputc 0BF0  
                     __end_of_fputs 0FC0                       __end_of_putch 1078  
                           ??_fputc 0006                             ??_fputs 000F  
                           ??_putch 0001                          __pbssBANK0 0080  
                           ?___lmul 0001                             ?_setLED 0001  
                    ___lmul@product 0009                             ?_printf 0040  
                         ?_initUART 0001                             __Hparam 0000  
                           __Lparam 0000                             ___awdiv 0BF0  
                           ___awmod 0CB4                           ?_vfprintf 0038  
                      __psmallconst 0600                             __pcinit 1026  
                           __ramtop 0600                             __ptext0 0614  
                           __ptext1 0D64                             __ptext2 0E58  
                           __ptext3 0EC4                             __ptext4 1000  
                           __ptext5 0F2E                             __ptext6 0A04  
                           __ptext7 0870                             __ptext8 0DDE  
                           __ptext9 0F7C                    ___awmod@dividend 0001  
              end_of_initialization 103E                          ??_initUART 0001  
                           fputc@fp 0004                       __Lmediumconst 0000  
                           fputs@fp 000D                   __end_of_vfpfcnvrt 0B26  
                         _RCSTAbits 0FAB                             postdec2 0FDD  
                           postinc0 0FEE                             postinc1 0FE6  
                           postinc2 0FDE                    vfpfcnvrt@convarg 0032  
                        ??_vfprintf 003E                           _PORTBbits 0F81  
                         _PORTDbits 0F83                           _TRISCbits 0F94  
                         _TXSTAbits 0FAC                      __end_of___lmul 0F2E  
                       vfpfcnvrt@ap 002E                         vfpfcnvrt@cp 0036  
                       vfpfcnvrt@fp 002A                         _BAUDCONbits 0FB8  
                    __end_of_setLED 0DDE                      __end_of_printf 1026  
               start_initialization 1026                         __end_of_abs 1000  
                       __end_of_pad 0E58                         vfprintf@fmt 003A  
                          ??___lmul 0009                            ??_setLED 0002  
                          ??_printf 0044                         __pbssCOMRAM 005A  
                         _dtoa$1127 0021                            ?___awdiv 0001  
                          ?___awmod 0001                         __smallconst 0600  
                          _RCONbits 0FD0                           main@F2903 005A  
                         _vfpfcnvrt 0A04                           main@i_613 0056  
                         main@i_616 0052                           main@i_617 0058  
                         main@array 0048  generate_random_sequence_easy@F2898 0062  
                 ___lmul@multiplier 0001                         _INTCON2bits 0FF1  
                          __Hrparam 0000                          vfprintf@ap 003C  
                          __Lrparam 0000                          vfprintf@fp 0038  
                         setLED@pos 0004                          ?_vfpfcnvrt 002A  
                          __ptext10 0B26                            __ptext11 1062  
                          __ptext12 0FC0                            __ptext13 0CB4  
                          __ptext14 0BF0                            __ptext15 1048  
                          __ptext16 1078                            _initUART 1048  
                          isa$xinst 0000                            _vfprintf 0F2E  
                         printf@fmt 0040                           putch@byte 0001  
                        _INTCONbits 0FF2                            printf@ap 0044  
                       ??_vfpfcnvrt 0030  
