

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 06 23:45:19 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000000                     _PORTCbits	set	3970
    73   000000                     _PORTDbits	set	3971
    74   000000                     _PORTD	set	3971
    75   000000                     _PORTBbits	set	3969
    76   000000                     _TXSTAbits	set	4012
    77   000000                     _TXREG	set	4013
    78   000000                     _SPBRG	set	4015
    79   000000                     _INTCONbits	set	4082
    80   000000                     _TRISB	set	3987
    81   000000                     _TRISCbits	set	3988
    82   000000                     _TRISD	set	3989
    83   000000                     _RCSTAbits	set	4011
    84   000000                     _BAUDCONbits	set	4024
    85   000000                     _SPBRGH	set	4016
    86   000000                     _ADCON1	set	4033
    87   000000                     _RCONbits	set	4048
    88   000000                     _INTCON2bits	set	4081
    89   000000                     _INTCON3bits	set	4080
    90                           
    91                           	psect	smallconst
    92   000600                     __psmallconst:
    93                           	callstack 0
    94   000600  00                 	db	0
    95   000601                     STR_1:
    96   000601  49                 	db	73	;'I'
    97   000602  6E                 	db	110	;'n'
    98   000603  69                 	db	105	;'i'
    99   000604  74                 	db	116	;'t'
   100   000605  20                 	db	32
   101   000606  55                 	db	85	;'U'
   102   000607  41                 	db	65	;'A'
   103   000608  52                 	db	82	;'R'
   104   000609  54                 	db	84	;'T'
   105   00060A  21                 	db	33
   106   00060B  20                 	db	32
   107   00060C  0A                 	db	10
   108   00060D  00                 	db	0
   109   00060E                     STR_4:
   110   00060E  70                 	db	112	;'p'
   111   00060F  65                 	db	101	;'e'
   112   000610  72                 	db	114	;'r'
   113   000611  64                 	db	100	;'d'
   114   000612  65                 	db	101	;'e'
   115   000613  75                 	db	117	;'u'
   116   000614  20                 	db	32
   117   000615  00                 	db	0
   118   000616                     STR_5:
   119   000616  67                 	db	103	;'g'
   120   000617  61                 	db	97	;'a'
   121   000618  6E                 	db	110	;'n'
   122   000619  68                 	db	104	;'h'
   123   00061A  6F                 	db	111	;'o'
   124   00061B  75                 	db	117	;'u'
   125   00061C  20                 	db	32
   126   00061D  00                 	db	0
   127   00061E                     STR_2:
   128   00061E  25                 	db	37
   129   00061F  64                 	db	100	;'d'
   130   000620  20                 	db	32
   131   000621  00                 	db	0
   132   000622  00                 	db	0	; dummy byte at the end
   133   000000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137   001740                     __pcinit:
   138                           	callstack 0
   139   001740                     start_initialization:
   140                           	callstack 0
   141   001740                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Clear objects allocated to BANK0 (56 bytes)
   145   001740  EE00  F080         	lfsr	0,__pbssBANK0
   146   001744  0E38               	movlw	56
   147   001746                     clear_0:
   148   001746  6AEE               	clrf	postinc0,c
   149   001748  06E8               	decf	wreg,f,c
   150   00174A  E1FD               	bnz	clear_0
   151                           
   152                           ; Clear objects allocated to COMRAM (17 bytes)
   153   00174C  EE00  F054         	lfsr	0,__pbssCOMRAM
   154   001750  0E11               	movlw	17
   155   001752                     clear_1:
   156   001752  6AEE               	clrf	postinc0,c
   157   001754  06E8               	decf	wreg,f,c
   158   001756  E1FD               	bnz	clear_1
   159   001758                     end_of_initialization:
   160                           	callstack 0
   161   001758                     __end_of__initialization:
   162                           	callstack 0
   163   001758  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   164   00175A  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   165   00175C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166   00175E  6EF8               	movwf	tblptru,c
   167   001760  0100               	movlb	0
   168   001762  EF12  F003         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssCOMRAM
   171   000054                     __pbssCOMRAM:
   172                           	callstack 0
   173   000054                     	ds	8
   174   00005C                     _width:
   175                           	callstack 0
   176   00005C                     	ds	2
   177   00005E                     _prec:
   178                           	callstack 0
   179   00005E                     	ds	2
   180   000060                     _flags:
   181                           	callstack 0
   182   000060                     	ds	1
   183   000061                     _seed:
   184                           	callstack 0
   185   000061                     	ds	4
   186                           
   187                           	psect	bssBANK0
   188   000080                     __pbssBANK0:
   189                           	callstack 0
   190   000080                     	ds	8
   191   000088                     	ds	8
   192   000090                     _pressedBTN4:
   193                           	callstack 0
   194   000090                     	ds	2
   195   000092                     _pressedBTN3:
   196                           	callstack 0
   197   000092                     	ds	2
   198   000094                     _pressedBTN2:
   199                           	callstack 0
   200   000094                     	ds	2
   201   000096                     _pressedBTN1:
   202                           	callstack 0
   203   000096                     	ds	2
   204   000098                     _dbuf:
   205                           	callstack 0
   206   000098                     	ds	32
   207                           
   208                           	psect	cstackBANK0
   209   0000B8                     __pcstackBANK0:
   210                           	callstack 0
   211   0000B8                     main@possui_sequencia_facil:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x0
   215   0000B8                     	ds	2
   216   0000BA                     main@sequencia_facil_perdeu:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x2
   220   0000BA                     	ds	2
   221   0000BC                     main@possui_sequencia_media:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x4
   225   0000BC                     	ds	2
   226   0000BE                     main@esperando_sequencia_facil:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x6
   230   0000BE                     	ds	2
   231   0000C0                     main@array:
   232                           	callstack 0
   233                           
   234                           ; 8 bytes @ 0x8
   235   0000C0                     	ds	8
   236   0000C8                     main@sequencia_facil:
   237                           	callstack 0
   238                           
   239                           ; 8 bytes @ 0x10
   240   0000C8                     	ds	8
   241   0000D0                     main@sequencia_facil_finalizou:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x18
   245   0000D0                     	ds	2
   246   0000D2                     main@i:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x1A
   250   0000D2                     	ds	2
   251   0000D4                     main@i_801:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x1C
   255   0000D4                     	ds	2
   256   0000D6                     main@r:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x1E
   260   0000D6                     	ds	2
   261   0000D8                     main@i_789:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x20
   265   0000D8                     	ds	2
   266   0000DA                     main@i_792:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x22
   270   0000DA                     	ds	2
   271   0000DC                     main@i_793:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x24
   275   0000DC                     	ds	2
   276   0000DE                     main@i_794:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x26
   280   0000DE                     	ds	2
   281   0000E0                     main@i_795:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x28
   285   0000E0                     	ds	2
   286   0000E2                     main@i_796:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x2A
   290   0000E2                     	ds	2
   291   0000E4                     main@estagio:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x2C
   295   0000E4                     	ds	2
   296                           
   297                           	psect	cstackCOMRAM
   298   000001                     __pcstackCOMRAM:
   299                           	callstack 0
   300   000001                     ??_interruption:
   301   000001                     
   302                           ; 1 bytes @ 0x0
   303   000001                     	ds	2
   304   000003                     interruption@i:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x2
   308   000003                     	ds	2
   309   000005                     interruption@i_687:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x4
   313   000005                     	ds	2
   314   000007                     interruption@i_688:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x6
   318   000007                     	ds	2
   319   000009                     interruption@i_689:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x8
   323   000009                     	ds	2
   324   00000B                     ??_reproduz_vitoria:
   325   00000B                     ?___awdiv:
   326                           	callstack 0
   327   00000B                     ?___awmod:
   328                           	callstack 0
   329   00000B                     ?___lmul:
   330                           	callstack 0
   331   00000B                     putch@byte:
   332                           	callstack 0
   333   00000B                     setLED@value:
   334                           	callstack 0
   335   00000B                     ___awdiv@dividend:
   336                           	callstack 0
   337   00000B                     ___awmod@dividend:
   338                           	callstack 0
   339   00000B                     ___lmul@multiplier:
   340                           	callstack 0
   341                           
   342                           ; 4 bytes @ 0xA
   343   00000B                     	ds	1
   344   00000C                     ??_setLED:
   345   00000C                     reproduz_vitoria@i:
   346                           	callstack 0
   347   00000C                     fputc@c:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0xB
   351   00000C                     	ds	1
   352   00000D                     ___awdiv@divisor:
   353                           	callstack 0
   354   00000D                     ___awmod@divisor:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0xC
   358   00000D                     	ds	1
   359   00000E                     setLED@pos:
   360                           	callstack 0
   361   00000E                     reproduz_vitoria@i_765:
   362                           	callstack 0
   363   00000E                     fputc@fp:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xD
   367   00000E                     	ds	1
   368   00000F                     ___awdiv@counter:
   369                           	callstack 0
   370   00000F                     ___awmod@counter:
   371                           	callstack 0
   372   00000F                     ___lmul@multiplicand:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0xE
   376   00000F                     	ds	1
   377   000010                     ??_fputc:
   378   000010                     ___awdiv@sign:
   379                           	callstack 0
   380   000010                     ___awmod@sign:
   381                           	callstack 0
   382   000010                     reproduz_vitoria@i_766:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xF
   386   000010                     	ds	1
   387   000011                     ?_abs:
   388                           	callstack 0
   389   000011                     ___awdiv@quotient:
   390                           	callstack 0
   391   000011                     abs@a:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x10
   395   000011                     	ds	1
   396   000012                     reproduz_vitoria@i_767:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x11
   400   000012                     	ds	1
   401   000013                     ??_abs:
   402   000013                     ___lmul@product:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x12
   406   000013                     	ds	2
   407   000015                     fputs@s:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x14
   411   000015                     	ds	2
   412   000017                     ?_rand:
   413                           	callstack 0
   414   000017                     fputs@fp:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x16
   418   000017                     	ds	2
   419   000019                     ??_rand:
   420   000019                     fputs@c:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x18
   424   000019                     	ds	1
   425   00001A                     fputs@i:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x19
   429   00001A                     	ds	2
   430   00001C                     pad@fp:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x1B
   434   00001C                     	ds	2
   435   00001E                     pad@buf:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x1D
   439   00001E                     	ds	2
   440   000020                     pad@p:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x1F
   444   000020                     	ds	2
   445   000022                     ??_pad:
   446                           
   447                           ; 1 bytes @ 0x21
   448   000022                     	ds	1
   449   000023                     pad@i:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x22
   453   000023                     	ds	2
   454   000025                     pad@w:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x24
   458   000025                     	ds	2
   459   000027                     dtoa@fp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x26
   463   000027                     	ds	2
   464   000029                     dtoa@d:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x28
   468   000029                     	ds	2
   469   00002B                     _dtoa$1310:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x2A
   473   00002B                     	ds	2
   474   00002D                     dtoa@p:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x2C
   478   00002D                     	ds	2
   479   00002F                     dtoa@w:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x2E
   483   00002F                     	ds	2
   484   000031                     dtoa@i:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x30
   488   000031                     	ds	2
   489   000033                     dtoa@s:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x32
   493   000033                     	ds	1
   494   000034                     vfpfcnvrt@fp:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x33
   498   000034                     	ds	2
   499   000036                     vfpfcnvrt@fmt:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x35
   503   000036                     	ds	2
   504   000038                     vfpfcnvrt@ap:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x37
   508   000038                     	ds	2
   509   00003A                     ??_vfpfcnvrt:
   510                           
   511                           ; 1 bytes @ 0x39
   512   00003A                     	ds	2
   513   00003C                     vfpfcnvrt@convarg:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x3B
   517   00003C                     	ds	4
   518   000040                     vfpfcnvrt@cp:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x3F
   522   000040                     	ds	2
   523   000042                     ?_vfprintf:
   524                           	callstack 0
   525   000042                     vfprintf@fp:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x41
   529   000042                     	ds	2
   530   000044                     vfprintf@fmt:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x43
   534   000044                     	ds	2
   535   000046                     vfprintf@ap:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x45
   539   000046                     	ds	2
   540   000048                     vfprintf@cfmt:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x47
   544   000048                     	ds	2
   545   00004A                     ?_printf:
   546                           	callstack 0
   547   00004A                     printf@fmt:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x49
   551   00004A                     	ds	4
   552   00004E                     printf@ap:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x4D
   556   00004E                     	ds	2
   557   000050                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x4F
   560   000050                     	ds	4
   561                           
   562 ;;
   563 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   564 ;;
   565 ;; *************** function _main *****************
   566 ;; Defined at:
   567 ;;		line 233 in file "main.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  i               2   42[BANK0 ] int 
   572 ;;  i               2   40[BANK0 ] int 
   573 ;;  i               2   38[BANK0 ] int 
   574 ;;  i               2   36[BANK0 ] int 
   575 ;;  i               2   34[BANK0 ] int 
   576 ;;  i               2   28[BANK0 ] int 
   577 ;;  i               2   32[BANK0 ] int 
   578 ;;  i               2   26[BANK0 ] int 
   579 ;;  sequencia_fa    8   16[BANK0 ] int [4]
   580 ;;  array           8    8[BANK0 ] int [4]
   581 ;;  estagio         2   44[BANK0 ] int 
   582 ;;  r               2   30[BANK0 ] int 
   583 ;;  sequencia_fa    2   24[BANK0 ] int 
   584 ;;  esperando_se    2    6[BANK0 ] int 
   585 ;;  possui_seque    2    4[BANK0 ] int 
   586 ;;  sequencia_fa    2    2[BANK0 ] int 
   587 ;;  possui_seque    2    0[BANK0 ] int 
   588 ;;  possui_seque    2    0        int 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   598 ;;      Params:         0       0       0       0       0       0       0
   599 ;;      Locals:         0      46       0       0       0       0       0
   600 ;;      Temps:          4       0       0       0       0       0       0
   601 ;;      Totals:         4      46       0       0       0       0       0
   602 ;;Total ram usage:       50 bytes
   603 ;; Hardware stack levels required when called: 9
   604 ;; This function calls:
   605 ;;		_init
   606 ;;		_initUART
   607 ;;		_printf
   608 ;;		_rand
   609 ;;		_reproduz_vitoria
   610 ;;		_setLED
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text0
   617   000624                     __ptext0:
   618                           	callstack 0
   619   000624                     _main:
   620                           	callstack 22
   621   000624                     
   622                           ;main.c: 234:     init();
   623   000624  ECC6  F00B         	call	_init	;wreg free
   624                           
   625                           ;main.c: 235:     initUART();
   626   000628  ECD9  F00B         	call	_initUART	;wreg free
   627   00062C                     
   628                           ;main.c: 236:     printf("Init UART! \n");
   629   00062C  0E01               	movlw	low STR_1
   630   00062E  6E4A               	movwf	printf@fmt^0,c
   631   000630  0E06               	movlw	high STR_1
   632   000632  6E4B               	movwf	(printf@fmt+1)^0,c
   633   000634  ECB3  F00B         	call	_printf	;wreg free
   634   000638                     
   635                           ;main.c: 237:     int array[4] = {};
   636   000638  EE20  F0C0         	lfsr	2,main@array
   637   00063C  0E07               	movlw	7
   638   00063E                     u1551:
   639   00063E  6ADE               	clrf	postinc2,c
   640   000640  06E8               	decf	wreg,f,c
   641   000642  E2FD               	bc	u1551
   642   000644                     
   643                           ;main.c: 270:     int estagio = 0;
   644   000644  0E00               	movlw	0
   645   000646  0100               	movlb	0	; () banked
   646   000648  6FE5               	movwf	(main@estagio+1)& (0+255),b
   647   00064A  0E00               	movlw	0
   648   00064C  6FE4               	movwf	main@estagio& (0+255),b
   649   00064E                     
   650                           ; BSR set to: 0
   651                           ;main.c: 272:     int possui_sequencia_facil = 0;
   652   00064E  0E00               	movlw	0
   653   000650  6FB9               	movwf	(main@possui_sequencia_facil+1)& (0+255),b
   654   000652  0E00               	movlw	0
   655   000654  6FB8               	movwf	main@possui_sequencia_facil& (0+255),b
   656   000656                     
   657                           ; BSR set to: 0
   658                           ;main.c: 273:     int esperando_sequencia_facil = 0;
   659   000656  0E00               	movlw	0
   660   000658  6FBF               	movwf	(main@esperando_sequencia_facil+1)& (0+255),b
   661   00065A  0E00               	movlw	0
   662   00065C  6FBE               	movwf	main@esperando_sequencia_facil& (0+255),b
   663   00065E                     
   664                           ; BSR set to: 0
   665                           ;main.c: 274:     int sequencia_facil[4] = {0};
   666   00065E  EE20  F0C8         	lfsr	2,main@sequencia_facil
   667   000662  0E07               	movlw	7
   668   000664                     u1561:
   669   000664  6ADE               	clrf	postinc2,c
   670   000666  06E8               	decf	wreg,f,c
   671   000668  E2FD               	bc	u1561
   672   00066A                     
   673                           ; BSR set to: 0
   674                           ;main.c: 275:     int sequencia_facil_finalizou = 0;
   675   00066A  0E00               	movlw	0
   676   00066C  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
   677   00066E  0E00               	movlw	0
   678   000670  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
   679   000672                     
   680                           ; BSR set to: 0
   681                           ;main.c: 276:     int sequencia_facil_perdeu = 0;
   682   000672  0E00               	movlw	0
   683   000674  6FBB               	movwf	(main@sequencia_facil_perdeu+1)& (0+255),b
   684   000676  0E00               	movlw	0
   685   000678  6FBA               	movwf	main@sequencia_facil_perdeu& (0+255),b
   686   00067A                     
   687                           ; BSR set to: 0
   688                           ;main.c: 277:     int possui_sequencia_media = 0;
   689   00067A  0E00               	movlw	0
   690   00067C  6FBD               	movwf	(main@possui_sequencia_media+1)& (0+255),b
   691   00067E  0E00               	movlw	0
   692   000680  6FBC               	movwf	main@possui_sequencia_media& (0+255),b
   693   000682                     l2075:
   694                           
   695                           ;main.c: 282:         if (estagio == 0) {
   696   000682  0100               	movlb	0	; () banked
   697   000684  51E4               	movf	main@estagio& (0+255),w,b
   698   000686  11E5               	iorwf	(main@estagio+1)& (0+255),w,b
   699   000688  A4D8               	btfss	status,2,c
   700   00068A  EF49  F003         	goto	u1571
   701   00068E  EF4B  F003         	goto	u1570
   702   000692                     u1571:
   703   000692  EFC6  F005         	goto	l2227
   704   000696                     u1570:
   705   000696                     
   706                           ; BSR set to: 0
   707                           ;main.c: 283:             if (possui_sequencia_facil == 0) {
   708   000696  51B8               	movf	main@possui_sequencia_facil& (0+255),w,b
   709   000698  11B9               	iorwf	(main@possui_sequencia_facil+1)& (0+255),w,b
   710   00069A  A4D8               	btfss	status,2,c
   711   00069C  EF52  F003         	goto	u1581
   712   0006A0  EF54  F003         	goto	u1580
   713   0006A4                     u1581:
   714   0006A4  EF86  F003         	goto	l2097
   715   0006A8                     u1580:
   716   0006A8                     
   717                           ; BSR set to: 0
   718                           ;main.c: 284:                 for (int i = 0; i < 4; i++) {
   719   0006A8  0E00               	movlw	0
   720   0006AA  6FD3               	movwf	(main@i+1)& (0+255),b
   721   0006AC  0E00               	movlw	0
   722   0006AE  6FD2               	movwf	main@i& (0+255),b
   723   0006B0                     l2085:
   724                           
   725                           ; BSR set to: 0
   726                           ;main.c: 285:                     r = rand() % 4;
   727   0006B0  ECCC  F00A         	call	_rand	;wreg free
   728   0006B4  0E03               	movlw	3
   729   0006B6  1417               	andwf	?_rand^0,w,c
   730   0006B8  0100               	movlb	0	; () banked
   731   0006BA  6FD6               	movwf	main@r& (0+255),b
   732   0006BC  6BD7               	clrf	(main@r+1)& (0+255),b
   733   0006BE                     
   734                           ; BSR set to: 0
   735                           ;main.c: 286:                     r = r + 1;
   736   0006BE  0E01               	movlw	1
   737   0006C0  25D6               	addwf	main@r& (0+255),w,b
   738   0006C2  6FD6               	movwf	main@r& (0+255),b
   739   0006C4  0E00               	movlw	0
   740   0006C6  21D7               	addwfc	(main@r+1)& (0+255),w,b
   741   0006C8  6FD7               	movwf	(main@r+1)& (0+255),b
   742   0006CA                     
   743                           ; BSR set to: 0
   744                           ;main.c: 287:                     array[i] = r;
   745   0006CA  90D8               	bcf	status,0,c
   746   0006CC  35D2               	rlcf	main@i& (0+255),w,b
   747   0006CE  6ED9               	movwf	fsr2l,c
   748   0006D0  35D3               	rlcf	(main@i+1)& (0+255),w,b
   749   0006D2  6EDA               	movwf	fsr2h,c
   750   0006D4  0EC0               	movlw	low main@array
   751   0006D6  26D9               	addwf	fsr2l,f,c
   752   0006D8  0E00               	movlw	high main@array
   753   0006DA  22DA               	addwfc	fsr2h,f,c
   754   0006DC  C0D6  FFDE         	movff	main@r,postinc2
   755   0006E0  C0D7  FFDD         	movff	main@r+1,postdec2
   756   0006E4                     
   757                           ; BSR set to: 0
   758                           ;main.c: 288:                 }
   759   0006E4  4BD2               	infsnz	main@i& (0+255),f,b
   760   0006E6  2BD3               	incf	(main@i+1)& (0+255),f,b
   761   0006E8                     
   762                           ; BSR set to: 0
   763   0006E8  BFD3               	btfsc	(main@i+1)& (0+255),7,b
   764   0006EA  EF80  F003         	goto	u1591
   765   0006EE  51D3               	movf	(main@i+1)& (0+255),w,b
   766   0006F0  E109               	bnz	u1590
   767   0006F2  0E04               	movlw	4
   768   0006F4  5DD2               	subwf	main@i& (0+255),w,b
   769   0006F6  A0D8               	btfss	status,0,c
   770   0006F8  EF80  F003         	goto	u1591
   771   0006FC  EF82  F003         	goto	u1590
   772   000700                     u1591:
   773   000700  EF58  F003         	goto	l2085
   774   000704                     u1590:
   775   000704                     
   776                           ; BSR set to: 0
   777                           ;main.c: 289:                 possui_sequencia_facil = 1;
   778   000704  0E00               	movlw	0
   779   000706  6FB9               	movwf	(main@possui_sequencia_facil+1)& (0+255),b
   780   000708  0E01               	movlw	1
   781   00070A  6FB8               	movwf	main@possui_sequencia_facil& (0+255),b
   782   00070C                     l2097:
   783                           
   784                           ; BSR set to: 0
   785                           ;main.c: 292:             if (esperando_sequencia_facil == 0) {
   786   00070C  51BE               	movf	main@esperando_sequencia_facil& (0+255),w,b
   787   00070E  11BF               	iorwf	(main@esperando_sequencia_facil+1)& (0+255),w,b
   788   000710  A4D8               	btfss	status,2,c
   789   000712  EF8D  F003         	goto	u1601
   790   000716  EF8F  F003         	goto	u1600
   791   00071A                     u1601:
   792   00071A  EFEC  F003         	goto	l137
   793   00071E                     u1600:
   794   00071E                     
   795                           ; BSR set to: 0
   796                           ;main.c: 293:                 for (int i = 0; i < 4; i++) {
   797   00071E  0E00               	movlw	0
   798   000720  6FD9               	movwf	(main@i_789+1)& (0+255),b
   799   000722  0E00               	movlw	0
   800   000724  6FD8               	movwf	main@i_789& (0+255),b
   801   000726                     l2105:
   802                           
   803                           ; BSR set to: 0
   804                           ;main.c: 294:                     printf("%d ", array[i]);
   805   000726  0E1E               	movlw	low STR_2
   806   000728  6E4A               	movwf	printf@fmt^0,c
   807   00072A  0E06               	movlw	high STR_2
   808   00072C  6E4B               	movwf	(printf@fmt+1)^0,c
   809   00072E  90D8               	bcf	status,0,c
   810   000730  35D8               	rlcf	main@i_789& (0+255),w,b
   811   000732  6ED9               	movwf	fsr2l,c
   812   000734  35D9               	rlcf	(main@i_789+1)& (0+255),w,b
   813   000736  6EDA               	movwf	fsr2h,c
   814   000738  0EC0               	movlw	low main@array
   815   00073A  26D9               	addwf	fsr2l,f,c
   816   00073C  0E00               	movlw	high main@array
   817   00073E  22DA               	addwfc	fsr2h,f,c
   818   000740  CFDE F04C          	movff	postinc2,?_printf+2
   819   000744  CFDD F04D          	movff	postdec2,?_printf+3
   820   000748  ECB3  F00B         	call	_printf	;wreg free
   821   00074C                     
   822                           ;main.c: 295:                     setLED(array[i], 1);
   823   00074C  0E01               	movlw	1
   824   00074E  6E0B               	movwf	setLED@value^0,c
   825   000750  90D8               	bcf	status,0,c
   826   000752  0100               	movlb	0	; () banked
   827   000754  35D8               	rlcf	main@i_789& (0+255),w,b
   828   000756  6ED9               	movwf	fsr2l,c
   829   000758  35D9               	rlcf	(main@i_789+1)& (0+255),w,b
   830   00075A  6EDA               	movwf	fsr2h,c
   831   00075C  0EC0               	movlw	low main@array
   832   00075E  26D9               	addwf	fsr2l,f,c
   833   000760  0E00               	movlw	high main@array
   834   000762  22DA               	addwfc	fsr2h,f,c
   835   000764  50DF               	movf	indf2,w,c
   836   000766  EC52  F00A         	call	_setLED
   837   00076A                     
   838                           ;main.c: 296:                     _delay((unsigned long)((1000)*(16000000/4000.0)));
   839   00076A  0E15               	movlw	21
   840   00076C  6E51               	movwf	(??_main+1)^0,c
   841   00076E  0E4B               	movlw	75
   842   000770  6E50               	movwf	??_main^0,c
   843   000772  0EBE               	movlw	190
   844   000774                     u1877:
   845   000774  2EE8               	decfsz	wreg,f,c
   846   000776  D7FE               	bra	u1877
   847   000778  2E50               	decfsz	??_main^0,f,c
   848   00077A  D7FC               	bra	u1877
   849   00077C  2E51               	decfsz	(??_main+1)^0,f,c
   850   00077E  D7FA               	bra	u1877
   851   000780  D000               	nop2	
   852   000782                     
   853                           ;main.c: 297:                     setLED(array[i], 0);
   854   000782  0E00               	movlw	0
   855   000784  6E0B               	movwf	setLED@value^0,c
   856   000786  90D8               	bcf	status,0,c
   857   000788  0100               	movlb	0	; () banked
   858   00078A  35D8               	rlcf	main@i_789& (0+255),w,b
   859   00078C  6ED9               	movwf	fsr2l,c
   860   00078E  35D9               	rlcf	(main@i_789+1)& (0+255),w,b
   861   000790  6EDA               	movwf	fsr2h,c
   862   000792  0EC0               	movlw	low main@array
   863   000794  26D9               	addwf	fsr2l,f,c
   864   000796  0E00               	movlw	high main@array
   865   000798  22DA               	addwfc	fsr2h,f,c
   866   00079A  50DF               	movf	indf2,w,c
   867   00079C  EC52  F00A         	call	_setLED
   868   0007A0                     
   869                           ;main.c: 298:                     _delay((unsigned long)((500)*(16000000/4000.0)));
   870   0007A0  0E0B               	movlw	11
   871   0007A2  6E51               	movwf	(??_main+1)^0,c
   872   0007A4  0E26               	movlw	38
   873   0007A6  6E50               	movwf	??_main^0,c
   874   0007A8  0E5E               	movlw	94
   875   0007AA                     u1887:
   876   0007AA  2EE8               	decfsz	wreg,f,c
   877   0007AC  D7FE               	bra	u1887
   878   0007AE  2E50               	decfsz	??_main^0,f,c
   879   0007B0  D7FC               	bra	u1887
   880   0007B2  2E51               	decfsz	(??_main+1)^0,f,c
   881   0007B4  D7FA               	bra	u1887
   882   0007B6                     
   883                           ;main.c: 299:                 }
   884   0007B6  0100               	movlb	0	; () banked
   885   0007B8  4BD8               	infsnz	main@i_789& (0+255),f,b
   886   0007BA  2BD9               	incf	(main@i_789+1)& (0+255),f,b
   887   0007BC                     
   888                           ; BSR set to: 0
   889   0007BC  BFD9               	btfsc	(main@i_789+1)& (0+255),7,b
   890   0007BE  EFEA  F003         	goto	u1611
   891   0007C2  51D9               	movf	(main@i_789+1)& (0+255),w,b
   892   0007C4  E109               	bnz	u1610
   893   0007C6  0E04               	movlw	4
   894   0007C8  5DD8               	subwf	main@i_789& (0+255),w,b
   895   0007CA  A0D8               	btfss	status,0,c
   896   0007CC  EFEA  F003         	goto	u1611
   897   0007D0  EFEC  F003         	goto	u1610
   898   0007D4                     u1611:
   899   0007D4  EF93  F003         	goto	l2105
   900   0007D8                     u1610:
   901   0007D8                     l137:
   902                           
   903                           ; BSR set to: 0
   904                           ;main.c: 303:             if (esperando_sequencia_facil = 1) {
   905   0007D8  0E00               	movlw	0
   906   0007DA  6FBF               	movwf	(main@esperando_sequencia_facil+1)& (0+255),b
   907   0007DC  0E01               	movlw	1
   908   0007DE  6FBE               	movwf	main@esperando_sequencia_facil& (0+255),b
   909   0007E0                     
   910                           ; BSR set to: 0
   911                           ;main.c: 304:                 if (pressedBTN1 == 1) {
   912   0007E0  0596               	decf	_pressedBTN1& (0+255),w,b
   913   0007E2  1197               	iorwf	(_pressedBTN1+1)& (0+255),w,b
   914   0007E4  A4D8               	btfss	status,2,c
   915   0007E6  EFF7  F003         	goto	u1621
   916   0007EA  EFF9  F003         	goto	u1620
   917   0007EE                     u1621:
   918   0007EE  EF4C  F004         	goto	l2141
   919   0007F2                     u1620:
   920   0007F2                     
   921                           ; BSR set to: 0
   922                           ;main.c: 305:                     pressedBTN1 = 0;
   923   0007F2  0E00               	movlw	0
   924   0007F4  6F97               	movwf	(_pressedBTN1+1)& (0+255),b
   925   0007F6  0E00               	movlw	0
   926   0007F8  6F96               	movwf	_pressedBTN1& (0+255),b
   927                           
   928                           ;main.c: 306:                     sequencia_facil_finalizou = 1;
   929   0007FA  0E00               	movlw	0
   930   0007FC  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
   931   0007FE  0E01               	movlw	1
   932   000800  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
   933                           
   934                           ;main.c: 307:                     for (int i = 0; i < 4; i++) {
   935   000802  0E00               	movlw	0
   936   000804  6FDB               	movwf	(main@i_792+1)& (0+255),b
   937   000806  0E00               	movlw	0
   938   000808  6FDA               	movwf	main@i_792& (0+255),b
   939   00080A                     l2125:
   940                           
   941                           ; BSR set to: 0
   942   00080A  BFDB               	btfsc	(main@i_792+1)& (0+255),7,b
   943   00080C  EF11  F004         	goto	u1631
   944   000810  51DB               	movf	(main@i_792+1)& (0+255),w,b
   945   000812  E109               	bnz	u1630
   946   000814  0E04               	movlw	4
   947   000816  5DDA               	subwf	main@i_792& (0+255),w,b
   948   000818  A0D8               	btfss	status,0,c
   949   00081A  EF11  F004         	goto	u1631
   950   00081E  EF13  F004         	goto	u1630
   951   000822                     u1631:
   952   000822  EF15  F004         	goto	l2129
   953   000826                     u1630:
   954   000826  EF54  F005         	goto	l2201
   955   00082A                     l2129:
   956                           
   957                           ; BSR set to: 0
   958                           ;main.c: 308:                         if (sequencia_facil[i] == 0) {
   959   00082A  90D8               	bcf	status,0,c
   960   00082C  35DA               	rlcf	main@i_792& (0+255),w,b
   961   00082E  6ED9               	movwf	fsr2l,c
   962   000830  35DB               	rlcf	(main@i_792+1)& (0+255),w,b
   963   000832  6EDA               	movwf	fsr2h,c
   964   000834  0EC8               	movlw	low main@sequencia_facil
   965   000836  26D9               	addwf	fsr2l,f,c
   966   000838  0E00               	movlw	high main@sequencia_facil
   967   00083A  22DA               	addwfc	fsr2h,f,c
   968   00083C  50DE               	movf	postinc2,w,c
   969   00083E  10DE               	iorwf	postinc2,w,c
   970   000840  A4D8               	btfss	status,2,c
   971   000842  EF25  F004         	goto	u1641
   972   000846  EF27  F004         	goto	u1640
   973   00084A                     u1641:
   974   00084A  EF48  F004         	goto	l2137
   975   00084E                     u1640:
   976   00084E                     
   977                           ; BSR set to: 0
   978                           ;main.c: 309:                             sequencia_facil[i] = 1;
   979   00084E  90D8               	bcf	status,0,c
   980   000850  35DA               	rlcf	main@i_792& (0+255),w,b
   981   000852  6ED9               	movwf	fsr2l,c
   982   000854  35DB               	rlcf	(main@i_792+1)& (0+255),w,b
   983   000856  6EDA               	movwf	fsr2h,c
   984   000858  0EC8               	movlw	low main@sequencia_facil
   985   00085A  26D9               	addwf	fsr2l,f,c
   986   00085C  0E00               	movlw	high main@sequencia_facil
   987   00085E  22DA               	addwfc	fsr2h,f,c
   988   000860  0E01               	movlw	1
   989   000862  6EDE               	movwf	postinc2,c
   990   000864  0E00               	movlw	0
   991   000866  6EDD               	movwf	postdec2,c
   992   000868                     
   993                           ; BSR set to: 0
   994                           ;main.c: 310:                             if (i < 3) {
   995   000868  BFDB               	btfsc	(main@i_792+1)& (0+255),7,b
   996   00086A  EF42  F004         	goto	u1650
   997   00086E  51DB               	movf	(main@i_792+1)& (0+255),w,b
   998   000870  E107               	bnz	u1651
   999   000872  0E03               	movlw	3
  1000   000874  5DDA               	subwf	main@i_792& (0+255),w,b
  1001   000876  B0D8               	btfsc	status,0,c
  1002   000878  EF40  F004         	goto	u1651
  1003   00087C  EF42  F004         	goto	u1650
  1004   000880                     u1651:
  1005   000880  EF54  F005         	goto	l2201
  1006   000884                     u1650:
  1007   000884                     l2135:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main.c: 311:                                 sequencia_facil_finalizou = 0;
  1011   000884  0E00               	movlw	0
  1012   000886  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
  1013   000888  0E00               	movlw	0
  1014   00088A  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
  1015   00088C  EF54  F005         	goto	l2201
  1016   000890                     l2137:
  1017                           
  1018                           ; BSR set to: 0
  1019                           ;main.c: 315:                     }
  1020   000890  4BDA               	infsnz	main@i_792& (0+255),f,b
  1021   000892  2BDB               	incf	(main@i_792+1)& (0+255),f,b
  1022   000894  EF05  F004         	goto	l2125
  1023   000898                     l2141:
  1024                           
  1025                           ; BSR set to: 0
  1026   000898  0594               	decf	_pressedBTN2& (0+255),w,b
  1027   00089A  1195               	iorwf	(_pressedBTN2+1)& (0+255),w,b
  1028   00089C  A4D8               	btfss	status,2,c
  1029   00089E  EF53  F004         	goto	u1661
  1030   0008A2  EF55  F004         	goto	u1660
  1031   0008A6                     u1661:
  1032   0008A6  EFA4  F004         	goto	l2161
  1033   0008AA                     u1660:
  1034   0008AA                     
  1035                           ; BSR set to: 0
  1036                           ;main.c: 318:                     pressedBTN2 = 0;
  1037   0008AA  0E00               	movlw	0
  1038   0008AC  6F95               	movwf	(_pressedBTN2+1)& (0+255),b
  1039   0008AE  0E00               	movlw	0
  1040   0008B0  6F94               	movwf	_pressedBTN2& (0+255),b
  1041                           
  1042                           ;main.c: 319:                     sequencia_facil_finalizou = 1;
  1043   0008B2  0E00               	movlw	0
  1044   0008B4  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
  1045   0008B6  0E01               	movlw	1
  1046   0008B8  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
  1047                           
  1048                           ;main.c: 320:                     for (int i = 0; i < 4; i++) {
  1049   0008BA  0E00               	movlw	0
  1050   0008BC  6FDD               	movwf	(main@i_793+1)& (0+255),b
  1051   0008BE  0E00               	movlw	0
  1052   0008C0  6FDC               	movwf	main@i_793& (0+255),b
  1053   0008C2                     l2145:
  1054                           
  1055                           ; BSR set to: 0
  1056   0008C2  BFDD               	btfsc	(main@i_793+1)& (0+255),7,b
  1057   0008C4  EF6D  F004         	goto	u1671
  1058   0008C8  51DD               	movf	(main@i_793+1)& (0+255),w,b
  1059   0008CA  E109               	bnz	u1670
  1060   0008CC  0E04               	movlw	4
  1061   0008CE  5DDC               	subwf	main@i_793& (0+255),w,b
  1062   0008D0  A0D8               	btfss	status,0,c
  1063   0008D2  EF6D  F004         	goto	u1671
  1064   0008D6  EF6F  F004         	goto	u1670
  1065   0008DA                     u1671:
  1066   0008DA  EF71  F004         	goto	l2149
  1067   0008DE                     u1670:
  1068   0008DE  EF54  F005         	goto	l2201
  1069   0008E2                     l2149:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;main.c: 321:                         if (sequencia_facil[i] == 0) {
  1073   0008E2  90D8               	bcf	status,0,c
  1074   0008E4  35DC               	rlcf	main@i_793& (0+255),w,b
  1075   0008E6  6ED9               	movwf	fsr2l,c
  1076   0008E8  35DD               	rlcf	(main@i_793+1)& (0+255),w,b
  1077   0008EA  6EDA               	movwf	fsr2h,c
  1078   0008EC  0EC8               	movlw	low main@sequencia_facil
  1079   0008EE  26D9               	addwf	fsr2l,f,c
  1080   0008F0  0E00               	movlw	high main@sequencia_facil
  1081   0008F2  22DA               	addwfc	fsr2h,f,c
  1082   0008F4  50DE               	movf	postinc2,w,c
  1083   0008F6  10DE               	iorwf	postinc2,w,c
  1084   0008F8  A4D8               	btfss	status,2,c
  1085   0008FA  EF81  F004         	goto	u1681
  1086   0008FE  EF83  F004         	goto	u1680
  1087   000902                     u1681:
  1088   000902  EFA0  F004         	goto	l2157
  1089   000906                     u1680:
  1090   000906                     
  1091                           ; BSR set to: 0
  1092                           ;main.c: 322:                             sequencia_facil[i] = 2;
  1093   000906  90D8               	bcf	status,0,c
  1094   000908  35DC               	rlcf	main@i_793& (0+255),w,b
  1095   00090A  6ED9               	movwf	fsr2l,c
  1096   00090C  35DD               	rlcf	(main@i_793+1)& (0+255),w,b
  1097   00090E  6EDA               	movwf	fsr2h,c
  1098   000910  0EC8               	movlw	low main@sequencia_facil
  1099   000912  26D9               	addwf	fsr2l,f,c
  1100   000914  0E00               	movlw	high main@sequencia_facil
  1101   000916  22DA               	addwfc	fsr2h,f,c
  1102   000918  0E02               	movlw	2
  1103   00091A  6EDE               	movwf	postinc2,c
  1104   00091C  0E00               	movlw	0
  1105   00091E  6EDD               	movwf	postdec2,c
  1106   000920                     
  1107                           ; BSR set to: 0
  1108                           ;main.c: 323:                             if (i < 3) {
  1109   000920  BFDD               	btfsc	(main@i_793+1)& (0+255),7,b
  1110   000922  EF9E  F004         	goto	u1690
  1111   000926  51DD               	movf	(main@i_793+1)& (0+255),w,b
  1112   000928  E107               	bnz	u1691
  1113   00092A  0E03               	movlw	3
  1114   00092C  5DDC               	subwf	main@i_793& (0+255),w,b
  1115   00092E  B0D8               	btfsc	status,0,c
  1116   000930  EF9C  F004         	goto	u1691
  1117   000934  EF9E  F004         	goto	u1690
  1118   000938                     u1691:
  1119   000938  EF54  F005         	goto	l2201
  1120   00093C                     u1690:
  1121   00093C  EF42  F004         	goto	l2135
  1122   000940                     l2157:
  1123                           
  1124                           ; BSR set to: 0
  1125                           ;main.c: 328:                     }
  1126   000940  4BDC               	infsnz	main@i_793& (0+255),f,b
  1127   000942  2BDD               	incf	(main@i_793+1)& (0+255),f,b
  1128   000944  EF61  F004         	goto	l2145
  1129   000948                     l2161:
  1130                           
  1131                           ; BSR set to: 0
  1132   000948  0592               	decf	_pressedBTN3& (0+255),w,b
  1133   00094A  1193               	iorwf	(_pressedBTN3+1)& (0+255),w,b
  1134   00094C  A4D8               	btfss	status,2,c
  1135   00094E  EFAB  F004         	goto	u1701
  1136   000952  EFAD  F004         	goto	u1700
  1137   000956                     u1701:
  1138   000956  EFFC  F004         	goto	l2181
  1139   00095A                     u1700:
  1140   00095A                     
  1141                           ; BSR set to: 0
  1142                           ;main.c: 331:                     pressedBTN3 = 0;
  1143   00095A  0E00               	movlw	0
  1144   00095C  6F93               	movwf	(_pressedBTN3+1)& (0+255),b
  1145   00095E  0E00               	movlw	0
  1146   000960  6F92               	movwf	_pressedBTN3& (0+255),b
  1147                           
  1148                           ;main.c: 332:                     sequencia_facil_finalizou = 1;
  1149   000962  0E00               	movlw	0
  1150   000964  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
  1151   000966  0E01               	movlw	1
  1152   000968  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
  1153                           
  1154                           ;main.c: 333:                     for (int i = 0; i < 4; i++) {
  1155   00096A  0E00               	movlw	0
  1156   00096C  6FDF               	movwf	(main@i_794+1)& (0+255),b
  1157   00096E  0E00               	movlw	0
  1158   000970  6FDE               	movwf	main@i_794& (0+255),b
  1159   000972                     l2165:
  1160                           
  1161                           ; BSR set to: 0
  1162   000972  BFDF               	btfsc	(main@i_794+1)& (0+255),7,b
  1163   000974  EFC5  F004         	goto	u1711
  1164   000978  51DF               	movf	(main@i_794+1)& (0+255),w,b
  1165   00097A  E109               	bnz	u1710
  1166   00097C  0E04               	movlw	4
  1167   00097E  5DDE               	subwf	main@i_794& (0+255),w,b
  1168   000980  A0D8               	btfss	status,0,c
  1169   000982  EFC5  F004         	goto	u1711
  1170   000986  EFC7  F004         	goto	u1710
  1171   00098A                     u1711:
  1172   00098A  EFC9  F004         	goto	l2169
  1173   00098E                     u1710:
  1174   00098E  EF54  F005         	goto	l2201
  1175   000992                     l2169:
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;main.c: 334:                         if (sequencia_facil[i] == 0) {
  1179   000992  90D8               	bcf	status,0,c
  1180   000994  35DE               	rlcf	main@i_794& (0+255),w,b
  1181   000996  6ED9               	movwf	fsr2l,c
  1182   000998  35DF               	rlcf	(main@i_794+1)& (0+255),w,b
  1183   00099A  6EDA               	movwf	fsr2h,c
  1184   00099C  0EC8               	movlw	low main@sequencia_facil
  1185   00099E  26D9               	addwf	fsr2l,f,c
  1186   0009A0  0E00               	movlw	high main@sequencia_facil
  1187   0009A2  22DA               	addwfc	fsr2h,f,c
  1188   0009A4  50DE               	movf	postinc2,w,c
  1189   0009A6  10DE               	iorwf	postinc2,w,c
  1190   0009A8  A4D8               	btfss	status,2,c
  1191   0009AA  EFD9  F004         	goto	u1721
  1192   0009AE  EFDB  F004         	goto	u1720
  1193   0009B2                     u1721:
  1194   0009B2  EFF8  F004         	goto	l2177
  1195   0009B6                     u1720:
  1196   0009B6                     
  1197                           ; BSR set to: 0
  1198                           ;main.c: 335:                             sequencia_facil[i] = 3;
  1199   0009B6  90D8               	bcf	status,0,c
  1200   0009B8  35DE               	rlcf	main@i_794& (0+255),w,b
  1201   0009BA  6ED9               	movwf	fsr2l,c
  1202   0009BC  35DF               	rlcf	(main@i_794+1)& (0+255),w,b
  1203   0009BE  6EDA               	movwf	fsr2h,c
  1204   0009C0  0EC8               	movlw	low main@sequencia_facil
  1205   0009C2  26D9               	addwf	fsr2l,f,c
  1206   0009C4  0E00               	movlw	high main@sequencia_facil
  1207   0009C6  22DA               	addwfc	fsr2h,f,c
  1208   0009C8  0E03               	movlw	3
  1209   0009CA  6EDE               	movwf	postinc2,c
  1210   0009CC  0E00               	movlw	0
  1211   0009CE  6EDD               	movwf	postdec2,c
  1212   0009D0                     
  1213                           ; BSR set to: 0
  1214                           ;main.c: 336:                             if (i < 3) {
  1215   0009D0  BFDF               	btfsc	(main@i_794+1)& (0+255),7,b
  1216   0009D2  EFF6  F004         	goto	u1730
  1217   0009D6  51DF               	movf	(main@i_794+1)& (0+255),w,b
  1218   0009D8  E107               	bnz	u1731
  1219   0009DA  0E03               	movlw	3
  1220   0009DC  5DDE               	subwf	main@i_794& (0+255),w,b
  1221   0009DE  B0D8               	btfsc	status,0,c
  1222   0009E0  EFF4  F004         	goto	u1731
  1223   0009E4  EFF6  F004         	goto	u1730
  1224   0009E8                     u1731:
  1225   0009E8  EF54  F005         	goto	l2201
  1226   0009EC                     u1730:
  1227   0009EC  EF42  F004         	goto	l2135
  1228   0009F0                     l2177:
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;main.c: 341:                     }
  1232   0009F0  4BDE               	infsnz	main@i_794& (0+255),f,b
  1233   0009F2  2BDF               	incf	(main@i_794+1)& (0+255),f,b
  1234   0009F4  EFB9  F004         	goto	l2165
  1235   0009F8                     l2181:
  1236                           
  1237                           ; BSR set to: 0
  1238   0009F8  0590               	decf	_pressedBTN4& (0+255),w,b
  1239   0009FA  1191               	iorwf	(_pressedBTN4+1)& (0+255),w,b
  1240   0009FC  A4D8               	btfss	status,2,c
  1241   0009FE  EF03  F005         	goto	u1741
  1242   000A02  EF05  F005         	goto	u1740
  1243   000A06                     u1741:
  1244   000A06  EF54  F005         	goto	l2201
  1245   000A0A                     u1740:
  1246   000A0A                     
  1247                           ; BSR set to: 0
  1248                           ;main.c: 344:                     pressedBTN4 = 0;
  1249   000A0A  0E00               	movlw	0
  1250   000A0C  6F91               	movwf	(_pressedBTN4+1)& (0+255),b
  1251   000A0E  0E00               	movlw	0
  1252   000A10  6F90               	movwf	_pressedBTN4& (0+255),b
  1253                           
  1254                           ;main.c: 345:                     sequencia_facil_finalizou = 1;
  1255   000A12  0E00               	movlw	0
  1256   000A14  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
  1257   000A16  0E01               	movlw	1
  1258   000A18  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
  1259                           
  1260                           ;main.c: 346:                     for (int i = 0; i < 4; i++) {
  1261   000A1A  0E00               	movlw	0
  1262   000A1C  6FE1               	movwf	(main@i_795+1)& (0+255),b
  1263   000A1E  0E00               	movlw	0
  1264   000A20  6FE0               	movwf	main@i_795& (0+255),b
  1265   000A22                     l2185:
  1266                           
  1267                           ; BSR set to: 0
  1268   000A22  BFE1               	btfsc	(main@i_795+1)& (0+255),7,b
  1269   000A24  EF1D  F005         	goto	u1751
  1270   000A28  51E1               	movf	(main@i_795+1)& (0+255),w,b
  1271   000A2A  E109               	bnz	u1750
  1272   000A2C  0E04               	movlw	4
  1273   000A2E  5DE0               	subwf	main@i_795& (0+255),w,b
  1274   000A30  A0D8               	btfss	status,0,c
  1275   000A32  EF1D  F005         	goto	u1751
  1276   000A36  EF1F  F005         	goto	u1750
  1277   000A3A                     u1751:
  1278   000A3A  EF21  F005         	goto	l2189
  1279   000A3E                     u1750:
  1280   000A3E  EF54  F005         	goto	l2201
  1281   000A42                     l2189:
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;main.c: 347:                         if (sequencia_facil[i] == 0) {
  1285   000A42  90D8               	bcf	status,0,c
  1286   000A44  35E0               	rlcf	main@i_795& (0+255),w,b
  1287   000A46  6ED9               	movwf	fsr2l,c
  1288   000A48  35E1               	rlcf	(main@i_795+1)& (0+255),w,b
  1289   000A4A  6EDA               	movwf	fsr2h,c
  1290   000A4C  0EC8               	movlw	low main@sequencia_facil
  1291   000A4E  26D9               	addwf	fsr2l,f,c
  1292   000A50  0E00               	movlw	high main@sequencia_facil
  1293   000A52  22DA               	addwfc	fsr2h,f,c
  1294   000A54  50DE               	movf	postinc2,w,c
  1295   000A56  10DE               	iorwf	postinc2,w,c
  1296   000A58  A4D8               	btfss	status,2,c
  1297   000A5A  EF31  F005         	goto	u1761
  1298   000A5E  EF33  F005         	goto	u1760
  1299   000A62                     u1761:
  1300   000A62  EF50  F005         	goto	l2197
  1301   000A66                     u1760:
  1302   000A66                     
  1303                           ; BSR set to: 0
  1304                           ;main.c: 348:                             sequencia_facil[i] = 4;
  1305   000A66  90D8               	bcf	status,0,c
  1306   000A68  35E0               	rlcf	main@i_795& (0+255),w,b
  1307   000A6A  6ED9               	movwf	fsr2l,c
  1308   000A6C  35E1               	rlcf	(main@i_795+1)& (0+255),w,b
  1309   000A6E  6EDA               	movwf	fsr2h,c
  1310   000A70  0EC8               	movlw	low main@sequencia_facil
  1311   000A72  26D9               	addwf	fsr2l,f,c
  1312   000A74  0E00               	movlw	high main@sequencia_facil
  1313   000A76  22DA               	addwfc	fsr2h,f,c
  1314   000A78  0E04               	movlw	4
  1315   000A7A  6EDE               	movwf	postinc2,c
  1316   000A7C  0E00               	movlw	0
  1317   000A7E  6EDD               	movwf	postdec2,c
  1318   000A80                     
  1319                           ; BSR set to: 0
  1320                           ;main.c: 349:                             if (i < 3) {
  1321   000A80  BFE1               	btfsc	(main@i_795+1)& (0+255),7,b
  1322   000A82  EF4E  F005         	goto	u1770
  1323   000A86  51E1               	movf	(main@i_795+1)& (0+255),w,b
  1324   000A88  E107               	bnz	u1771
  1325   000A8A  0E03               	movlw	3
  1326   000A8C  5DE0               	subwf	main@i_795& (0+255),w,b
  1327   000A8E  B0D8               	btfsc	status,0,c
  1328   000A90  EF4C  F005         	goto	u1771
  1329   000A94  EF4E  F005         	goto	u1770
  1330   000A98                     u1771:
  1331   000A98  EF54  F005         	goto	l2201
  1332   000A9C                     u1770:
  1333   000A9C  EF42  F004         	goto	l2135
  1334   000AA0                     l2197:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;main.c: 354:                     }
  1338   000AA0  4BE0               	infsnz	main@i_795& (0+255),f,b
  1339   000AA2  2BE1               	incf	(main@i_795+1)& (0+255),f,b
  1340   000AA4  EF11  F005         	goto	l2185
  1341   000AA8                     l2201:
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;main.c: 358:                 if (sequencia_facil_finalizou == 1) {
  1345   000AA8  05D0               	decf	main@sequencia_facil_finalizou& (0+255),w,b
  1346   000AAA  11D1               	iorwf	(main@sequencia_facil_finalizou+1)& (0+255),w,b
  1347   000AAC  A4D8               	btfss	status,2,c
  1348   000AAE  EF5B  F005         	goto	u1781
  1349   000AB2  EF5D  F005         	goto	u1780
  1350   000AB6                     u1781:
  1351   000AB6  EF41  F003         	goto	l2075
  1352   000ABA                     u1780:
  1353   000ABA                     
  1354                           ; BSR set to: 0
  1355                           ;main.c: 359:                     for (int i = 0; i < 4; i++) {
  1356   000ABA  0E00               	movlw	0
  1357   000ABC  6FE3               	movwf	(main@i_796+1)& (0+255),b
  1358   000ABE  0E00               	movlw	0
  1359   000AC0  6FE2               	movwf	main@i_796& (0+255),b
  1360   000AC2                     l2205:
  1361                           
  1362                           ; BSR set to: 0
  1363   000AC2  BFE3               	btfsc	(main@i_796+1)& (0+255),7,b
  1364   000AC4  EF6D  F005         	goto	u1791
  1365   000AC8  51E3               	movf	(main@i_796+1)& (0+255),w,b
  1366   000ACA  E109               	bnz	u1790
  1367   000ACC  0E04               	movlw	4
  1368   000ACE  5DE2               	subwf	main@i_796& (0+255),w,b
  1369   000AD0  A0D8               	btfss	status,0,c
  1370   000AD2  EF6D  F005         	goto	u1791
  1371   000AD6  EF6F  F005         	goto	u1790
  1372   000ADA                     u1791:
  1373   000ADA  EF71  F005         	goto	l2209
  1374   000ADE                     u1790:
  1375   000ADE  EFAB  F005         	goto	l2219
  1376   000AE2                     l2209:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;main.c: 360:                         printf("%d ", sequencia_facil[i]);
  1380   000AE2  0E1E               	movlw	low STR_2
  1381   000AE4  6E4A               	movwf	printf@fmt^0,c
  1382   000AE6  0E06               	movlw	high STR_2
  1383   000AE8  6E4B               	movwf	(printf@fmt+1)^0,c
  1384   000AEA  90D8               	bcf	status,0,c
  1385   000AEC  35E2               	rlcf	main@i_796& (0+255),w,b
  1386   000AEE  6ED9               	movwf	fsr2l,c
  1387   000AF0  35E3               	rlcf	(main@i_796+1)& (0+255),w,b
  1388   000AF2  6EDA               	movwf	fsr2h,c
  1389   000AF4  0EC8               	movlw	low main@sequencia_facil
  1390   000AF6  26D9               	addwf	fsr2l,f,c
  1391   000AF8  0E00               	movlw	high main@sequencia_facil
  1392   000AFA  22DA               	addwfc	fsr2h,f,c
  1393   000AFC  CFDE F04C          	movff	postinc2,?_printf+2
  1394   000B00  CFDD F04D          	movff	postdec2,?_printf+3
  1395   000B04  ECB3  F00B         	call	_printf	;wreg free
  1396   000B08                     
  1397                           ;main.c: 361:                         if (sequencia_facil[i] != array[i]) {
  1398   000B08  90D8               	bcf	status,0,c
  1399   000B0A  0100               	movlb	0	; () banked
  1400   000B0C  35E2               	rlcf	main@i_796& (0+255),w,b
  1401   000B0E  6ED9               	movwf	fsr2l,c
  1402   000B10  35E3               	rlcf	(main@i_796+1)& (0+255),w,b
  1403   000B12  6EDA               	movwf	fsr2h,c
  1404   000B14  0EC0               	movlw	low main@array
  1405   000B16  26D9               	addwf	fsr2l,f,c
  1406   000B18  0E00               	movlw	high main@array
  1407   000B1A  22DA               	addwfc	fsr2h,f,c
  1408   000B1C  90D8               	bcf	status,0,c
  1409   000B1E  35E2               	rlcf	main@i_796& (0+255),w,b
  1410   000B20  6EE1               	movwf	fsr1l,c
  1411   000B22  35E3               	rlcf	(main@i_796+1)& (0+255),w,b
  1412   000B24  6EE2               	movwf	fsr1h,c
  1413   000B26  0EC8               	movlw	low main@sequencia_facil
  1414   000B28  26E1               	addwf	fsr1l,f,c
  1415   000B2A  0E00               	movlw	high main@sequencia_facil
  1416   000B2C  22E2               	addwfc	fsr1h,f,c
  1417   000B2E  50DE               	movf	postinc2,w,c
  1418   000B30  18E6               	xorwf	postinc1,w,c
  1419   000B32  E109               	bnz	u1800
  1420   000B34  50DE               	movf	postinc2,w,c
  1421   000B36  18E6               	xorwf	postinc1,w,c
  1422   000B38  B4D8               	btfsc	status,2,c
  1423   000B3A  EFA1  F005         	goto	u1801
  1424   000B3E  EFA3  F005         	goto	u1800
  1425   000B42                     u1801:
  1426   000B42  EFA7  F005         	goto	l2215
  1427   000B46                     u1800:
  1428   000B46                     
  1429                           ; BSR set to: 0
  1430                           ;main.c: 362:                             sequencia_facil_perdeu = 1;
  1431   000B46  0E00               	movlw	0
  1432   000B48  6FBB               	movwf	(main@sequencia_facil_perdeu+1)& (0+255),b
  1433   000B4A  0E01               	movlw	1
  1434   000B4C  6FBA               	movwf	main@sequencia_facil_perdeu& (0+255),b
  1435   000B4E                     l2215:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;main.c: 364:                     }
  1439   000B4E  4BE2               	infsnz	main@i_796& (0+255),f,b
  1440   000B50  2BE3               	incf	(main@i_796+1)& (0+255),f,b
  1441   000B52  EF61  F005         	goto	l2205
  1442   000B56                     l2219:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;main.c: 365:                     if (sequencia_facil_perdeu == 1) {
  1446   000B56  05BA               	decf	main@sequencia_facil_perdeu& (0+255),w,b
  1447   000B58  11BB               	iorwf	(main@sequencia_facil_perdeu+1)& (0+255),w,b
  1448   000B5A  A4D8               	btfss	status,2,c
  1449   000B5C  EFB2  F005         	goto	u1811
  1450   000B60  EFB4  F005         	goto	u1810
  1451   000B64                     u1811:
  1452   000B64  EFBC  F005         	goto	l2223
  1453   000B68                     u1810:
  1454   000B68                     
  1455                           ; BSR set to: 0
  1456                           ;main.c: 366:                         printf("perdeu ");
  1457   000B68  0E0E               	movlw	low STR_4
  1458   000B6A  6E4A               	movwf	printf@fmt^0,c
  1459   000B6C  0E06               	movlw	high STR_4
  1460   000B6E  6E4B               	movwf	(printf@fmt+1)^0,c
  1461   000B70  ECB3  F00B         	call	_printf	;wreg free
  1462                           
  1463                           ;main.c: 367:                     } else {
  1464   000B74  EF41  F003         	goto	l2075
  1465   000B78                     l2223:
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;main.c: 368:                         printf("ganhou ");
  1469   000B78  0E16               	movlw	low STR_5
  1470   000B7A  6E4A               	movwf	printf@fmt^0,c
  1471   000B7C  0E06               	movlw	high STR_5
  1472   000B7E  6E4B               	movwf	(printf@fmt+1)^0,c
  1473   000B80  ECB3  F00B         	call	_printf	;wreg free
  1474   000B84                     
  1475                           ;main.c: 369:                         reproduz_vitoria();
  1476   000B84  EC0B  F008         	call	_reproduz_vitoria	;wreg free
  1477   000B88  EF41  F003         	goto	l2075
  1478   000B8C                     l2227:
  1479                           
  1480                           ; BSR set to: 0
  1481   000B8C  05E4               	decf	main@estagio& (0+255),w,b
  1482   000B8E  11E5               	iorwf	(main@estagio+1)& (0+255),w,b
  1483   000B90  A4D8               	btfss	status,2,c
  1484   000B92  EFCD  F005         	goto	u1821
  1485   000B96  EFCF  F005         	goto	u1820
  1486   000B9A                     u1821:
  1487   000B9A  EFD1  F005         	goto	l2231
  1488   000B9E                     u1820:
  1489   000B9E  EF41  F003         	goto	l2075
  1490   000BA2                     l2231:
  1491                           
  1492                           ; BSR set to: 0
  1493   000BA2  0E02               	movlw	2
  1494   000BA4  19E4               	xorwf	main@estagio& (0+255),w,b
  1495   000BA6  11E5               	iorwf	(main@estagio+1)& (0+255),w,b
  1496   000BA8  A4D8               	btfss	status,2,c
  1497   000BAA  EFD9  F005         	goto	u1831
  1498   000BAE  EFDB  F005         	goto	u1830
  1499   000BB2                     u1831:
  1500   000BB2  EFDD  F005         	goto	l2235
  1501   000BB6                     u1830:
  1502   000BB6  EF41  F003         	goto	l2075
  1503   000BBA                     l2235:
  1504                           
  1505                           ; BSR set to: 0
  1506   000BBA  0E03               	movlw	3
  1507   000BBC  19E4               	xorwf	main@estagio& (0+255),w,b
  1508   000BBE  11E5               	iorwf	(main@estagio+1)& (0+255),w,b
  1509   000BC0  A4D8               	btfss	status,2,c
  1510   000BC2  EFE5  F005         	goto	u1841
  1511   000BC6  EFE7  F005         	goto	u1840
  1512   000BCA                     u1841:
  1513   000BCA  EF28  F006         	goto	l2257
  1514   000BCE                     u1840:
  1515   000BCE                     
  1516                           ; BSR set to: 0
  1517                           ;main.c: 380:             if (possui_sequencia_media == 0) {
  1518   000BCE  51BC               	movf	main@possui_sequencia_media& (0+255),w,b
  1519   000BD0  11BD               	iorwf	(main@possui_sequencia_media+1)& (0+255),w,b
  1520   000BD2  A4D8               	btfss	status,2,c
  1521   000BD4  EFEE  F005         	goto	u1851
  1522   000BD8  EFF0  F005         	goto	u1850
  1523   000BDC                     u1851:
  1524   000BDC  EF41  F003         	goto	l2075
  1525   000BE0                     u1850:
  1526   000BE0                     
  1527                           ; BSR set to: 0
  1528                           ;main.c: 381:                 for (int i = 0; i < 4; i++) {
  1529   000BE0  0E00               	movlw	0
  1530   000BE2  6FD5               	movwf	(main@i_801+1)& (0+255),b
  1531   000BE4  0E00               	movlw	0
  1532   000BE6  6FD4               	movwf	main@i_801& (0+255),b
  1533   000BE8                     l2241:
  1534                           
  1535                           ; BSR set to: 0
  1536   000BE8  BFD5               	btfsc	(main@i_801+1)& (0+255),7,b
  1537   000BEA  EF00  F006         	goto	u1861
  1538   000BEE  51D5               	movf	(main@i_801+1)& (0+255),w,b
  1539   000BF0  E109               	bnz	u1860
  1540   000BF2  0E04               	movlw	4
  1541   000BF4  5DD4               	subwf	main@i_801& (0+255),w,b
  1542   000BF6  A0D8               	btfss	status,0,c
  1543   000BF8  EF00  F006         	goto	u1861
  1544   000BFC  EF02  F006         	goto	u1860
  1545   000C00                     u1861:
  1546   000C00  EF04  F006         	goto	l2245
  1547   000C04                     u1860:
  1548   000C04  EF22  F006         	goto	l2255
  1549   000C08                     l2245:
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;main.c: 382:                     r = rand() % 4;
  1553   000C08  ECCC  F00A         	call	_rand	;wreg free
  1554   000C0C  0E03               	movlw	3
  1555   000C0E  1417               	andwf	?_rand^0,w,c
  1556   000C10  0100               	movlb	0	; () banked
  1557   000C12  6FD6               	movwf	main@r& (0+255),b
  1558   000C14  6BD7               	clrf	(main@r+1)& (0+255),b
  1559   000C16                     
  1560                           ; BSR set to: 0
  1561                           ;main.c: 383:                     r = r + 1;
  1562   000C16  0E01               	movlw	1
  1563   000C18  25D6               	addwf	main@r& (0+255),w,b
  1564   000C1A  6FD6               	movwf	main@r& (0+255),b
  1565   000C1C  0E00               	movlw	0
  1566   000C1E  21D7               	addwfc	(main@r+1)& (0+255),w,b
  1567   000C20  6FD7               	movwf	(main@r+1)& (0+255),b
  1568   000C22                     
  1569                           ; BSR set to: 0
  1570                           ;main.c: 384:                     array[i] = r;
  1571   000C22  90D8               	bcf	status,0,c
  1572   000C24  35D4               	rlcf	main@i_801& (0+255),w,b
  1573   000C26  6ED9               	movwf	fsr2l,c
  1574   000C28  35D5               	rlcf	(main@i_801+1)& (0+255),w,b
  1575   000C2A  6EDA               	movwf	fsr2h,c
  1576   000C2C  0EC0               	movlw	low main@array
  1577   000C2E  26D9               	addwf	fsr2l,f,c
  1578   000C30  0E00               	movlw	high main@array
  1579   000C32  22DA               	addwfc	fsr2h,f,c
  1580   000C34  C0D6  FFDE         	movff	main@r,postinc2
  1581   000C38  C0D7  FFDD         	movff	main@r+1,postdec2
  1582   000C3C                     
  1583                           ; BSR set to: 0
  1584                           ;main.c: 385:                 }
  1585   000C3C  4BD4               	infsnz	main@i_801& (0+255),f,b
  1586   000C3E  2BD5               	incf	(main@i_801+1)& (0+255),f,b
  1587   000C40  EFF4  F005         	goto	l2241
  1588   000C44                     l2255:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;main.c: 386:                 possui_sequencia_media = 1;
  1592   000C44  0E00               	movlw	0
  1593   000C46  6FBD               	movwf	(main@possui_sequencia_media+1)& (0+255),b
  1594   000C48  0E01               	movlw	1
  1595   000C4A  6FBC               	movwf	main@possui_sequencia_media& (0+255),b
  1596   000C4C  EF41  F003         	goto	l2075
  1597   000C50                     l2257:
  1598                           
  1599                           ; BSR set to: 0
  1600   000C50  EF41  F003         	goto	l2075
  1601   000C54  EF07  F000         	goto	start
  1602   000C58                     __end_of_main:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _setLED *****************
  1606 ;; Defined at:
  1607 ;;		line 110 in file "main.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  pos             1    wreg     unsigned char 
  1610 ;;  value           1   10[COMRAM] unsigned char 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  pos             1   13[COMRAM] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         1       0       0       0       0       0       0
  1623 ;;      Locals:         1       0       0       0       0       0       0
  1624 ;;      Temps:          2       0       0       0       0       0       0
  1625 ;;      Totals:         4       0       0       0       0       0       0
  1626 ;;Total ram usage:        4 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text1
  1637   0014A4                     __ptext1:
  1638                           	callstack 0
  1639   0014A4                     _setLED:
  1640                           	callstack 29
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;incstack = 0
  1644                           ;setLED@pos stored from wreg
  1645   0014A4  6E0E               	movwf	setLED@pos^0,c
  1646   0014A6                     
  1647                           ;main.c: 111:     switch (pos) {
  1648   0014A6  EF71  F00A         	goto	l1845
  1649   0014AA                     l85:
  1650                           
  1651                           ;main.c: 113:             PORTDbits.RD0 = value;
  1652   0014AA  B00B               	btfsc	setLED@value^0,0,c
  1653   0014AC  D002               	bra	u1315
  1654   0014AE  9083               	bcf	131,0,c	;volatile
  1655   0014B0  D001               	bra	u1316
  1656   0014B2                     u1315:
  1657   0014B2  8083               	bsf	131,0,c	;volatile
  1658   0014B4                     u1316:
  1659                           
  1660                           ;main.c: 114:             break;
  1661   0014B4  EF8E  F00A         	goto	l90
  1662   0014B8                     l87:
  1663                           
  1664                           ;main.c: 116:             PORTDbits.RD1 = value;
  1665   0014B8  B00B               	btfsc	setLED@value^0,0,c
  1666   0014BA  D002               	bra	u1325
  1667   0014BC  9283               	bcf	131,1,c	;volatile
  1668   0014BE  D001               	bra	u1326
  1669   0014C0                     u1325:
  1670   0014C0  8283               	bsf	131,1,c	;volatile
  1671   0014C2                     u1326:
  1672                           
  1673                           ;main.c: 117:             break;
  1674   0014C2  EF8E  F00A         	goto	l90
  1675   0014C6                     l88:
  1676                           
  1677                           ;main.c: 119:             PORTDbits.RD2 = value;
  1678   0014C6  B00B               	btfsc	setLED@value^0,0,c
  1679   0014C8  D002               	bra	u1335
  1680   0014CA  9483               	bcf	131,2,c	;volatile
  1681   0014CC  D001               	bra	u1336
  1682   0014CE                     u1335:
  1683   0014CE  8483               	bsf	131,2,c	;volatile
  1684   0014D0                     u1336:
  1685                           
  1686                           ;main.c: 120:             break;
  1687   0014D0  EF8E  F00A         	goto	l90
  1688   0014D4                     l89:
  1689                           
  1690                           ;main.c: 122:             PORTDbits.RD3 = value;
  1691   0014D4  B00B               	btfsc	setLED@value^0,0,c
  1692   0014D6  D002               	bra	u1345
  1693   0014D8  9683               	bcf	131,3,c	;volatile
  1694   0014DA  D001               	bra	u1346
  1695   0014DC                     u1345:
  1696   0014DC  8683               	bsf	131,3,c	;volatile
  1697   0014DE                     u1346:
  1698                           
  1699                           ;main.c: 123:             break;
  1700   0014DE  EF8E  F00A         	goto	l90
  1701   0014E2                     l1845:
  1702   0014E2  500E               	movf	setLED@pos^0,w,c
  1703   0014E4  6E0C               	movwf	??_setLED^0,c
  1704   0014E6  6A0D               	clrf	(??_setLED+1)^0,c
  1705                           
  1706                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1707                           ; Switch size 1, requested type "simple"
  1708                           ; Number of cases is 1, Range of values is 0 to 0
  1709                           ; switch strategies available:
  1710                           ; Name         Instructions Cycles
  1711                           ; simple_byte            4     3 (average)
  1712                           ;	Chosen strategy is simple_byte
  1713   0014E8  500D               	movf	(??_setLED+1)^0,w,c
  1714   0014EA  0A00               	xorlw	0	; case 0
  1715   0014EC  B4D8               	btfsc	status,2,c
  1716   0014EE  EF7B  F00A         	goto	l2283
  1717   0014F2  EF8E  F00A         	goto	l90
  1718   0014F6                     l2283:
  1719                           
  1720                           ; Switch size 1, requested type "simple"
  1721                           ; Number of cases is 4, Range of values is 1 to 4
  1722                           ; switch strategies available:
  1723                           ; Name         Instructions Cycles
  1724                           ; simple_byte           13     7 (average)
  1725                           ;	Chosen strategy is simple_byte
  1726   0014F6  500C               	movf	??_setLED^0,w,c
  1727   0014F8  0A01               	xorlw	1	; case 1
  1728   0014FA  B4D8               	btfsc	status,2,c
  1729   0014FC  EF55  F00A         	goto	l85
  1730   001500  0A03               	xorlw	3	; case 2
  1731   001502  B4D8               	btfsc	status,2,c
  1732   001504  EF5C  F00A         	goto	l87
  1733   001508  0A01               	xorlw	1	; case 3
  1734   00150A  B4D8               	btfsc	status,2,c
  1735   00150C  EF63  F00A         	goto	l88
  1736   001510  0A07               	xorlw	7	; case 4
  1737   001512  B4D8               	btfsc	status,2,c
  1738   001514  EF6A  F00A         	goto	l89
  1739   001518  EF8E  F00A         	goto	l90
  1740   00151C                     l90:
  1741   00151C  0012               	return		;funcret
  1742   00151E                     __end_of_setLED:
  1743                           	callstack 0
  1744                           
  1745 ;; *************** function _reproduz_vitoria *****************
  1746 ;; Defined at:
  1747 ;;		line 192 in file "main.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;		None
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  i               2   17[COMRAM] int 
  1752 ;;  i               2   15[COMRAM] int 
  1753 ;;  i               2   13[COMRAM] int 
  1754 ;;  i               2   11[COMRAM] int 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1764 ;;      Params:         0       0       0       0       0       0       0
  1765 ;;      Locals:         8       0       0       0       0       0       0
  1766 ;;      Temps:          1       0       0       0       0       0       0
  1767 ;;      Totals:         9       0       0       0       0       0       0
  1768 ;;Total ram usage:        9 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 1
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text2
  1779   001016                     __ptext2:
  1780                           	callstack 0
  1781   001016                     _reproduz_vitoria:
  1782                           	callstack 29
  1783   001016                     
  1784                           ;main.c: 194:     PORTDbits.RD0 = 1;
  1785   001016  8083               	bsf	131,0,c	;volatile
  1786   001018                     
  1787                           ;main.c: 195:     for (int i = 0; i < 255; i++) {
  1788   001018  0E00               	movlw	0
  1789   00101A  6E0D               	movwf	(reproduz_vitoria@i+1)^0,c
  1790   00101C  0E00               	movlw	0
  1791   00101E  6E0C               	movwf	reproduz_vitoria@i^0,c
  1792   001020                     l115:
  1793                           
  1794                           ;main.c: 196:         PORTCbits.RC2 = 1;
  1795   001020  8482               	bsf	130,2,c	;volatile
  1796   001022                     
  1797                           ;main.c: 197:         _delay((unsigned long)((700)*(16000000/4000000.0)));
  1798   001022  0E04               	movlw	4
  1799   001024  6E0B               	movwf	??_reproduz_vitoria^0,c
  1800   001026  0EA2               	movlw	162
  1801   001028                     u1897:
  1802   001028  2EE8               	decfsz	wreg,f,c
  1803   00102A  D7FE               	bra	u1897
  1804   00102C  2E0B               	decfsz	??_reproduz_vitoria^0,f,c
  1805   00102E  D7FC               	bra	u1897
  1806   001030                     
  1807                           ;main.c: 198:         PORTCbits.RC2 = 0;
  1808   001030  9482               	bcf	130,2,c	;volatile
  1809                           
  1810                           ;main.c: 199:         _delay((unsigned long)((700)*(16000000/4000000.0)));
  1811   001032  0E04               	movlw	4
  1812   001034  6E0B               	movwf	??_reproduz_vitoria^0,c
  1813   001036  0EA2               	movlw	162
  1814   001038                     u1907:
  1815   001038  2EE8               	decfsz	wreg,f,c
  1816   00103A  D7FE               	bra	u1907
  1817   00103C  2E0B               	decfsz	??_reproduz_vitoria^0,f,c
  1818   00103E  D7FC               	bra	u1907
  1819   001040                     
  1820                           ;main.c: 200:     }
  1821   001040  4A0C               	infsnz	reproduz_vitoria@i^0,f,c
  1822   001042  2A0D               	incf	(reproduz_vitoria@i+1)^0,f,c
  1823   001044  BE0D               	btfsc	(reproduz_vitoria@i+1)^0,7,c
  1824   001046  EF2D  F008         	goto	u1361
  1825   00104A  500D               	movf	(reproduz_vitoria@i+1)^0,w,c
  1826   00104C  E108               	bnz	u1360
  1827   00104E  280C               	incf	reproduz_vitoria@i^0,w,c
  1828   001050  A0D8               	btfss	status,0,c
  1829   001052  EF2D  F008         	goto	u1361
  1830   001056  EF2F  F008         	goto	u1360
  1831   00105A                     u1361:
  1832   00105A  EF10  F008         	goto	l115
  1833   00105E                     u1360:
  1834   00105E                     
  1835                           ;main.c: 201:     PORTDbits.RD0 = 0;
  1836   00105E  9083               	bcf	131,0,c	;volatile
  1837                           
  1838                           ;main.c: 203:     PORTDbits.RD1 = 1;
  1839   001060  8283               	bsf	131,1,c	;volatile
  1840   001062                     
  1841                           ;main.c: 204:     for (int i = 0; i < 255; i++) {
  1842   001062  0E00               	movlw	0
  1843   001064  6E0F               	movwf	(reproduz_vitoria@i_765+1)^0,c
  1844   001066  0E00               	movlw	0
  1845   001068  6E0E               	movwf	reproduz_vitoria@i_765^0,c
  1846   00106A                     l117:
  1847                           
  1848                           ;main.c: 205:         PORTCbits.RC2 = 1;
  1849   00106A  8482               	bsf	130,2,c	;volatile
  1850   00106C                     
  1851                           ;main.c: 206:         _delay((unsigned long)((600)*(16000000/4000000.0)));
  1852   00106C  0E04               	movlw	4
  1853   00106E  6E0B               	movwf	??_reproduz_vitoria^0,c
  1854   001070  0E1C               	movlw	28
  1855   001072                     u1917:
  1856   001072  2EE8               	decfsz	wreg,f,c
  1857   001074  D7FE               	bra	u1917
  1858   001076  2E0B               	decfsz	??_reproduz_vitoria^0,f,c
  1859   001078  D7FC               	bra	u1917
  1860   00107A  D000               	nop2	
  1861   00107C                     
  1862                           ;main.c: 207:         PORTCbits.RC2 = 0;
  1863   00107C  9482               	bcf	130,2,c	;volatile
  1864                           
  1865                           ;main.c: 208:         _delay((unsigned long)((600)*(16000000/4000000.0)));
  1866   00107E  0E04               	movlw	4
  1867   001080  6E0B               	movwf	??_reproduz_vitoria^0,c
  1868   001082  0E1C               	movlw	28
  1869   001084                     u1927:
  1870   001084  2EE8               	decfsz	wreg,f,c
  1871   001086  D7FE               	bra	u1927
  1872   001088  2E0B               	decfsz	??_reproduz_vitoria^0,f,c
  1873   00108A  D7FC               	bra	u1927
  1874   00108C  D000               	nop2	
  1875   00108E                     
  1876                           ;main.c: 209:     }
  1877   00108E  4A0E               	infsnz	reproduz_vitoria@i_765^0,f,c
  1878   001090  2A0F               	incf	(reproduz_vitoria@i_765+1)^0,f,c
  1879   001092  BE0F               	btfsc	(reproduz_vitoria@i_765+1)^0,7,c
  1880   001094  EF54  F008         	goto	u1371
  1881   001098  500F               	movf	(reproduz_vitoria@i_765+1)^0,w,c
  1882   00109A  E108               	bnz	u1370
  1883   00109C  280E               	incf	reproduz_vitoria@i_765^0,w,c
  1884   00109E  A0D8               	btfss	status,0,c
  1885   0010A0  EF54  F008         	goto	u1371
  1886   0010A4  EF56  F008         	goto	u1370
  1887   0010A8                     u1371:
  1888   0010A8  EF35  F008         	goto	l117
  1889   0010AC                     u1370:
  1890   0010AC                     
  1891                           ;main.c: 210:     PORTDbits.RD1 = 0;
  1892   0010AC  9283               	bcf	131,1,c	;volatile
  1893                           
  1894                           ;main.c: 212:     PORTDbits.RD2 = 1;
  1895   0010AE  8483               	bsf	131,2,c	;volatile
  1896   0010B0                     
  1897                           ;main.c: 213:     for (int i = 0; i < 255; i++) {
  1898   0010B0  0E00               	movlw	0
  1899   0010B2  6E11               	movwf	(reproduz_vitoria@i_766+1)^0,c
  1900   0010B4  0E00               	movlw	0
  1901   0010B6  6E10               	movwf	reproduz_vitoria@i_766^0,c
  1902   0010B8                     l119:
  1903                           
  1904                           ;main.c: 214:         PORTCbits.RC2 = 1;
  1905   0010B8  8482               	bsf	130,2,c	;volatile
  1906   0010BA                     
  1907                           ;main.c: 215:         _delay((unsigned long)((500)*(16000000/4000000.0)));
  1908   0010BA  0E03               	movlw	3
  1909   0010BC  6E0B               	movwf	??_reproduz_vitoria^0,c
  1910   0010BE  0E98               	movlw	152
  1911   0010C0                     u1937:
  1912   0010C0  2EE8               	decfsz	wreg,f,c
  1913   0010C2  D7FE               	bra	u1937
  1914   0010C4  2E0B               	decfsz	??_reproduz_vitoria^0,f,c
  1915   0010C6  D7FC               	bra	u1937
  1916   0010C8                     
  1917                           ;main.c: 216:         PORTCbits.RC2 = 0;
  1918   0010C8  9482               	bcf	130,2,c	;volatile
  1919                           
  1920                           ;main.c: 217:         _delay((unsigned long)((500)*(16000000/4000000.0)));
  1921   0010CA  0E03               	movlw	3
  1922   0010CC  6E0B               	movwf	??_reproduz_vitoria^0,c
  1923   0010CE  0E98               	movlw	152
  1924   0010D0                     u1947:
  1925   0010D0  2EE8               	decfsz	wreg,f,c
  1926   0010D2  D7FE               	bra	u1947
  1927   0010D4  2E0B               	decfsz	??_reproduz_vitoria^0,f,c
  1928   0010D6  D7FC               	bra	u1947
  1929   0010D8                     
  1930                           ;main.c: 218:     }
  1931   0010D8  4A10               	infsnz	reproduz_vitoria@i_766^0,f,c
  1932   0010DA  2A11               	incf	(reproduz_vitoria@i_766+1)^0,f,c
  1933   0010DC  BE11               	btfsc	(reproduz_vitoria@i_766+1)^0,7,c
  1934   0010DE  EF79  F008         	goto	u1381
  1935   0010E2  5011               	movf	(reproduz_vitoria@i_766+1)^0,w,c
  1936   0010E4  E108               	bnz	u1380
  1937   0010E6  2810               	incf	reproduz_vitoria@i_766^0,w,c
  1938   0010E8  A0D8               	btfss	status,0,c
  1939   0010EA  EF79  F008         	goto	u1381
  1940   0010EE  EF7B  F008         	goto	u1380
  1941   0010F2                     u1381:
  1942   0010F2  EF5C  F008         	goto	l119
  1943   0010F6                     u1380:
  1944   0010F6                     
  1945                           ;main.c: 219:     PORTDbits.RD2 = 0;
  1946   0010F6  9483               	bcf	131,2,c	;volatile
  1947                           
  1948                           ;main.c: 221:     PORTDbits.RD3 = 1;
  1949   0010F8  8683               	bsf	131,3,c	;volatile
  1950   0010FA                     
  1951                           ;main.c: 222:     for (int i = 0; i < 255; i++) {
  1952   0010FA  0E00               	movlw	0
  1953   0010FC  6E13               	movwf	(reproduz_vitoria@i_767+1)^0,c
  1954   0010FE  0E00               	movlw	0
  1955   001100  6E12               	movwf	reproduz_vitoria@i_767^0,c
  1956   001102                     l121:
  1957                           
  1958                           ;main.c: 223:         PORTCbits.RC2 = 1;
  1959   001102  8482               	bsf	130,2,c	;volatile
  1960   001104                     
  1961                           ;main.c: 224:         _delay((unsigned long)((400)*(16000000/4000000.0)));
  1962   001104  0EE4               	movlw	228
  1963   001106                     u1957:
  1964   001106  D000               	nop2	
  1965   001108  D000               	nop2	
  1966   00110A  2EE8               	decfsz	wreg,f,c
  1967   00110C  D7FC               	bra	u1957
  1968   00110E  D000               	nop2	
  1969   001110  D000               	nop2	
  1970   001112                     
  1971                           ;main.c: 225:         PORTCbits.RC2 = 0;
  1972   001112  9482               	bcf	130,2,c	;volatile
  1973                           
  1974                           ;main.c: 226:         _delay((unsigned long)((400)*(16000000/4000000.0)));
  1975   001114  0EE4               	movlw	228
  1976   001116                     u1967:
  1977   001116  D000               	nop2	
  1978   001118  D000               	nop2	
  1979   00111A  2EE8               	decfsz	wreg,f,c
  1980   00111C  D7FC               	bra	u1967
  1981   00111E  D000               	nop2	
  1982   001120  D000               	nop2	
  1983   001122                     
  1984                           ;main.c: 227:     }
  1985   001122  4A12               	infsnz	reproduz_vitoria@i_767^0,f,c
  1986   001124  2A13               	incf	(reproduz_vitoria@i_767+1)^0,f,c
  1987   001126  BE13               	btfsc	(reproduz_vitoria@i_767+1)^0,7,c
  1988   001128  EF9E  F008         	goto	u1391
  1989   00112C  5013               	movf	(reproduz_vitoria@i_767+1)^0,w,c
  1990   00112E  E108               	bnz	u1390
  1991   001130  2812               	incf	reproduz_vitoria@i_767^0,w,c
  1992   001132  A0D8               	btfss	status,0,c
  1993   001134  EF9E  F008         	goto	u1391
  1994   001138  EFA0  F008         	goto	u1390
  1995   00113C                     u1391:
  1996   00113C  EF81  F008         	goto	l121
  1997   001140                     u1390:
  1998   001140                     
  1999                           ;main.c: 228:     PORTDbits.RD3 = 0;
  2000   001140  9683               	bcf	131,3,c	;volatile
  2001   001142  0012               	return		;funcret
  2002   001144                     __end_of_reproduz_vitoria:
  2003                           	callstack 0
  2004                           
  2005 ;; *************** function _rand *****************
  2006 ;; Defined at:
  2007 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\rand.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2   22[COMRAM] int 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2021 ;;      Params:         2       0       0       0       0       0       0
  2022 ;;      Locals:         0       0       0       0       0       0       0
  2023 ;;      Temps:          4       0       0       0       0       0       0
  2024 ;;      Totals:         6       0       0       0       0       0       0
  2025 ;;Total ram usage:        6 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 2
  2028 ;; This function calls:
  2029 ;;		___lmul
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;;		_generate_random_sequence_easy
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text3
  2037   001598                     __ptext3:
  2038                           	callstack 0
  2039   001598                     _rand:
  2040                           	callstack 28
  2041   001598  C061  F00B         	movff	_seed,___lmul@multiplier
  2042   00159C  C062  F00C         	movff	_seed+1,___lmul@multiplier+1
  2043   0015A0  C063  F00D         	movff	_seed+2,___lmul@multiplier+2
  2044   0015A4  C064  F00E         	movff	_seed+3,___lmul@multiplier+3
  2045   0015A8  0E2D               	movlw	45
  2046   0015AA  6E0F               	movwf	___lmul@multiplicand^0,c
  2047   0015AC  0E7F               	movlw	127
  2048   0015AE  6E10               	movwf	(___lmul@multiplicand+1)^0,c
  2049   0015B0  0E95               	movlw	149
  2050   0015B2  6E11               	movwf	(___lmul@multiplicand+2)^0,c
  2051   0015B4  0E4C               	movlw	76
  2052   0015B6  6E12               	movwf	(___lmul@multiplicand+3)^0,c
  2053   0015B8  EC02  F00B         	call	___lmul	;wreg free
  2054   0015BC  0E01               	movlw	1
  2055   0015BE  240B               	addwf	?___lmul^0,w,c
  2056   0015C0  6E61               	movwf	_seed^0,c
  2057   0015C2  0E00               	movlw	0
  2058   0015C4  200C               	addwfc	(?___lmul+1)^0,w,c
  2059   0015C6  6E62               	movwf	(_seed+1)^0,c
  2060   0015C8  0E00               	movlw	0
  2061   0015CA  200D               	addwfc	(?___lmul+2)^0,w,c
  2062   0015CC  6E63               	movwf	(_seed+2)^0,c
  2063   0015CE  0E00               	movlw	0
  2064   0015D0  200E               	addwfc	(?___lmul+3)^0,w,c
  2065   0015D2  6E64               	movwf	(_seed+3)^0,c
  2066   0015D4  C061  F019         	movff	_seed,??_rand
  2067   0015D8  C062  F01A         	movff	_seed+1,??_rand+1
  2068   0015DC  C063  F01B         	movff	_seed+2,??_rand+2
  2069   0015E0  C064  F01C         	movff	_seed+3,??_rand+3
  2070   0015E4  0E12               	movlw	18
  2071   0015E6  EFFA  F00A         	goto	u1350
  2072   0015EA                     u1355:
  2073   0015EA  90D8               	bcf	status,0,c
  2074   0015EC  321C               	rrcf	(??_rand+3)^0,f,c
  2075   0015EE  321B               	rrcf	(??_rand+2)^0,f,c
  2076   0015F0  321A               	rrcf	(??_rand+1)^0,f,c
  2077   0015F2  3219               	rrcf	??_rand^0,f,c
  2078   0015F4                     u1350:
  2079   0015F4  2EE8               	decfsz	wreg,f,c
  2080   0015F6  EFF5  F00A         	goto	u1355
  2081   0015FA  C019  F017         	movff	??_rand,?_rand
  2082   0015FE  C01A  F018         	movff	??_rand+1,?_rand+1
  2083   001602  0012               	return		;funcret
  2084   001604                     __end_of_rand:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function ___lmul *****************
  2088 ;; Defined at:
  2089 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  multiplier      4   10[COMRAM] unsigned long 
  2092 ;;  multiplicand    4   14[COMRAM] unsigned long 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  product         4   18[COMRAM] unsigned long 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  4   10[COMRAM] unsigned long 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2104 ;;      Params:         8       0       0       0       0       0       0
  2105 ;;      Locals:         4       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0
  2107 ;;      Totals:        12       0       0       0       0       0       0
  2108 ;;Total ram usage:       12 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_rand
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text4
  2119   001604                     __ptext4:
  2120                           	callstack 0
  2121   001604                     ___lmul:
  2122                           	callstack 28
  2123   001604  0E00               	movlw	0
  2124   001606  6E13               	movwf	___lmul@product^0,c
  2125   001608  0E00               	movlw	0
  2126   00160A  6E14               	movwf	(___lmul@product+1)^0,c
  2127   00160C  0E00               	movlw	0
  2128   00160E  6E15               	movwf	(___lmul@product+2)^0,c
  2129   001610  0E00               	movlw	0
  2130   001612  6E16               	movwf	(___lmul@product+3)^0,c
  2131   001614                     l1823:
  2132   001614  A00B               	btfss	___lmul@multiplier^0,0,c
  2133   001616  EF0F  F00B         	goto	u1281
  2134   00161A  EF11  F00B         	goto	u1280
  2135   00161E                     u1281:
  2136   00161E  EF19  F00B         	goto	l1827
  2137   001622                     u1280:
  2138   001622  500F               	movf	___lmul@multiplicand^0,w,c
  2139   001624  2613               	addwf	___lmul@product^0,f,c
  2140   001626  5010               	movf	(___lmul@multiplicand+1)^0,w,c
  2141   001628  2214               	addwfc	(___lmul@product+1)^0,f,c
  2142   00162A  5011               	movf	(___lmul@multiplicand+2)^0,w,c
  2143   00162C  2215               	addwfc	(___lmul@product+2)^0,f,c
  2144   00162E  5012               	movf	(___lmul@multiplicand+3)^0,w,c
  2145   001630  2216               	addwfc	(___lmul@product+3)^0,f,c
  2146   001632                     l1827:
  2147   001632  90D8               	bcf	status,0,c
  2148   001634  360F               	rlcf	___lmul@multiplicand^0,f,c
  2149   001636  3610               	rlcf	(___lmul@multiplicand+1)^0,f,c
  2150   001638  3611               	rlcf	(___lmul@multiplicand+2)^0,f,c
  2151   00163A  3612               	rlcf	(___lmul@multiplicand+3)^0,f,c
  2152   00163C  90D8               	bcf	status,0,c
  2153   00163E  320E               	rrcf	(___lmul@multiplier+3)^0,f,c
  2154   001640  320D               	rrcf	(___lmul@multiplier+2)^0,f,c
  2155   001642  320C               	rrcf	(___lmul@multiplier+1)^0,f,c
  2156   001644  320B               	rrcf	___lmul@multiplier^0,f,c
  2157   001646  500B               	movf	___lmul@multiplier^0,w,c
  2158   001648  100C               	iorwf	(___lmul@multiplier+1)^0,w,c
  2159   00164A  100D               	iorwf	(___lmul@multiplier+2)^0,w,c
  2160   00164C  100E               	iorwf	(___lmul@multiplier+3)^0,w,c
  2161   00164E  A4D8               	btfss	status,2,c
  2162   001650  EF2C  F00B         	goto	u1291
  2163   001654  EF2E  F00B         	goto	u1290
  2164   001658                     u1291:
  2165   001658  EF0A  F00B         	goto	l1823
  2166   00165C                     u1290:
  2167   00165C  C013  F00B         	movff	___lmul@product,?___lmul
  2168   001660  C014  F00C         	movff	___lmul@product+1,?___lmul+1
  2169   001664  C015  F00D         	movff	___lmul@product+2,?___lmul+2
  2170   001668  C016  F00E         	movff	___lmul@product+3,?___lmul+3
  2171   00166C  0012               	return		;funcret
  2172   00166E                     __end_of___lmul:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _printf *****************
  2176 ;; Defined at:
  2177 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  fmt             2   73[COMRAM] PTR const unsigned char 
  2180 ;;		 -> STR_5(8), STR_4(8), STR_3(4), STR_2(4), 
  2181 ;;		 -> STR_1(13), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  ap              2   77[COMRAM] PTR void [1]
  2184 ;;		 -> ?_printf(2), 
  2185 ;;  ret             2    0        int 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  2   73[COMRAM] int 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2195 ;;      Params:         4       0       0       0       0       0       0
  2196 ;;      Locals:         2       0       0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0       0       0
  2198 ;;      Totals:         6       0       0       0       0       0       0
  2199 ;;Total ram usage:        6 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 8
  2202 ;; This function calls:
  2203 ;;		_vfprintf
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text5
  2210   001766                     __ptext5:
  2211                           	callstack 0
  2212   001766                     _printf:
  2213                           	callstack 22
  2214   001766  0E4C               	movlw	low (?_printf+2)
  2215   001768  6E4E               	movwf	printf@ap^0,c
  2216   00176A  0E00               	movlw	high (?_printf+2)
  2217   00176C  6E4F               	movwf	(printf@ap+1)^0,c
  2218   00176E  0E00               	movlw	0
  2219   001770  6E42               	movwf	vfprintf@fp^0,c
  2220   001772  0E00               	movlw	0
  2221   001774  6E43               	movwf	(vfprintf@fp+1)^0,c
  2222   001776  C04A  F044         	movff	printf@fmt,vfprintf@fmt
  2223   00177A  C04B  F045         	movff	printf@fmt+1,vfprintf@fmt+1
  2224   00177E  0E4E               	movlw	low printf@ap
  2225   001780  6E46               	movwf	vfprintf@ap^0,c
  2226   001782  0E00               	movlw	high printf@ap
  2227   001784  6E47               	movwf	(vfprintf@ap+1)^0,c
  2228   001786  EC37  F00B         	call	_vfprintf	;wreg free
  2229   00178A  0012               	return		;funcret
  2230   00178C                     __end_of_printf:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _vfprintf *****************
  2234 ;; Defined at:
  2235 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2238 ;;		 -> NULL(0), 
  2239 ;;  fmt             2   67[COMRAM] PTR const unsigned char 
  2240 ;;		 -> STR_5(8), STR_4(8), STR_3(4), STR_2(4), 
  2241 ;;		 -> STR_1(13), 
  2242 ;;  ap              2   69[COMRAM] PTR PTR void 
  2243 ;;		 -> printf@ap(2), 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  cfmt            2   71[COMRAM] PTR unsigned char 
  2246 ;;		 -> STR_5(8), STR_4(8), STR_3(4), STR_2(4), 
  2247 ;;		 -> STR_1(13), 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  2   65[COMRAM] int 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2257 ;;      Params:         6       0       0       0       0       0       0
  2258 ;;      Locals:         2       0       0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0
  2260 ;;      Totals:         8       0       0       0       0       0       0
  2261 ;;Total ram usage:        8 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 7
  2264 ;; This function calls:
  2265 ;;		_vfpfcnvrt
  2266 ;; This function is called by:
  2267 ;;		_printf
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text6
  2272   00166E                     __ptext6:
  2273                           	callstack 0
  2274   00166E                     _vfprintf:
  2275                           	callstack 22
  2276   00166E                     
  2277                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2278   00166E  C044  F048         	movff	vfprintf@fmt,vfprintf@cfmt
  2279   001672  C045  F049         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2282   001676  EF4B  F00B         	goto	l1835
  2283   00167A                     l1833:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2286   00167A  C042  F034         	movff	vfprintf@fp,vfpfcnvrt@fp
  2287   00167E  C043  F035         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2288   001682  0E48               	movlw	low vfprintf@cfmt
  2289   001684  6E36               	movwf	vfpfcnvrt@fmt^0,c
  2290   001686  0E00               	movlw	high vfprintf@cfmt
  2291   001688  6E37               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2292   00168A  C046  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
  2293   00168E  C047  F039         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2294   001692  ECA2  F008         	call	_vfpfcnvrt	;wreg free
  2295   001696                     l1835:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2298   001696  C048  FFF6         	movff	vfprintf@cfmt,tblptrl
  2299   00169A  C049  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2300   00169E                     	if	0	;tblptru may be non-zero
  2301   00169E                     	endif
  2302   00169E                     	if	0	;tblptru may be non-zero
  2303   00169E                     	endif
  2304   00169E  0008               	tblrd		*
  2305   0016A0  50F5               	movf	tablat,w,c
  2306   0016A2  0900               	iorlw	0
  2307   0016A4  A4D8               	btfss	status,2,c
  2308   0016A6  EF57  F00B         	goto	u1301
  2309   0016AA  EF59  F00B         	goto	u1300
  2310   0016AE                     u1301:
  2311   0016AE  EF3D  F00B         	goto	l1833
  2312   0016B2                     u1300:
  2313   0016B2                     
  2314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2315   0016B2  0E00               	movlw	0
  2316   0016B4  6E43               	movwf	(?_vfprintf+1)^0,c
  2317   0016B6  0E00               	movlw	0
  2318   0016B8  6E42               	movwf	?_vfprintf^0,c
  2319   0016BA  0012               	return		;funcret
  2320   0016BC                     __end_of_vfprintf:
  2321                           	callstack 0
  2322                           
  2323 ;; *************** function _vfpfcnvrt *****************
  2324 ;; Defined at:
  2325 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2328 ;;		 -> NULL(0), 
  2329 ;;  fmt             2   53[COMRAM] PTR PTR unsigned char 
  2330 ;;		 -> vfprintf@cfmt(2), 
  2331 ;;  ap              2   55[COMRAM] PTR PTR void 
  2332 ;;		 -> printf@ap(2), 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  convarg         4   59[COMRAM] struct .
  2335 ;;  cp              2   63[COMRAM] PTR unsigned char 
  2336 ;;		 -> STR_5(8), STR_4(8), STR_3(4), STR_2(4), 
  2337 ;;		 -> STR_1(13), 
  2338 ;;  i               2    0        int 
  2339 ;;  done            2    0        int 
  2340 ;;  c               1    0        unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2350 ;;      Params:         6       0       0       0       0       0       0
  2351 ;;      Locals:         6       0       0       0       0       0       0
  2352 ;;      Temps:          2       0       0       0       0       0       0
  2353 ;;      Totals:        14       0       0       0       0       0       0
  2354 ;;Total ram usage:       14 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; Hardware stack levels required when called: 6
  2357 ;; This function calls:
  2358 ;;		_dtoa
  2359 ;;		_fputc
  2360 ;; This function is called by:
  2361 ;;		_vfprintf
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text7
  2366   001144                     __ptext7:
  2367                           	callstack 0
  2368   001144                     _vfpfcnvrt:
  2369                           	callstack 22
  2370   001144                     
  2371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2372   001144  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2373   001148  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2374   00114C  CFDE FFF6          	movff	postinc2,tblptrl
  2375   001150  CFDD FFF7          	movff	postdec2,tblptrh
  2376   001154                     	if	0	;tblptru may be non-zero
  2377   001154                     	endif
  2378   001154                     	if	0	;tblptru may be non-zero
  2379   001154                     	endif
  2380   001154  0008               	tblrd		*
  2381   001156  50F5               	movf	tablat,w,c
  2382   001158  0A25               	xorlw	37
  2383   00115A  A4D8               	btfss	status,2,c
  2384   00115C  EFB2  F008         	goto	u1251
  2385   001160  EFB4  F008         	goto	u1250
  2386   001164                     u1251:
  2387   001164  EF1E  F009         	goto	l1815
  2388   001168                     u1250:
  2389   001168                     
  2390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2391   001168  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2392   00116C  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2393   001170  2ADE               	incf	postinc2,f,c
  2394   001172  0E00               	movlw	0
  2395   001174  22DD               	addwfc	postdec2,f,c
  2396   001176                     
  2397                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2398   001176  0E00               	movlw	0
  2399   001178  6E5D               	movwf	(_width+1)^0,c
  2400   00117A  0E00               	movlw	0
  2401   00117C  6E5C               	movwf	_width^0,c
  2402   00117E  C05C  F060         	movff	_width,_flags
  2403   001182                     
  2404                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2405   001182  685E               	setf	_prec^0,c
  2406   001184  685F               	setf	(_prec+1)^0,c
  2407   001186                     
  2408                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2409   001186  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2410   00118A  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2411   00118E  CFDE F040          	movff	postinc2,vfpfcnvrt@cp
  2412   001192  CFDD F041          	movff	postdec2,vfpfcnvrt@cp+1
  2413   001196                     
  2414                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2415   001196  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2416   00119A  C041  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2417   00119E                     	if	0	;tblptru may be non-zero
  2418   00119E                     	endif
  2419   00119E                     	if	0	;tblptru may be non-zero
  2420   00119E                     	endif
  2421   00119E  0008               	tblrd		*
  2422   0011A0  50F5               	movf	tablat,w,c
  2423   0011A2  0A64               	xorlw	100
  2424   0011A4  B4D8               	btfsc	status,2,c
  2425   0011A6  EFD7  F008         	goto	u1261
  2426   0011AA  EFD9  F008         	goto	u1260
  2427   0011AE                     u1261:
  2428   0011AE  EFE7  F008         	goto	l1805
  2429   0011B2                     u1260:
  2430   0011B2  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2431   0011B6  C041  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2432   0011BA                     	if	0	;tblptru may be non-zero
  2433   0011BA                     	endif
  2434   0011BA                     	if	0	;tblptru may be non-zero
  2435   0011BA                     	endif
  2436   0011BA  0008               	tblrd		*
  2437   0011BC  50F5               	movf	tablat,w,c
  2438   0011BE  0A69               	xorlw	105
  2439   0011C0  A4D8               	btfss	status,2,c
  2440   0011C2  EFE5  F008         	goto	u1271
  2441   0011C6  EFE7  F008         	goto	u1270
  2442   0011CA                     u1271:
  2443   0011CA  EF15  F009         	goto	l1811
  2444   0011CE                     u1270:
  2445   0011CE                     l1805:
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2448   0011CE  C038  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2449   0011D2  C039  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2450   0011D6  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  2451   0011DA  0E02               	movlw	2
  2452   0011DC  26DE               	addwf	postinc2,f,c
  2453   0011DE  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  2454   0011E2  0E00               	movlw	0
  2455   0011E4  22DD               	addwfc	postdec2,f,c
  2456   0011E6  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2457   0011EA  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2458   0011EE  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg
  2459   0011F2  CFDD F03D          	movff	postdec2,vfpfcnvrt@convarg+1
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2462   0011F6  0E01               	movlw	1
  2463   0011F8  2440               	addwf	vfpfcnvrt@cp^0,w,c
  2464   0011FA  6E3A               	movwf	??_vfpfcnvrt^0,c
  2465   0011FC  0E00               	movlw	0
  2466   0011FE  2041               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2467   001200  6E3B               	movwf	(??_vfpfcnvrt+1)^0,c
  2468   001202  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2469   001206  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2470   00120A  C03A  FFDE         	movff	??_vfpfcnvrt,postinc2
  2471   00120E  C03B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2472   001212                     
  2473                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2474   001212  C034  F027         	movff	vfpfcnvrt@fp,dtoa@fp
  2475   001216  C035  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2476   00121A  C03C  F029         	movff	vfpfcnvrt@convarg,dtoa@d
  2477   00121E  C03D  F02A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2478   001222  EC41  F007         	call	_dtoa	;wreg free
  2479   001226  EF32  F009         	goto	l918
  2480   00122A                     l1811:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2483   00122A  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2484   00122E  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2485   001232  2ADE               	incf	postinc2,f,c
  2486   001234  0E00               	movlw	0
  2487   001236  22DD               	addwfc	postdec2,f,c
  2488   001238  EF32  F009         	goto	l918
  2489   00123C                     l1815:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2492   00123C  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493   001240  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494   001244  CFDE FFF6          	movff	postinc2,tblptrl
  2495   001248  CFDD FFF7          	movff	postdec2,tblptrh
  2496   00124C                     	if	0	;tblptru may be non-zero
  2497   00124C                     	endif
  2498   00124C                     	if	0	;tblptru may be non-zero
  2499   00124C                     	endif
  2500   00124C  0008               	tblrd		*
  2501   00124E  50F5               	movf	tablat,w,c
  2502   001250  6E0C               	movwf	fputc@c^0,c
  2503   001252  6A0D               	clrf	(fputc@c+1)^0,c
  2504   001254  C034  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  2505   001258  C035  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2506   00125C  EC33  F009         	call	_fputc	;wreg free
  2507   001260  EF15  F009         	goto	l1811
  2508   001264                     l918:
  2509   001264  0012               	return		;funcret
  2510   001266                     __end_of_vfpfcnvrt:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _dtoa *****************
  2514 ;; Defined at:
  2515 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  2518 ;;		 -> NULL(0), 
  2519 ;;  d               2   40[COMRAM] int 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  i               2   48[COMRAM] int 
  2522 ;;  w               2   46[COMRAM] int 
  2523 ;;  p               2   44[COMRAM] int 
  2524 ;;  s               1   50[COMRAM] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2534 ;;      Params:         4       0       0       0       0       0       0
  2535 ;;      Locals:         9       0       0       0       0       0       0
  2536 ;;      Temps:          0       0       0       0       0       0       0
  2537 ;;      Totals:        13       0       0       0       0       0       0
  2538 ;;Total ram usage:       13 bytes
  2539 ;; Hardware stack levels used: 1
  2540 ;; Hardware stack levels required when called: 5
  2541 ;; This function calls:
  2542 ;;		___awdiv
  2543 ;;		___awmod
  2544 ;;		_abs
  2545 ;;		_pad
  2546 ;; This function is called by:
  2547 ;;		_vfpfcnvrt
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text8
  2552   000E82                     __ptext8:
  2553                           	callstack 0
  2554   000E82                     _dtoa:
  2555                           	callstack 22
  2556   000E82                     
  2557                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2558   000E82  BE2A               	btfsc	(dtoa@d+1)^0,7,c
  2559   000E84  EF46  F007         	goto	u1151
  2560   000E88  EF49  F007         	goto	u1150
  2561   000E8C                     u1151:
  2562   000E8C  0E01               	movlw	1
  2563   000E8E  EF4A  F007         	goto	u1160
  2564   000E92                     u1150:
  2565   000E92  0E00               	movlw	0
  2566   000E94                     u1160:
  2567   000E94  6E33               	movwf	dtoa@s^0,c
  2568   000E96                     
  2569                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2570   000E96  5033               	movf	dtoa@s^0,w,c
  2571   000E98  B4D8               	btfsc	status,2,c
  2572   000E9A  EF51  F007         	goto	u1171
  2573   000E9E  EF53  F007         	goto	u1170
  2574   000EA2                     u1171:
  2575   000EA2  EF57  F007         	goto	l1747
  2576   000EA6                     u1170:
  2577   000EA6                     
  2578                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2579   000EA6  6C29               	negf	dtoa@d^0,c
  2580   000EA8  1E2A               	comf	(dtoa@d+1)^0,f,c
  2581   000EAA  B0D8               	btfsc	status,0,c
  2582   000EAC  2A2A               	incf	(dtoa@d+1)^0,f,c
  2583   000EAE                     l1747:
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2586   000EAE  BE5F               	btfsc	(_prec+1)^0,7,c
  2587   000EB0  EF5E  F007         	goto	u1180
  2588   000EB4  EF5C  F007         	goto	u1181
  2589   000EB8                     u1181:
  2590   000EB8  EF64  F007         	goto	l897
  2591   000EBC                     u1180:
  2592   000EBC  0E00               	movlw	0
  2593   000EBE  6E2E               	movwf	(dtoa@p+1)^0,c
  2594   000EC0  0E01               	movlw	1
  2595   000EC2  6E2D               	movwf	dtoa@p^0,c
  2596   000EC4  EF68  F007         	goto	l899
  2597   000EC8                     l897:
  2598   000EC8  C05E  F02D         	movff	_prec,dtoa@p
  2599   000ECC  C05F  F02E         	movff	_prec+1,dtoa@p+1
  2600   000ED0                     l899:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2603   000ED0  C05C  F02F         	movff	_width,dtoa@w
  2604   000ED4  C05D  F030         	movff	_width+1,dtoa@w+1
  2605   000ED8                     
  2606                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2607   000ED8  5033               	movf	dtoa@s^0,w,c
  2608   000EDA  B4D8               	btfsc	status,2,c
  2609   000EDC  EF72  F007         	goto	u1191
  2610   000EE0  EF74  F007         	goto	u1190
  2611   000EE4                     u1191:
  2612   000EE4  EF8B  F007         	goto	l900
  2613   000EE8                     u1190:
  2614   000EE8                     
  2615                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2616   000EE8  062F               	decf	dtoa@w^0,f,c
  2617   000EEA  A0D8               	btfss	status,0,c
  2618   000EEC  0630               	decf	(dtoa@w+1)^0,f,c
  2619   000EEE                     
  2620                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2621   000EEE  5033               	movf	dtoa@s^0,w,c
  2622   000EF0  A4D8               	btfss	status,2,c
  2623   000EF2  EF7D  F007         	goto	u1201
  2624   000EF6  EF7F  F007         	goto	u1200
  2625   000EFA                     u1201:
  2626   000EFA  EF85  F007         	goto	l1759
  2627   000EFE                     u1200:
  2628   000EFE  0E00               	movlw	0
  2629   000F00  6E2C               	movwf	(_dtoa$1310+1)^0,c
  2630   000F02  0E2B               	movlw	43
  2631   000F04  6E2B               	movwf	_dtoa$1310^0,c
  2632   000F06  EF89  F007         	goto	l1761
  2633   000F0A                     l1759:
  2634   000F0A  0E00               	movlw	0
  2635   000F0C  6E2C               	movwf	(_dtoa$1310+1)^0,c
  2636   000F0E  0E2D               	movlw	45
  2637   000F10  6E2B               	movwf	_dtoa$1310^0,c
  2638   000F12                     l1761:
  2639   000F12  C02B  F033         	movff	_dtoa$1310,dtoa@s
  2640   000F16                     l900:
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2643   000F16  0E00               	movlw	0
  2644   000F18  6E32               	movwf	(dtoa@i+1)^0,c
  2645   000F1A  0E1F               	movlw	31
  2646   000F1C  6E31               	movwf	dtoa@i^0,c
  2647   000F1E                     
  2648                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2649   000F1E  0E00               	movlw	0
  2650   000F20  0100               	movlb	0	; () banked
  2651   000F22  6FB7               	movwf	(_dbuf+31)& (0+255),b
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2654   000F24  EFC4  F007         	goto	l1775
  2655   000F28                     l1765:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2658   000F28  0631               	decf	dtoa@i^0,f,c
  2659   000F2A  A0D8               	btfss	status,0,c
  2660   000F2C  0632               	decf	(dtoa@i+1)^0,f,c
  2661   000F2E                     
  2662                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2663   000F2E  0E98               	movlw	low _dbuf
  2664   000F30  2431               	addwf	dtoa@i^0,w,c
  2665   000F32  6ED9               	movwf	fsr2l,c
  2666   000F34  0E00               	movlw	high _dbuf
  2667   000F36  2032               	addwfc	(dtoa@i+1)^0,w,c
  2668   000F38  6EDA               	movwf	fsr2h,c
  2669   000F3A  C029  F00B         	movff	dtoa@d,___awmod@dividend
  2670   000F3E  C02A  F00C         	movff	dtoa@d+1,___awmod@dividend+1
  2671   000F42  0E00               	movlw	0
  2672   000F44  6E0E               	movwf	(___awmod@divisor+1)^0,c
  2673   000F46  0E0A               	movlw	10
  2674   000F48  6E0D               	movwf	___awmod@divisor^0,c
  2675   000F4A  ECFA  F009         	call	___awmod	;wreg free
  2676   000F4E  C00B  F011         	movff	?___awmod,abs@a
  2677   000F52  C00C  F012         	movff	?___awmod+1,abs@a+1
  2678   000F56  EC80  F00B         	call	_abs	;wreg free
  2679   000F5A  5011               	movf	?_abs^0,w,c
  2680   000F5C  0F30               	addlw	48
  2681   000F5E  6EDF               	movwf	indf2,c
  2682   000F60                     
  2683                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2684   000F60  062D               	decf	dtoa@p^0,f,c
  2685   000F62  A0D8               	btfss	status,0,c
  2686   000F64  062E               	decf	(dtoa@p+1)^0,f,c
  2687   000F66                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2689   000F66  062F               	decf	dtoa@w^0,f,c
  2690   000F68  A0D8               	btfss	status,0,c
  2691   000F6A  0630               	decf	(dtoa@w+1)^0,f,c
  2692   000F6C                     
  2693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2694   000F6C  C029  F00B         	movff	dtoa@d,___awdiv@dividend
  2695   000F70  C02A  F00C         	movff	dtoa@d+1,___awdiv@dividend+1
  2696   000F74  0E00               	movlw	0
  2697   000F76  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  2698   000F78  0E0A               	movlw	10
  2699   000F7A  6E0D               	movwf	___awdiv@divisor^0,c
  2700   000F7C  EC98  F009         	call	___awdiv	;wreg free
  2701   000F80  C00B  F029         	movff	?___awdiv,dtoa@d
  2702   000F84  C00C  F02A         	movff	?___awdiv+1,dtoa@d+1
  2703   000F88                     l1775:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2706   000F88  BE32               	btfsc	(dtoa@i+1)^0,7,c
  2707   000F8A  EFCF  F007         	goto	u1211
  2708   000F8E  5032               	movf	(dtoa@i+1)^0,w,c
  2709   000F90  E108               	bnz	u1210
  2710   000F92  0431               	decf	dtoa@i^0,w,c
  2711   000F94  A0D8               	btfss	status,0,c
  2712   000F96  EFCF  F007         	goto	u1211
  2713   000F9A  EFD1  F007         	goto	u1210
  2714   000F9E                     u1211:
  2715   000F9E  EFE7  F007         	goto	l1781
  2716   000FA2                     u1210:
  2717   000FA2  5029               	movf	dtoa@d^0,w,c
  2718   000FA4  102A               	iorwf	(dtoa@d+1)^0,w,c
  2719   000FA6  A4D8               	btfss	status,2,c
  2720   000FA8  EFD8  F007         	goto	u1221
  2721   000FAC  EFDA  F007         	goto	u1220
  2722   000FB0                     u1221:
  2723   000FB0  EF94  F007         	goto	l1765
  2724   000FB4                     u1220:
  2725   000FB4  BE2E               	btfsc	(dtoa@p+1)^0,7,c
  2726   000FB6  EFE7  F007         	goto	u1230
  2727   000FBA  502E               	movf	(dtoa@p+1)^0,w,c
  2728   000FBC  E106               	bnz	u1231
  2729   000FBE  042D               	decf	dtoa@p^0,w,c
  2730   000FC0  B0D8               	btfsc	status,0,c
  2731   000FC2  EFE5  F007         	goto	u1231
  2732   000FC6  EFE7  F007         	goto	u1230
  2733   000FCA                     u1231:
  2734   000FCA  EF94  F007         	goto	l1765
  2735   000FCE                     u1230:
  2736   000FCE                     l1781:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2739   000FCE  5033               	movf	dtoa@s^0,w,c
  2740   000FD0  B4D8               	btfsc	status,2,c
  2741   000FD2  EFED  F007         	goto	u1241
  2742   000FD6  EFEF  F007         	goto	u1240
  2743   000FDA                     u1241:
  2744   000FDA  EFFA  F007         	goto	l1787
  2745   000FDE                     u1240:
  2746   000FDE                     
  2747                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2748   000FDE  0631               	decf	dtoa@i^0,f,c
  2749   000FE0  A0D8               	btfss	status,0,c
  2750   000FE2  0632               	decf	(dtoa@i+1)^0,f,c
  2751   000FE4                     
  2752                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2753   000FE4  0E98               	movlw	low _dbuf
  2754   000FE6  2431               	addwf	dtoa@i^0,w,c
  2755   000FE8  6ED9               	movwf	fsr2l,c
  2756   000FEA  0E00               	movlw	high _dbuf
  2757   000FEC  2032               	addwfc	(dtoa@i+1)^0,w,c
  2758   000FEE  6EDA               	movwf	fsr2h,c
  2759   000FF0  C033  FFDF         	movff	dtoa@s,indf2
  2760   000FF4                     l1787:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2763   000FF4  C027  F01C         	movff	dtoa@fp,pad@fp
  2764   000FF8  C028  F01D         	movff	dtoa@fp+1,pad@fp+1
  2765   000FFC  0E98               	movlw	low _dbuf
  2766   000FFE  2431               	addwf	dtoa@i^0,w,c
  2767   001000  6E1E               	movwf	pad@buf^0,c
  2768   001002  0E00               	movlw	high _dbuf
  2769   001004  2032               	addwfc	(dtoa@i+1)^0,w,c
  2770   001006  6E1F               	movwf	(pad@buf+1)^0,c
  2771   001008  C02F  F020         	movff	dtoa@w,pad@p
  2772   00100C  C030  F021         	movff	dtoa@w+1,pad@p+1
  2773   001010  EC8F  F00A         	call	_pad	;wreg free
  2774   001014  0012               	return		;funcret
  2775   001016                     __end_of_dtoa:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function _pad *****************
  2779 ;; Defined at:
  2780 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2783 ;;		 -> NULL(0), 
  2784 ;;  buf             2   29[COMRAM] PTR unsigned char 
  2785 ;;		 -> dbuf(32), 
  2786 ;;  p               2   31[COMRAM] int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  w               2   36[COMRAM] int 
  2789 ;;  i               2   34[COMRAM] int 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2799 ;;      Params:         6       0       0       0       0       0       0
  2800 ;;      Locals:         4       0       0       0       0       0       0
  2801 ;;      Temps:          1       0       0       0       0       0       0
  2802 ;;      Totals:        11       0       0       0       0       0       0
  2803 ;;Total ram usage:       11 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; Hardware stack levels required when called: 4
  2806 ;; This function calls:
  2807 ;;		_fputc
  2808 ;;		_fputs
  2809 ;; This function is called by:
  2810 ;;		_dtoa
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text9
  2815   00151E                     __ptext9:
  2816                           	callstack 0
  2817   00151E                     _pad:
  2818                           	callstack 22
  2819   00151E                     
  2820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2821   00151E  BE21               	btfsc	(pad@p+1)^0,7,c
  2822   001520  EF94  F00A         	goto	u1121
  2823   001524  EF96  F00A         	goto	u1120
  2824   001528                     u1121:
  2825   001528  EF9C  F00A         	goto	l1727
  2826   00152C                     u1120:
  2827   00152C  C020  F025         	movff	pad@p,pad@w
  2828   001530  C021  F026         	movff	pad@p+1,pad@w+1
  2829   001534  EFA0  F00A         	goto	l888
  2830   001538                     l1727:
  2831   001538  0E00               	movlw	0
  2832   00153A  6E26               	movwf	(pad@w+1)^0,c
  2833   00153C  0E00               	movlw	0
  2834   00153E  6E25               	movwf	pad@w^0,c
  2835   001540                     l888:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2838   001540  0E00               	movlw	0
  2839   001542  6E24               	movwf	(pad@i+1)^0,c
  2840   001544  0E00               	movlw	0
  2841   001546  6E23               	movwf	pad@i^0,c
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2844   001548  EFB2  F00A         	goto	l1733
  2845   00154C                     l1729:
  2846                           
  2847                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2848   00154C  0E00               	movlw	0
  2849   00154E  6E0D               	movwf	(fputc@c+1)^0,c
  2850   001550  0E20               	movlw	32
  2851   001552  6E0C               	movwf	fputc@c^0,c
  2852   001554  C01C  F00E         	movff	pad@fp,fputc@fp
  2853   001558  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  2854   00155C  EC33  F009         	call	_fputc	;wreg free
  2855   001560                     
  2856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2857   001560  4A23               	infsnz	pad@i^0,f,c
  2858   001562  2A24               	incf	(pad@i+1)^0,f,c
  2859   001564                     l1733:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2862   001564  5025               	movf	pad@w^0,w,c
  2863   001566  5C23               	subwf	pad@i^0,w,c
  2864   001568  5024               	movf	(pad@i+1)^0,w,c
  2865   00156A  0A80               	xorlw	128
  2866   00156C  6E22               	movwf	??_pad^0,c
  2867   00156E  5026               	movf	(pad@w+1)^0,w,c
  2868   001570  0A80               	xorlw	128
  2869   001572  5822               	subwfb	??_pad^0,w,c
  2870   001574  A0D8               	btfss	status,0,c
  2871   001576  EFBF  F00A         	goto	u1131
  2872   00157A  EFC1  F00A         	goto	u1130
  2873   00157E                     u1131:
  2874   00157E  EFA6  F00A         	goto	l1729
  2875   001582                     u1130:
  2876   001582                     
  2877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2878   001582  C01E  F015         	movff	pad@buf,fputs@s
  2879   001586  C01F  F016         	movff	pad@buf+1,fputs@s+1
  2880   00158A  C01C  F017         	movff	pad@fp,fputs@fp
  2881   00158E  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  2882   001592  EC5E  F00B         	call	_fputs	;wreg free
  2883   001596  0012               	return		;funcret
  2884   001598                     __end_of_pad:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _fputs *****************
  2888 ;; Defined at:
  2889 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  s               2   20[COMRAM] PTR const unsigned char 
  2892 ;;		 -> dbuf(32), 
  2893 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  2894 ;;		 -> NULL(0), 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  i               2   25[COMRAM] int 
  2897 ;;  c               1   24[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  2   20[COMRAM] int 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2907 ;;      Params:         4       0       0       0       0       0       0
  2908 ;;      Locals:         3       0       0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0
  2910 ;;      Totals:         7       0       0       0       0       0       0
  2911 ;;Total ram usage:        7 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 3
  2914 ;; This function calls:
  2915 ;;		_fputc
  2916 ;; This function is called by:
  2917 ;;		_pad
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text10
  2922   0016BC                     __ptext10:
  2923                           	callstack 0
  2924   0016BC                     _fputs:
  2925                           	callstack 22
  2926   0016BC  0E00               	movlw	0
  2927   0016BE  6E1B               	movwf	(fputs@i+1)^0,c
  2928   0016C0  0E00               	movlw	0
  2929   0016C2  6E1A               	movwf	fputs@i^0,c
  2930   0016C4  EF6F  F00B         	goto	l1641
  2931   0016C8                     l1637:
  2932   0016C8  C019  F00C         	movff	fputs@c,fputc@c
  2933   0016CC  6A0D               	clrf	(fputc@c+1)^0,c
  2934   0016CE  C017  F00E         	movff	fputs@fp,fputc@fp
  2935   0016D2  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  2936   0016D6  EC33  F009         	call	_fputc	;wreg free
  2937   0016DA  4A1A               	infsnz	fputs@i^0,f,c
  2938   0016DC  2A1B               	incf	(fputs@i+1)^0,f,c
  2939   0016DE                     l1641:
  2940   0016DE  501A               	movf	fputs@i^0,w,c
  2941   0016E0  2415               	addwf	fputs@s^0,w,c
  2942   0016E2  6ED9               	movwf	fsr2l,c
  2943   0016E4  501B               	movf	(fputs@i+1)^0,w,c
  2944   0016E6  2016               	addwfc	(fputs@s+1)^0,w,c
  2945   0016E8  6EDA               	movwf	fsr2h,c
  2946   0016EA  50DF               	movf	indf2,w,c
  2947   0016EC  6E19               	movwf	fputs@c^0,c
  2948   0016EE  5019               	movf	fputs@c^0,w,c
  2949   0016F0  A4D8               	btfss	status,2,c
  2950   0016F2  EF7D  F00B         	goto	u991
  2951   0016F6  EF7F  F00B         	goto	u990
  2952   0016FA                     u991:
  2953   0016FA  EF64  F00B         	goto	l1637
  2954   0016FE                     u990:
  2955   0016FE  0012               	return		;funcret
  2956   001700                     __end_of_fputs:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _fputc *****************
  2960 ;; Defined at:
  2961 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  c               2   11[COMRAM] int 
  2964 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2965 ;;		 -> NULL(0), 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;		None
  2968 ;; Return value:  Size  Location     Type
  2969 ;;                  2   11[COMRAM] int 
  2970 ;; Registers used:
  2971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2972 ;; Tracked objects:
  2973 ;;		On entry : 0/0
  2974 ;;		On exit  : 0/0
  2975 ;;		Unchanged: 0/0
  2976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2977 ;;      Params:         4       0       0       0       0       0       0
  2978 ;;      Locals:         0       0       0       0       0       0       0
  2979 ;;      Temps:          5       0       0       0       0       0       0
  2980 ;;      Totals:         9       0       0       0       0       0       0
  2981 ;;Total ram usage:        9 bytes
  2982 ;; Hardware stack levels used: 1
  2983 ;; Hardware stack levels required when called: 2
  2984 ;; This function calls:
  2985 ;;		_putch
  2986 ;; This function is called by:
  2987 ;;		_pad
  2988 ;;		_vfpfcnvrt
  2989 ;;		_fputs
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text11
  2994   001266                     __ptext11:
  2995                           	callstack 0
  2996   001266                     _fputc:
  2997                           	callstack 25
  2998   001266  500E               	movf	fputc@fp^0,w,c
  2999   001268  100F               	iorwf	(fputc@fp+1)^0,w,c
  3000   00126A  B4D8               	btfsc	status,2,c
  3001   00126C  EF3A  F009         	goto	u951
  3002   001270  EF3C  F009         	goto	u950
  3003   001274                     u951:
  3004   001274  EF45  F009         	goto	l1625
  3005   001278                     u950:
  3006   001278  500E               	movf	fputc@fp^0,w,c
  3007   00127A  100F               	iorwf	(fputc@fp+1)^0,w,c
  3008   00127C  A4D8               	btfss	status,2,c
  3009   00127E  EF43  F009         	goto	u961
  3010   001282  EF45  F009         	goto	u960
  3011   001286                     u961:
  3012   001286  EF4A  F009         	goto	l1627
  3013   00128A                     u960:
  3014   00128A                     l1625:
  3015   00128A  500C               	movf	fputc@c^0,w,c
  3016   00128C  ECE6  F00B         	call	_putch
  3017   001290  EF97  F009         	goto	l943
  3018   001294                     l1627:
  3019   001294  EE20 F00A          	lfsr	2,10
  3020   001298  500E               	movf	fputc@fp^0,w,c
  3021   00129A  26D9               	addwf	fsr2l,f,c
  3022   00129C  500F               	movf	(fputc@fp+1)^0,w,c
  3023   00129E  22DA               	addwfc	fsr2h,f,c
  3024   0012A0  50DE               	movf	postinc2,w,c
  3025   0012A2  10DE               	iorwf	postinc2,w,c
  3026   0012A4  B4D8               	btfsc	status,2,c
  3027   0012A6  EF57  F009         	goto	u971
  3028   0012AA  EF59  F009         	goto	u970
  3029   0012AE                     u971:
  3030   0012AE  EF74  F009         	goto	l1631
  3031   0012B2                     u970:
  3032   0012B2  EE20 F00A          	lfsr	2,10
  3033   0012B6  500E               	movf	fputc@fp^0,w,c
  3034   0012B8  26D9               	addwf	fsr2l,f,c
  3035   0012BA  500F               	movf	(fputc@fp+1)^0,w,c
  3036   0012BC  22DA               	addwfc	fsr2h,f,c
  3037   0012BE  EE10 F003          	lfsr	1,3
  3038   0012C2  500E               	movf	fputc@fp^0,w,c
  3039   0012C4  26E1               	addwf	fsr1l,f,c
  3040   0012C6  500F               	movf	(fputc@fp+1)^0,w,c
  3041   0012C8  22E2               	addwfc	fsr1h,f,c
  3042   0012CA  50DE               	movf	postinc2,w,c
  3043   0012CC  5CE6               	subwf	postinc1,w,c
  3044   0012CE  50E6               	movf	postinc1,w,c
  3045   0012D0  0A80               	xorlw	128
  3046   0012D2  6E14               	movwf	(??_fputc+4)^0,c
  3047   0012D4  50DE               	movf	postinc2,w,c
  3048   0012D6  0A80               	xorlw	128
  3049   0012D8  5814               	subwfb	(??_fputc+4)^0,w,c
  3050   0012DA  B0D8               	btfsc	status,0,c
  3051   0012DC  EF72  F009         	goto	u981
  3052   0012E0  EF74  F009         	goto	u980
  3053   0012E4                     u981:
  3054   0012E4  EF97  F009         	goto	l943
  3055   0012E8                     u980:
  3056   0012E8                     l1631:
  3057   0012E8  EE20 F003          	lfsr	2,3
  3058   0012EC  500E               	movf	fputc@fp^0,w,c
  3059   0012EE  26D9               	addwf	fsr2l,f,c
  3060   0012F0  500F               	movf	(fputc@fp+1)^0,w,c
  3061   0012F2  22DA               	addwfc	fsr2h,f,c
  3062   0012F4  CFDE F010          	movff	postinc2,??_fputc
  3063   0012F8  CFDD F011          	movff	postdec2,??_fputc+1
  3064   0012FC  C00E  FFD9         	movff	fputc@fp,fsr2l
  3065   001300  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  3066   001304  CFDE F012          	movff	postinc2,??_fputc+2
  3067   001308  CFDD F013          	movff	postdec2,??_fputc+3
  3068   00130C  5010               	movf	??_fputc^0,w,c
  3069   00130E  2412               	addwf	(??_fputc+2)^0,w,c
  3070   001310  6ED9               	movwf	fsr2l,c
  3071   001312  5011               	movf	(??_fputc+1)^0,w,c
  3072   001314  2013               	addwfc	(??_fputc+3)^0,w,c
  3073   001316  6EDA               	movwf	fsr2h,c
  3074   001318  C00C  FFDF         	movff	fputc@c,indf2
  3075   00131C  EE20 F003          	lfsr	2,3
  3076   001320  500E               	movf	fputc@fp^0,w,c
  3077   001322  26D9               	addwf	fsr2l,f,c
  3078   001324  500F               	movf	(fputc@fp+1)^0,w,c
  3079   001326  22DA               	addwfc	fsr2h,f,c
  3080   001328  2ADE               	incf	postinc2,f,c
  3081   00132A  0E00               	movlw	0
  3082   00132C  22DD               	addwfc	postdec2,f,c
  3083   00132E                     l943:
  3084   00132E  0012               	return		;funcret
  3085   001330                     __end_of_fputc:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _putch *****************
  3089 ;; Defined at:
  3090 ;;		line 30 in file "main.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  byte            1    wreg     unsigned char 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  byte            1   10[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3104 ;;      Params:         0       0       0       0       0       0       0
  3105 ;;      Locals:         1       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0
  3107 ;;      Totals:         1       0       0       0       0       0       0
  3108 ;;Total ram usage:        1 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 1
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_fputc
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text12
  3119   0017CC                     __ptext12:
  3120                           	callstack 0
  3121   0017CC                     _putch:
  3122                           	callstack 25
  3123                           
  3124                           ;incstack = 0
  3125                           ;putch@byte stored from wreg
  3126   0017CC  6E0B               	movwf	putch@byte^0,c
  3127   0017CE                     
  3128                           ;main.c: 31:     TXREG = byte;
  3129   0017CE  C00B  FFAD         	movff	putch@byte,4013	;volatile
  3130   0017D2                     l53:
  3131   0017D2  A2AC               	btfss	172,1,c	;volatile
  3132   0017D4  EFEE  F00B         	goto	u941
  3133   0017D8  EFF0  F00B         	goto	u940
  3134   0017DC                     u941:
  3135   0017DC  EFE9  F00B         	goto	l53
  3136   0017E0                     u940:
  3137   0017E0  0012               	return		;funcret
  3138   0017E2                     __end_of_putch:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _abs *****************
  3142 ;; Defined at:
  3143 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  a               2   16[COMRAM] int 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  2   16[COMRAM] int 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3157 ;;      Params:         2       0       0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0
  3159 ;;      Temps:          2       0       0       0       0       0       0
  3160 ;;      Totals:         4       0       0       0       0       0       0
  3161 ;;Total ram usage:        4 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_dtoa
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text13
  3172   001700                     __ptext13:
  3173                           	callstack 0
  3174   001700                     _abs:
  3175                           	callstack 25
  3176   001700  BE12               	btfsc	(abs@a+1)^0,7,c
  3177   001702  EF8D  F00B         	goto	u1140
  3178   001706  5012               	movf	(abs@a+1)^0,w,c
  3179   001708  E106               	bnz	u1141
  3180   00170A  0411               	decf	abs@a^0,w,c
  3181   00170C  B0D8               	btfsc	status,0,c
  3182   00170E  EF8B  F00B         	goto	u1141
  3183   001712  EF8D  F00B         	goto	u1140
  3184   001716                     u1141:
  3185   001716  EF9B  F00B         	goto	l928
  3186   00171A                     u1140:
  3187   00171A  C011  F013         	movff	abs@a,??_abs
  3188   00171E  C012  F014         	movff	abs@a+1,??_abs+1
  3189   001722  1E13               	comf	??_abs^0,f,c
  3190   001724  1E14               	comf	(??_abs+1)^0,f,c
  3191   001726  4A13               	infsnz	??_abs^0,f,c
  3192   001728  2A14               	incf	(??_abs+1)^0,f,c
  3193   00172A  C013  F011         	movff	??_abs,?_abs
  3194   00172E  C014  F012         	movff	??_abs+1,?_abs+1
  3195   001732  EF9F  F00B         	goto	l931
  3196   001736                     l928:
  3197   001736  C011  F011         	movff	abs@a,?_abs
  3198   00173A  C012  F012         	movff	abs@a+1,?_abs+1
  3199   00173E                     l931:
  3200   00173E  0012               	return		;funcret
  3201   001740                     __end_of_abs:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function ___awmod *****************
  3205 ;; Defined at:
  3206 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  dividend        2   10[COMRAM] int 
  3209 ;;  divisor         2   12[COMRAM] int 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  sign            1   15[COMRAM] unsigned char 
  3212 ;;  counter         1   14[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2   10[COMRAM] int 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3222 ;;      Params:         4       0       0       0       0       0       0
  3223 ;;      Locals:         2       0       0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0
  3225 ;;      Totals:         6       0       0       0       0       0       0
  3226 ;;Total ram usage:        6 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_dtoa
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text14
  3237   0013F4                     __ptext14:
  3238                           	callstack 0
  3239   0013F4                     ___awmod:
  3240                           	callstack 25
  3241   0013F4  0E00               	movlw	0
  3242   0013F6  6E10               	movwf	___awmod@sign^0,c
  3243   0013F8  BE0C               	btfsc	(___awmod@dividend+1)^0,7,c
  3244   0013FA  EF03  F00A         	goto	u1060
  3245   0013FE  EF01  F00A         	goto	u1061
  3246   001402                     u1061:
  3247   001402  EF09  F00A         	goto	l1695
  3248   001406                     u1060:
  3249   001406  6C0B               	negf	___awmod@dividend^0,c
  3250   001408  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  3251   00140A  B0D8               	btfsc	status,0,c
  3252   00140C  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  3253   00140E  0E01               	movlw	1
  3254   001410  6E10               	movwf	___awmod@sign^0,c
  3255   001412                     l1695:
  3256   001412  BE0E               	btfsc	(___awmod@divisor+1)^0,7,c
  3257   001414  EF10  F00A         	goto	u1070
  3258   001418  EF0E  F00A         	goto	u1071
  3259   00141C                     u1071:
  3260   00141C  EF14  F00A         	goto	l1699
  3261   001420                     u1070:
  3262   001420  6C0D               	negf	___awmod@divisor^0,c
  3263   001422  1E0E               	comf	(___awmod@divisor+1)^0,f,c
  3264   001424  B0D8               	btfsc	status,0,c
  3265   001426  2A0E               	incf	(___awmod@divisor+1)^0,f,c
  3266   001428                     l1699:
  3267   001428  500D               	movf	___awmod@divisor^0,w,c
  3268   00142A  100E               	iorwf	(___awmod@divisor+1)^0,w,c
  3269   00142C  B4D8               	btfsc	status,2,c
  3270   00142E  EF1B  F00A         	goto	u1081
  3271   001432  EF1D  F00A         	goto	u1080
  3272   001436                     u1081:
  3273   001436  EF41  F00A         	goto	l1715
  3274   00143A                     u1080:
  3275   00143A  0E01               	movlw	1
  3276   00143C  6E0F               	movwf	___awmod@counter^0,c
  3277   00143E  EF25  F00A         	goto	l1705
  3278   001442                     l1703:
  3279   001442  90D8               	bcf	status,0,c
  3280   001444  360D               	rlcf	___awmod@divisor^0,f,c
  3281   001446  360E               	rlcf	(___awmod@divisor+1)^0,f,c
  3282   001448  2A0F               	incf	___awmod@counter^0,f,c
  3283   00144A                     l1705:
  3284   00144A  AE0E               	btfss	(___awmod@divisor+1)^0,7,c
  3285   00144C  EF2A  F00A         	goto	u1091
  3286   001450  EF2C  F00A         	goto	u1090
  3287   001454                     u1091:
  3288   001454  EF21  F00A         	goto	l1703
  3289   001458                     u1090:
  3290   001458                     l1707:
  3291   001458  500D               	movf	___awmod@divisor^0,w,c
  3292   00145A  5C0B               	subwf	___awmod@dividend^0,w,c
  3293   00145C  500E               	movf	(___awmod@divisor+1)^0,w,c
  3294   00145E  580C               	subwfb	(___awmod@dividend+1)^0,w,c
  3295   001460  A0D8               	btfss	status,0,c
  3296   001462  EF35  F00A         	goto	u1101
  3297   001466  EF37  F00A         	goto	u1100
  3298   00146A                     u1101:
  3299   00146A  EF3B  F00A         	goto	l1711
  3300   00146E                     u1100:
  3301   00146E  500D               	movf	___awmod@divisor^0,w,c
  3302   001470  5E0B               	subwf	___awmod@dividend^0,f,c
  3303   001472  500E               	movf	(___awmod@divisor+1)^0,w,c
  3304   001474  5A0C               	subwfb	(___awmod@dividend+1)^0,f,c
  3305   001476                     l1711:
  3306   001476  90D8               	bcf	status,0,c
  3307   001478  320E               	rrcf	(___awmod@divisor+1)^0,f,c
  3308   00147A  320D               	rrcf	___awmod@divisor^0,f,c
  3309   00147C  2E0F               	decfsz	___awmod@counter^0,f,c
  3310   00147E  EF2C  F00A         	goto	l1707
  3311   001482                     l1715:
  3312   001482  5010               	movf	___awmod@sign^0,w,c
  3313   001484  B4D8               	btfsc	status,2,c
  3314   001486  EF47  F00A         	goto	u1111
  3315   00148A  EF49  F00A         	goto	u1110
  3316   00148E                     u1111:
  3317   00148E  EF4D  F00A         	goto	l1719
  3318   001492                     u1110:
  3319   001492  6C0B               	negf	___awmod@dividend^0,c
  3320   001494  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  3321   001496  B0D8               	btfsc	status,0,c
  3322   001498  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  3323   00149A                     l1719:
  3324   00149A  C00B  F00B         	movff	___awmod@dividend,?___awmod
  3325   00149E  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
  3326   0014A2  0012               	return		;funcret
  3327   0014A4                     __end_of___awmod:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function ___awdiv *****************
  3331 ;; Defined at:
  3332 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  dividend        2   10[COMRAM] int 
  3335 ;;  divisor         2   12[COMRAM] int 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  quotient        2   16[COMRAM] int 
  3338 ;;  sign            1   15[COMRAM] unsigned char 
  3339 ;;  counter         1   14[COMRAM] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2   10[COMRAM] int 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3349 ;;      Params:         4       0       0       0       0       0       0
  3350 ;;      Locals:         4       0       0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0
  3352 ;;      Totals:         8       0       0       0       0       0       0
  3353 ;;Total ram usage:        8 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 1
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_dtoa
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text15
  3364   001330                     __ptext15:
  3365                           	callstack 0
  3366   001330                     ___awdiv:
  3367                           	callstack 25
  3368   001330  0E00               	movlw	0
  3369   001332  6E10               	movwf	___awdiv@sign^0,c
  3370   001334  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
  3371   001336  EFA1  F009         	goto	u1000
  3372   00133A  EF9F  F009         	goto	u1001
  3373   00133E                     u1001:
  3374   00133E  EFA7  F009         	goto	l1651
  3375   001342                     u1000:
  3376   001342  6C0D               	negf	___awdiv@divisor^0,c
  3377   001344  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
  3378   001346  B0D8               	btfsc	status,0,c
  3379   001348  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
  3380   00134A  0E01               	movlw	1
  3381   00134C  6E10               	movwf	___awdiv@sign^0,c
  3382   00134E                     l1651:
  3383   00134E  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
  3384   001350  EFAE  F009         	goto	u1010
  3385   001354  EFAC  F009         	goto	u1011
  3386   001358                     u1011:
  3387   001358  EFB4  F009         	goto	l1657
  3388   00135C                     u1010:
  3389   00135C  6C0B               	negf	___awdiv@dividend^0,c
  3390   00135E  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
  3391   001360  B0D8               	btfsc	status,0,c
  3392   001362  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
  3393   001364  0E01               	movlw	1
  3394   001366  1A10               	xorwf	___awdiv@sign^0,f,c
  3395   001368                     l1657:
  3396   001368  0E00               	movlw	0
  3397   00136A  6E12               	movwf	(___awdiv@quotient+1)^0,c
  3398   00136C  0E00               	movlw	0
  3399   00136E  6E11               	movwf	___awdiv@quotient^0,c
  3400   001370  500D               	movf	___awdiv@divisor^0,w,c
  3401   001372  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
  3402   001374  B4D8               	btfsc	status,2,c
  3403   001376  EFBF  F009         	goto	u1021
  3404   00137A  EFC1  F009         	goto	u1020
  3405   00137E                     u1021:
  3406   00137E  EFE9  F009         	goto	l1679
  3407   001382                     u1020:
  3408   001382  0E01               	movlw	1
  3409   001384  6E0F               	movwf	___awdiv@counter^0,c
  3410   001386  EFC9  F009         	goto	l1665
  3411   00138A                     l1663:
  3412   00138A  90D8               	bcf	status,0,c
  3413   00138C  360D               	rlcf	___awdiv@divisor^0,f,c
  3414   00138E  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
  3415   001390  2A0F               	incf	___awdiv@counter^0,f,c
  3416   001392                     l1665:
  3417   001392  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
  3418   001394  EFCE  F009         	goto	u1031
  3419   001398  EFD0  F009         	goto	u1030
  3420   00139C                     u1031:
  3421   00139C  EFC5  F009         	goto	l1663
  3422   0013A0                     u1030:
  3423   0013A0                     l1667:
  3424   0013A0  90D8               	bcf	status,0,c
  3425   0013A2  3611               	rlcf	___awdiv@quotient^0,f,c
  3426   0013A4  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
  3427   0013A6  500D               	movf	___awdiv@divisor^0,w,c
  3428   0013A8  5C0B               	subwf	___awdiv@dividend^0,w,c
  3429   0013AA  500E               	movf	(___awdiv@divisor+1)^0,w,c
  3430   0013AC  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
  3431   0013AE  A0D8               	btfss	status,0,c
  3432   0013B0  EFDC  F009         	goto	u1041
  3433   0013B4  EFDE  F009         	goto	u1040
  3434   0013B8                     u1041:
  3435   0013B8  EFE3  F009         	goto	l1675
  3436   0013BC                     u1040:
  3437   0013BC  500D               	movf	___awdiv@divisor^0,w,c
  3438   0013BE  5E0B               	subwf	___awdiv@dividend^0,f,c
  3439   0013C0  500E               	movf	(___awdiv@divisor+1)^0,w,c
  3440   0013C2  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
  3441   0013C4  8011               	bsf	___awdiv@quotient^0,0,c
  3442   0013C6                     l1675:
  3443   0013C6  90D8               	bcf	status,0,c
  3444   0013C8  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
  3445   0013CA  320D               	rrcf	___awdiv@divisor^0,f,c
  3446   0013CC  2E0F               	decfsz	___awdiv@counter^0,f,c
  3447   0013CE  EFD0  F009         	goto	l1667
  3448   0013D2                     l1679:
  3449   0013D2  5010               	movf	___awdiv@sign^0,w,c
  3450   0013D4  B4D8               	btfsc	status,2,c
  3451   0013D6  EFEF  F009         	goto	u1051
  3452   0013DA  EFF1  F009         	goto	u1050
  3453   0013DE                     u1051:
  3454   0013DE  EFF5  F009         	goto	l1683
  3455   0013E2                     u1050:
  3456   0013E2  6C11               	negf	___awdiv@quotient^0,c
  3457   0013E4  1E12               	comf	(___awdiv@quotient+1)^0,f,c
  3458   0013E6  B0D8               	btfsc	status,0,c
  3459   0013E8  2A12               	incf	(___awdiv@quotient+1)^0,f,c
  3460   0013EA                     l1683:
  3461   0013EA  C011  F00B         	movff	___awdiv@quotient,?___awdiv
  3462   0013EE  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
  3463   0013F2  0012               	return		;funcret
  3464   0013F4                     __end_of___awdiv:
  3465                           	callstack 0
  3466                           
  3467 ;; *************** function _initUART *****************
  3468 ;; Defined at:
  3469 ;;		line 141 in file "main.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3483 ;;      Params:         0       0       0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; Hardware stack levels required when called: 1
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text16
  3498   0017B2                     __ptext16:
  3499                           	callstack 0
  3500   0017B2                     _initUART:
  3501                           	callstack 29
  3502   0017B2                     
  3503                           ;main.c: 142:     TRISCbits.RC6 = 1;
  3504   0017B2  8C94               	bsf	148,6,c	;volatile
  3505                           
  3506                           ;main.c: 143:     TRISCbits.RC7 = 1;
  3507   0017B4  8E94               	bsf	148,7,c	;volatile
  3508   0017B6                     
  3509                           ;main.c: 144:     SPBRG = 34;
  3510   0017B6  0E22               	movlw	34
  3511   0017B8  6EAF               	movwf	175,c	;volatile
  3512                           
  3513                           ;main.c: 145:     SPBRGH = 0;
  3514   0017BA  0E00               	movlw	0
  3515   0017BC  6EB0               	movwf	176,c	;volatile
  3516   0017BE                     
  3517                           ;main.c: 146:     BAUDCONbits.BRG16 = 1;
  3518   0017BE  86B8               	bsf	184,3,c	;volatile
  3519   0017C0                     
  3520                           ;main.c: 147:     TXSTAbits.BRGH = 1;
  3521   0017C0  84AC               	bsf	172,2,c	;volatile
  3522   0017C2                     
  3523                           ;main.c: 148:     TXSTAbits.SYNC = 0;
  3524   0017C2  98AC               	bcf	172,4,c	;volatile
  3525   0017C4                     
  3526                           ;main.c: 149:     TXSTAbits.TXEN = 1;
  3527   0017C4  8AAC               	bsf	172,5,c	;volatile
  3528   0017C6                     
  3529                           ;main.c: 150:     RCSTAbits.SPEN = 1;
  3530   0017C6  8EAB               	bsf	171,7,c	;volatile
  3531   0017C8                     
  3532                           ;main.c: 151:     RCSTAbits.CREN = 1;
  3533   0017C8  88AB               	bsf	171,4,c	;volatile
  3534   0017CA  0012               	return		;funcret
  3535   0017CC                     __end_of_initUART:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _init *****************
  3539 ;; Defined at:
  3540 ;;		line 154 in file "main.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3554 ;;      Params:         0       0       0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used: 1
  3560 ;; Hardware stack levels required when called: 1
  3561 ;; This function calls:
  3562 ;;		Nothing
  3563 ;; This function is called by:
  3564 ;;		_main
  3565 ;; This function uses a non-reentrant model
  3566 ;;
  3567                           
  3568                           	psect	text17
  3569   00178C                     __ptext17:
  3570                           	callstack 0
  3571   00178C                     _init:
  3572                           	callstack 29
  3573   00178C                     
  3574                           ;main.c: 155:     ADCON1 = 0x0F;
  3575   00178C  0E0F               	movlw	15
  3576   00178E  6EC1               	movwf	193,c	;volatile
  3577                           
  3578                           ;main.c: 156:     TRISD = 0x00;
  3579   001790  0E00               	movlw	0
  3580   001792  6E95               	movwf	149,c	;volatile
  3581                           
  3582                           ;main.c: 157:     PORTD = 0x00;
  3583   001794  0E00               	movlw	0
  3584   001796  6E83               	movwf	131,c	;volatile
  3585   001798                     
  3586                           ;main.c: 159:     TRISB = 0xFF;
  3587   001798  6893               	setf	147,c	;volatile
  3588   00179A                     
  3589                           ;main.c: 160:     TRISCbits.RC2 = 0;
  3590   00179A  9494               	bcf	148,2,c	;volatile
  3591   00179C                     
  3592                           ;main.c: 161:     INTCON2bits.RBPU = 0;
  3593   00179C  9EF1               	bcf	241,7,c	;volatile
  3594   00179E                     
  3595                           ;main.c: 163:     RCONbits.IPEN = 0;
  3596   00179E  9ED0               	bcf	208,7,c	;volatile
  3597   0017A0                     
  3598                           ;main.c: 165:     INTCONbits.INT0IF = 0;
  3599   0017A0  92F2               	bcf	242,1,c	;volatile
  3600   0017A2                     
  3601                           ;main.c: 166:     INTCON3bits.INT1IF = 0;
  3602   0017A2  90F0               	bcf	240,0,c	;volatile
  3603   0017A4                     
  3604                           ;main.c: 169:     INTCONbits.RBIE = 1;
  3605   0017A4  86F2               	bsf	242,3,c	;volatile
  3606   0017A6                     
  3607                           ;main.c: 171:     INTCON2bits.INTEDG0 = 0;
  3608   0017A6  9CF1               	bcf	241,6,c	;volatile
  3609   0017A8                     
  3610                           ;main.c: 172:     INTCON2bits.INTEDG1 = 0;
  3611   0017A8  9AF1               	bcf	241,5,c	;volatile
  3612   0017AA                     
  3613                           ;main.c: 174:     INTCONbits.INT0IE = 1;
  3614   0017AA  88F2               	bsf	242,4,c	;volatile
  3615   0017AC                     
  3616                           ;main.c: 175:     INTCON3bits.INT1IE = 1;
  3617   0017AC  86F0               	bsf	240,3,c	;volatile
  3618   0017AE                     
  3619                           ;main.c: 176:     INTCONbits.GIE = 1;
  3620   0017AE  8EF2               	bsf	242,7,c	;volatile
  3621   0017B0  0012               	return		;funcret
  3622   0017B2                     __end_of_init:
  3623                           	callstack 0
  3624                           
  3625 ;; *************** function _interruption *****************
  3626 ;; Defined at:
  3627 ;;		line 35 in file "main.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  i               2    8[COMRAM] int 
  3632 ;;  i               2    6[COMRAM] int 
  3633 ;;  i               2    4[COMRAM] int 
  3634 ;;  i               2    2[COMRAM] int 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3644 ;;      Params:         0       0       0       0       0       0       0
  3645 ;;      Locals:         8       0       0       0       0       0       0
  3646 ;;      Temps:          2       0       0       0       0       0       0
  3647 ;;      Totals:        10       0       0       0       0       0       0
  3648 ;;Total ram usage:       10 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		Interrupt level 2
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	intcode
  3658   000008                     __pintcode:
  3659                           	callstack 0
  3660   000008                     _interruption:
  3661                           	callstack 22
  3662                           
  3663                           ;incstack = 0
  3664   000008  8265               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3665   00000A  ED2C  F006         	call	int_func,f	;refresh shadow registers
  3666                           
  3667                           	psect	intcode_body
  3668   000C58                     __pintcode_body:
  3669                           	callstack 22
  3670   000C58                     int_func:
  3671                           	callstack 22
  3672   000C58  0006               	pop		; remove dummy address from shadow register refresh
  3673   000C5A                     
  3674                           ;main.c: 37:     if (INTCONbits.RBIF == 0x01) {
  3675   000C5A  A0F2               	btfss	242,0,c	;volatile
  3676   000C5C  EF32  F006         	goto	i2u140_41
  3677   000C60  EF34  F006         	goto	i2u140_40
  3678   000C64                     i2u140_41:
  3679   000C64  EF3F  F007         	goto	i2l81
  3680   000C68                     i2u140_40:
  3681   000C68                     
  3682                           ;main.c: 38:         if (PORTBbits.RB5 == 0)
  3683   000C68  BA81               	btfsc	129,5,c	;volatile
  3684   000C6A  EF39  F006         	goto	i2u141_41
  3685   000C6E  EF3B  F006         	goto	i2u141_40
  3686   000C72                     i2u141_41:
  3687   000C72  EF7A  F006         	goto	i2l62
  3688   000C76                     i2u141_40:
  3689   000C76                     
  3690                           ;main.c: 39:         {;main.c: 40:             _delay((unsigned long)((50)*(16000000/400
      +                          0.0)));
  3691   000C76  0E02               	movlw	2
  3692   000C78  6E02               	movwf	(??_interruption+1)^0,c
  3693   000C7A  0E04               	movlw	4
  3694   000C7C  6E01               	movwf	??_interruption^0,c
  3695   000C7E  0EBA               	movlw	186
  3696   000C80                     i2u197_47:
  3697   000C80  2EE8               	decfsz	wreg,f,c
  3698   000C82  D7FE               	bra	i2u197_47
  3699   000C84  2E01               	decfsz	??_interruption^0,f,c
  3700   000C86  D7FC               	bra	i2u197_47
  3701   000C88  2E02               	decfsz	(??_interruption+1)^0,f,c
  3702   000C8A  D7FA               	bra	i2u197_47
  3703   000C8C  D000               	nop2	
  3704   000C8E                     
  3705                           ;main.c: 41:             if (PORTBbits.RB5 == 0) {
  3706   000C8E  BA81               	btfsc	129,5,c	;volatile
  3707   000C90  EF4C  F006         	goto	i2u142_41
  3708   000C94  EF4E  F006         	goto	i2u142_40
  3709   000C98                     i2u142_41:
  3710   000C98  EF3E  F007         	goto	i2l66
  3711   000C9C                     i2u142_40:
  3712   000C9C                     
  3713                           ;main.c: 42:                 pressedBTN1 = 1;
  3714   000C9C  0E00               	movlw	0
  3715   000C9E  0100               	movlb	0	; () banked
  3716   000CA0  6F97               	movwf	(_pressedBTN1+1)& (0+255),b
  3717   000CA2  0E01               	movlw	1
  3718   000CA4  6F96               	movwf	_pressedBTN1& (0+255),b
  3719   000CA6                     
  3720                           ; BSR set to: 0
  3721                           ;main.c: 43:                 PORTDbits.RD0 = 1;
  3722   000CA6  8083               	bsf	131,0,c	;volatile
  3723                           
  3724                           ;main.c: 44:                 for (int i = 0; i < 255; i++) {
  3725   000CA8  0E00               	movlw	0
  3726   000CAA  6E04               	movwf	(interruption@i+1)^0,c
  3727   000CAC  0E00               	movlw	0
  3728   000CAE  6E03               	movwf	interruption@i^0,c
  3729   000CB0                     i2l64:
  3730                           
  3731                           ;main.c: 45:                     PORTCbits.RC2 = 1;
  3732   000CB0  8482               	bsf	130,2,c	;volatile
  3733   000CB2                     
  3734                           ;main.c: 46:                     _delay((unsigned long)((500)*(16000000/4000000.0)));
  3735   000CB2  0E03               	movlw	3
  3736   000CB4  6E01               	movwf	??_interruption^0,c
  3737   000CB6  0E98               	movlw	152
  3738   000CB8                     i2u198_47:
  3739   000CB8  2EE8               	decfsz	wreg,f,c
  3740   000CBA  D7FE               	bra	i2u198_47
  3741   000CBC  2E01               	decfsz	??_interruption^0,f,c
  3742   000CBE  D7FC               	bra	i2u198_47
  3743   000CC0                     
  3744                           ;main.c: 47:                     PORTCbits.RC2 = 0;
  3745   000CC0  9482               	bcf	130,2,c	;volatile
  3746                           
  3747                           ;main.c: 48:                     _delay((unsigned long)((500)*(16000000/4000000.0)));
  3748   000CC2  0E03               	movlw	3
  3749   000CC4  6E01               	movwf	??_interruption^0,c
  3750   000CC6  0E98               	movlw	152
  3751   000CC8                     i2u199_47:
  3752   000CC8  2EE8               	decfsz	wreg,f,c
  3753   000CCA  D7FE               	bra	i2u199_47
  3754   000CCC  2E01               	decfsz	??_interruption^0,f,c
  3755   000CCE  D7FC               	bra	i2u199_47
  3756   000CD0                     
  3757                           ;main.c: 49:                 }
  3758   000CD0  4A03               	infsnz	interruption@i^0,f,c
  3759   000CD2  2A04               	incf	(interruption@i+1)^0,f,c
  3760   000CD4  BE04               	btfsc	(interruption@i+1)^0,7,c
  3761   000CD6  EF75  F006         	goto	i2u143_41
  3762   000CDA  5004               	movf	(interruption@i+1)^0,w,c
  3763   000CDC  E108               	bnz	i2u143_40
  3764   000CDE  2803               	incf	interruption@i^0,w,c
  3765   000CE0  A0D8               	btfss	status,0,c
  3766   000CE2  EF75  F006         	goto	i2u143_41
  3767   000CE6  EF77  F006         	goto	i2u143_40
  3768   000CEA                     i2u143_41:
  3769   000CEA  EF58  F006         	goto	i2l64
  3770   000CEE                     i2u143_40:
  3771   000CEE                     
  3772                           ;main.c: 50:                 PORTDbits.RD0 = 0;
  3773   000CEE  9083               	bcf	131,0,c	;volatile
  3774   000CF0  EF3E  F007         	goto	i2l66
  3775   000CF4                     i2l62:
  3776   000CF4  B881               	btfsc	129,4,c	;volatile
  3777   000CF6  EF7F  F006         	goto	i2u144_41
  3778   000CFA  EF81  F006         	goto	i2u144_40
  3779   000CFE                     i2u144_41:
  3780   000CFE  EFC0  F006         	goto	i2l67
  3781   000D02                     i2u144_40:
  3782   000D02                     
  3783                           ;main.c: 53:             _delay((unsigned long)((50)*(16000000/4000.0)));
  3784   000D02  0E02               	movlw	2
  3785   000D04  6E02               	movwf	(??_interruption+1)^0,c
  3786   000D06  0E04               	movlw	4
  3787   000D08  6E01               	movwf	??_interruption^0,c
  3788   000D0A  0EBA               	movlw	186
  3789   000D0C                     i2u200_47:
  3790   000D0C  2EE8               	decfsz	wreg,f,c
  3791   000D0E  D7FE               	bra	i2u200_47
  3792   000D10  2E01               	decfsz	??_interruption^0,f,c
  3793   000D12  D7FC               	bra	i2u200_47
  3794   000D14  2E02               	decfsz	(??_interruption+1)^0,f,c
  3795   000D16  D7FA               	bra	i2u200_47
  3796   000D18  D000               	nop2	
  3797   000D1A                     
  3798                           ;main.c: 54:             if (PORTBbits.RB4 == 0) {
  3799   000D1A  B881               	btfsc	129,4,c	;volatile
  3800   000D1C  EF92  F006         	goto	i2u145_41
  3801   000D20  EF94  F006         	goto	i2u145_40
  3802   000D24                     i2u145_41:
  3803   000D24  EF3E  F007         	goto	i2l66
  3804   000D28                     i2u145_40:
  3805   000D28                     
  3806                           ;main.c: 55:                 pressedBTN2 = 1;
  3807   000D28  0E00               	movlw	0
  3808   000D2A  0100               	movlb	0	; () banked
  3809   000D2C  6F95               	movwf	(_pressedBTN2+1)& (0+255),b
  3810   000D2E  0E01               	movlw	1
  3811   000D30  6F94               	movwf	_pressedBTN2& (0+255),b
  3812   000D32                     
  3813                           ; BSR set to: 0
  3814                           ;main.c: 56:                 PORTDbits.RD1 = 1;
  3815   000D32  8283               	bsf	131,1,c	;volatile
  3816                           
  3817                           ;main.c: 57:                 for (int i = 0; i < 255; i++) {
  3818   000D34  0E00               	movlw	0
  3819   000D36  6E06               	movwf	(interruption@i_687+1)^0,c
  3820   000D38  0E00               	movlw	0
  3821   000D3A  6E05               	movwf	interruption@i_687^0,c
  3822   000D3C                     i2l69:
  3823                           
  3824                           ;main.c: 58:                     PORTCbits.RC2 = 1;
  3825   000D3C  8482               	bsf	130,2,c	;volatile
  3826   000D3E                     
  3827                           ;main.c: 59:                     _delay((unsigned long)((400)*(16000000/4000000.0)));
  3828   000D3E  0EE4               	movlw	228
  3829   000D40                     i2u201_47:
  3830   000D40  D000               	nop2	
  3831   000D42  D000               	nop2	
  3832   000D44  2EE8               	decfsz	wreg,f,c
  3833   000D46  D7FC               	bra	i2u201_47
  3834   000D48  D000               	nop2	
  3835   000D4A  D000               	nop2	
  3836   000D4C                     
  3837                           ;main.c: 60:                     PORTCbits.RC2 = 0;
  3838   000D4C  9482               	bcf	130,2,c	;volatile
  3839                           
  3840                           ;main.c: 61:                     _delay((unsigned long)((400)*(16000000/4000000.0)));
  3841   000D4E  0EE4               	movlw	228
  3842   000D50                     i2u202_47:
  3843   000D50  D000               	nop2	
  3844   000D52  D000               	nop2	
  3845   000D54  2EE8               	decfsz	wreg,f,c
  3846   000D56  D7FC               	bra	i2u202_47
  3847   000D58  D000               	nop2	
  3848   000D5A  D000               	nop2	
  3849   000D5C                     
  3850                           ;main.c: 62:                 }
  3851   000D5C  4A05               	infsnz	interruption@i_687^0,f,c
  3852   000D5E  2A06               	incf	(interruption@i_687+1)^0,f,c
  3853   000D60  BE06               	btfsc	(interruption@i_687+1)^0,7,c
  3854   000D62  EFBB  F006         	goto	i2u146_41
  3855   000D66  5006               	movf	(interruption@i_687+1)^0,w,c
  3856   000D68  E108               	bnz	i2u146_40
  3857   000D6A  2805               	incf	interruption@i_687^0,w,c
  3858   000D6C  A0D8               	btfss	status,0,c
  3859   000D6E  EFBB  F006         	goto	i2u146_41
  3860   000D72  EFBD  F006         	goto	i2u146_40
  3861   000D76                     i2u146_41:
  3862   000D76  EF9E  F006         	goto	i2l69
  3863   000D7A                     i2u146_40:
  3864   000D7A                     
  3865                           ;main.c: 63:                 PORTDbits.RD1 = 0;
  3866   000D7A  9283               	bcf	131,1,c	;volatile
  3867   000D7C  EF3E  F007         	goto	i2l66
  3868   000D80                     i2l67:
  3869   000D80  BE81               	btfsc	129,7,c	;volatile
  3870   000D82  EFC5  F006         	goto	i2u147_41
  3871   000D86  EFC7  F006         	goto	i2u147_40
  3872   000D8A                     i2u147_41:
  3873   000D8A  EF00  F007         	goto	i2l72
  3874   000D8E                     i2u147_40:
  3875   000D8E                     
  3876                           ;main.c: 66:             _delay((unsigned long)((50)*(16000000/4000.0)));
  3877   000D8E  0E02               	movlw	2
  3878   000D90  6E02               	movwf	(??_interruption+1)^0,c
  3879   000D92  0E04               	movlw	4
  3880   000D94  6E01               	movwf	??_interruption^0,c
  3881   000D96  0EBA               	movlw	186
  3882   000D98                     i2u203_47:
  3883   000D98  2EE8               	decfsz	wreg,f,c
  3884   000D9A  D7FE               	bra	i2u203_47
  3885   000D9C  2E01               	decfsz	??_interruption^0,f,c
  3886   000D9E  D7FC               	bra	i2u203_47
  3887   000DA0  2E02               	decfsz	(??_interruption+1)^0,f,c
  3888   000DA2  D7FA               	bra	i2u203_47
  3889   000DA4  D000               	nop2	
  3890   000DA6                     
  3891                           ;main.c: 67:             if (PORTBbits.RB7 == 0) {
  3892   000DA6  BE81               	btfsc	129,7,c	;volatile
  3893   000DA8  EFD8  F006         	goto	i2u148_41
  3894   000DAC  EFDA  F006         	goto	i2u148_40
  3895   000DB0                     i2u148_41:
  3896   000DB0  EF3E  F007         	goto	i2l66
  3897   000DB4                     i2u148_40:
  3898   000DB4                     
  3899                           ;main.c: 68:                 pressedBTN3 = 1;
  3900   000DB4  0E00               	movlw	0
  3901   000DB6  0100               	movlb	0	; () banked
  3902   000DB8  6F93               	movwf	(_pressedBTN3+1)& (0+255),b
  3903   000DBA  0E01               	movlw	1
  3904   000DBC  6F92               	movwf	_pressedBTN3& (0+255),b
  3905   000DBE                     
  3906                           ; BSR set to: 0
  3907                           ;main.c: 69:                 PORTDbits.RD2 = 1;
  3908   000DBE  8483               	bsf	131,2,c	;volatile
  3909                           
  3910                           ;main.c: 70:                 for (int i = 0; i < 255; i++) {
  3911   000DC0  0E00               	movlw	0
  3912   000DC2  6E08               	movwf	(interruption@i_688+1)^0,c
  3913   000DC4  0E00               	movlw	0
  3914   000DC6  6E07               	movwf	interruption@i_688^0,c
  3915   000DC8                     i2l74:
  3916                           
  3917                           ;main.c: 71:                     PORTCbits.RC2 = 1;
  3918   000DC8  8482               	bsf	130,2,c	;volatile
  3919   000DCA                     
  3920                           ;main.c: 72:                     _delay((unsigned long)((300)*(16000000/4000000.0)));
  3921   000DCA  0EF0               	movlw	240
  3922   000DCC                     i2u204_47:
  3923   000DCC  D000               	nop2	
  3924   000DCE  2EE8               	decfsz	wreg,f,c
  3925   000DD0  D7FD               	bra	i2u204_47
  3926   000DD2                     
  3927                           ;main.c: 73:                     PORTCbits.RC2 = 0;
  3928   000DD2  9482               	bcf	130,2,c	;volatile
  3929                           
  3930                           ;main.c: 74:                     _delay((unsigned long)((300)*(16000000/4000000.0)));
  3931   000DD4  0EF0               	movlw	240
  3932   000DD6                     i2u205_47:
  3933   000DD6  D000               	nop2	
  3934   000DD8  2EE8               	decfsz	wreg,f,c
  3935   000DDA  D7FD               	bra	i2u205_47
  3936   000DDC                     
  3937                           ;main.c: 75:                 }
  3938   000DDC  4A07               	infsnz	interruption@i_688^0,f,c
  3939   000DDE  2A08               	incf	(interruption@i_688+1)^0,f,c
  3940   000DE0  BE08               	btfsc	(interruption@i_688+1)^0,7,c
  3941   000DE2  EFFB  F006         	goto	i2u149_41
  3942   000DE6  5008               	movf	(interruption@i_688+1)^0,w,c
  3943   000DE8  E108               	bnz	i2u149_40
  3944   000DEA  2807               	incf	interruption@i_688^0,w,c
  3945   000DEC  A0D8               	btfss	status,0,c
  3946   000DEE  EFFB  F006         	goto	i2u149_41
  3947   000DF2  EFFD  F006         	goto	i2u149_40
  3948   000DF6                     i2u149_41:
  3949   000DF6  EFE4  F006         	goto	i2l74
  3950   000DFA                     i2u149_40:
  3951   000DFA                     
  3952                           ;main.c: 76:                 PORTDbits.RD2 = 0;
  3953   000DFA  9483               	bcf	131,2,c	;volatile
  3954   000DFC  EF3E  F007         	goto	i2l66
  3955   000E00                     i2l72:
  3956   000E00  BC81               	btfsc	129,6,c	;volatile
  3957   000E02  EF05  F007         	goto	i2u150_41
  3958   000E06  EF07  F007         	goto	i2u150_40
  3959   000E0A                     i2u150_41:
  3960   000E0A  EF3E  F007         	goto	i2l66
  3961   000E0E                     i2u150_40:
  3962   000E0E                     
  3963                           ;main.c: 79:             _delay((unsigned long)((50)*(16000000/4000.0)));
  3964   000E0E  0E02               	movlw	2
  3965   000E10  6E02               	movwf	(??_interruption+1)^0,c
  3966   000E12  0E04               	movlw	4
  3967   000E14  6E01               	movwf	??_interruption^0,c
  3968   000E16  0EBA               	movlw	186
  3969   000E18                     i2u206_47:
  3970   000E18  2EE8               	decfsz	wreg,f,c
  3971   000E1A  D7FE               	bra	i2u206_47
  3972   000E1C  2E01               	decfsz	??_interruption^0,f,c
  3973   000E1E  D7FC               	bra	i2u206_47
  3974   000E20  2E02               	decfsz	(??_interruption+1)^0,f,c
  3975   000E22  D7FA               	bra	i2u206_47
  3976   000E24  D000               	nop2	
  3977   000E26                     
  3978                           ;main.c: 80:             if (PORTBbits.RB6 == 0) {
  3979   000E26  BC81               	btfsc	129,6,c	;volatile
  3980   000E28  EF18  F007         	goto	i2u151_41
  3981   000E2C  EF1A  F007         	goto	i2u151_40
  3982   000E30                     i2u151_41:
  3983   000E30  EF3E  F007         	goto	i2l66
  3984   000E34                     i2u151_40:
  3985   000E34                     
  3986                           ;main.c: 81:                 pressedBTN4 = 1;
  3987   000E34  0E00               	movlw	0
  3988   000E36  0100               	movlb	0	; () banked
  3989   000E38  6F91               	movwf	(_pressedBTN4+1)& (0+255),b
  3990   000E3A  0E01               	movlw	1
  3991   000E3C  6F90               	movwf	_pressedBTN4& (0+255),b
  3992   000E3E                     
  3993                           ; BSR set to: 0
  3994                           ;main.c: 82:                 PORTDbits.RD3 = 1;
  3995   000E3E  8683               	bsf	131,3,c	;volatile
  3996                           
  3997                           ;main.c: 83:                 for (int i = 0; i < 255; i++) {
  3998   000E40  0E00               	movlw	0
  3999   000E42  6E0A               	movwf	(interruption@i_689+1)^0,c
  4000   000E44  0E00               	movlw	0
  4001   000E46  6E09               	movwf	interruption@i_689^0,c
  4002   000E48                     i2l79:
  4003                           
  4004                           ;main.c: 84:                     PORTCbits.RC2 = 1;
  4005   000E48  8482               	bsf	130,2,c	;volatile
  4006   000E4A                     
  4007                           ;main.c: 85:                     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4008   000E4A  0EA0               	movlw	160
  4009   000E4C                     i2u207_47:
  4010   000E4C  D000               	nop2	
  4011   000E4E  2EE8               	decfsz	wreg,f,c
  4012   000E50  D7FD               	bra	i2u207_47
  4013   000E52                     
  4014                           ;main.c: 86:                     PORTCbits.RC2 = 0;
  4015   000E52  9482               	bcf	130,2,c	;volatile
  4016                           
  4017                           ;main.c: 87:                     _delay((unsigned long)((200)*(16000000/4000000.0)));
  4018   000E54  0EA0               	movlw	160
  4019   000E56                     i2u208_47:
  4020   000E56  D000               	nop2	
  4021   000E58  2EE8               	decfsz	wreg,f,c
  4022   000E5A  D7FD               	bra	i2u208_47
  4023   000E5C                     
  4024                           ;main.c: 88:                 }
  4025   000E5C  4A09               	infsnz	interruption@i_689^0,f,c
  4026   000E5E  2A0A               	incf	(interruption@i_689+1)^0,f,c
  4027   000E60  BE0A               	btfsc	(interruption@i_689+1)^0,7,c
  4028   000E62  EF3B  F007         	goto	i2u152_41
  4029   000E66  500A               	movf	(interruption@i_689+1)^0,w,c
  4030   000E68  E108               	bnz	i2u152_40
  4031   000E6A  2809               	incf	interruption@i_689^0,w,c
  4032   000E6C  A0D8               	btfss	status,0,c
  4033   000E6E  EF3B  F007         	goto	i2u152_41
  4034   000E72  EF3D  F007         	goto	i2u152_40
  4035   000E76                     i2u152_41:
  4036   000E76  EF24  F007         	goto	i2l79
  4037   000E7A                     i2u152_40:
  4038   000E7A                     
  4039                           ;main.c: 89:                 PORTDbits.RD3 = 0;
  4040   000E7A  9683               	bcf	131,3,c	;volatile
  4041   000E7C                     i2l66:
  4042                           
  4043                           ;main.c: 92:         INTCONbits.RBIF = 0;
  4044   000E7C  90F2               	bcf	242,0,c	;volatile
  4045   000E7E                     i2l81:
  4046   000E7E  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4047   000E80  0011               	retfie		f
  4048   000E82                     __end_of_interruption:
  4049                           	callstack 0
  4050                           
  4051                           	psect	rparam
  4052   000000                     
  4053                           	psect	temp
  4054   000065                     btemp:
  4055                           	callstack 0
  4056   000065                     	ds	1
  4057   000000                     int$flags	set	btemp
  4058   000000                     wtemp8	set	btemp+1
  4059   000000                     ttemp5	set	btemp+1
  4060   000000                     ttemp6	set	btemp+4
  4061   000000                     ttemp7	set	btemp+8
  4062                           
  4063                           	psect	idloc
  4064                           
  4065                           ;Config register IDLOC0 @ 0x200000
  4066                           ;	unspecified, using default values
  4067   200000                     	org	2097152
  4068   200000  FF                 	db	255
  4069                           
  4070                           ;Config register IDLOC1 @ 0x200001
  4071                           ;	unspecified, using default values
  4072   200001                     	org	2097153
  4073   200001  FF                 	db	255
  4074                           
  4075                           ;Config register IDLOC2 @ 0x200002
  4076                           ;	unspecified, using default values
  4077   200002                     	org	2097154
  4078   200002  FF                 	db	255
  4079                           
  4080                           ;Config register IDLOC3 @ 0x200003
  4081                           ;	unspecified, using default values
  4082   200003                     	org	2097155
  4083   200003  FF                 	db	255
  4084                           
  4085                           ;Config register IDLOC4 @ 0x200004
  4086                           ;	unspecified, using default values
  4087   200004                     	org	2097156
  4088   200004  FF                 	db	255
  4089                           
  4090                           ;Config register IDLOC5 @ 0x200005
  4091                           ;	unspecified, using default values
  4092   200005                     	org	2097157
  4093   200005  FF                 	db	255
  4094                           
  4095                           ;Config register IDLOC6 @ 0x200006
  4096                           ;	unspecified, using default values
  4097   200006                     	org	2097158
  4098   200006  FF                 	db	255
  4099                           
  4100                           ;Config register IDLOC7 @ 0x200007
  4101                           ;	unspecified, using default values
  4102   200007                     	org	2097159
  4103   200007  FF                 	db	255
  4104                           
  4105                           	psect	config
  4106                           
  4107                           ; Padding undefined space
  4108   300000                     	org	3145728
  4109   300000  FF                 	db	255
  4110                           
  4111                           ;Config register CONFIG1H @ 0x300001
  4112                           ;	Oscillator Selection bits
  4113                           ;	OSC = XT, XT oscillator
  4114                           ;	Fail-Safe Clock Monitor Enable bit
  4115                           ;	FCMEN = 0x0, unprogrammed default
  4116                           ;	Internal/External Oscillator Switchover bit
  4117                           ;	IESO = 0x0, unprogrammed default
  4118   300001                     	org	3145729
  4119   300001  01                 	db	1
  4120                           
  4121                           ;Config register CONFIG2L @ 0x300002
  4122                           ;	Power-up Timer Enable bit
  4123                           ;	PWRT = 0x1, unprogrammed default
  4124                           ;	Brown-out Reset Enable bits
  4125                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4126                           ;	Brown Out Reset Voltage bits
  4127                           ;	BORV = 0x3, unprogrammed default
  4128   300002                     	org	3145730
  4129   300002  19                 	db	25
  4130                           
  4131                           ;Config register CONFIG2H @ 0x300003
  4132                           ;	Watchdog Timer Enable bit
  4133                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4134                           ;	Watchdog Timer Postscale Select bits
  4135                           ;	WDTPS = 0xF, unprogrammed default
  4136   300003                     	org	3145731
  4137   300003  1E                 	db	30
  4138                           
  4139                           ; Padding undefined space
  4140   300004                     	org	3145732
  4141   300004  FF                 	db	255
  4142                           
  4143                           ;Config register CONFIG3H @ 0x300005
  4144                           ;	unspecified, using default values
  4145                           ;	CCP2 MUX bit
  4146                           ;	CCP2MX = 0x1, unprogrammed default
  4147                           ;	PORTB A/D Enable bit
  4148                           ;	PBADEN = 0x1, unprogrammed default
  4149                           ;	Low-Power Timer1 Oscillator Enable bit
  4150                           ;	LPT1OSC = 0x0, unprogrammed default
  4151                           ;	MCLR Pin Enable bit
  4152                           ;	MCLRE = 0x1, unprogrammed default
  4153   300005                     	org	3145733
  4154   300005  83                 	db	131
  4155                           
  4156                           ;Config register CONFIG4L @ 0x300006
  4157                           ;	unspecified, using default values
  4158                           ;	Stack Full/Underflow Reset Enable bit
  4159                           ;	STVREN = 0x1, unprogrammed default
  4160                           ;	Single-Supply ICSP Enable bit
  4161                           ;	LVP = 0x1, unprogrammed default
  4162                           ;	Extended Instruction Set Enable bit
  4163                           ;	XINST = 0x0, unprogrammed default
  4164                           ;	Background Debugger Enable bit
  4165                           ;	DEBUG = 0x1, unprogrammed default
  4166   300006                     	org	3145734
  4167   300006  85                 	db	133
  4168                           
  4169                           ; Padding undefined space
  4170   300007                     	org	3145735
  4171   300007  FF                 	db	255
  4172                           
  4173                           ;Config register CONFIG5L @ 0x300008
  4174                           ;	unspecified, using default values
  4175                           ;	Code Protection bit
  4176                           ;	CP0 = 0x1, unprogrammed default
  4177                           ;	Code Protection bit
  4178                           ;	CP1 = 0x1, unprogrammed default
  4179                           ;	Code Protection bit
  4180                           ;	CP2 = 0x1, unprogrammed default
  4181                           ;	Code Protection bit
  4182                           ;	CP3 = 0x1, unprogrammed default
  4183   300008                     	org	3145736
  4184   300008  0F                 	db	15
  4185                           
  4186                           ;Config register CONFIG5H @ 0x300009
  4187                           ;	unspecified, using default values
  4188                           ;	Boot Block Code Protection bit
  4189                           ;	CPB = 0x1, unprogrammed default
  4190                           ;	Data EEPROM Code Protection bit
  4191                           ;	CPD = 0x1, unprogrammed default
  4192   300009                     	org	3145737
  4193   300009  C0                 	db	192
  4194                           
  4195                           ;Config register CONFIG6L @ 0x30000A
  4196                           ;	unspecified, using default values
  4197                           ;	Write Protection bit
  4198                           ;	WRT0 = 0x1, unprogrammed default
  4199                           ;	Write Protection bit
  4200                           ;	WRT1 = 0x1, unprogrammed default
  4201                           ;	Write Protection bit
  4202                           ;	WRT2 = 0x1, unprogrammed default
  4203                           ;	Write Protection bit
  4204                           ;	WRT3 = 0x1, unprogrammed default
  4205   30000A                     	org	3145738
  4206   30000A  0F                 	db	15
  4207                           
  4208                           ;Config register CONFIG6H @ 0x30000B
  4209                           ;	unspecified, using default values
  4210                           ;	Configuration Register Write Protection bit
  4211                           ;	WRTC = 0x1, unprogrammed default
  4212                           ;	Boot Block Write Protection bit
  4213                           ;	WRTB = 0x1, unprogrammed default
  4214                           ;	Data EEPROM Write Protection bit
  4215                           ;	WRTD = 0x1, unprogrammed default
  4216   30000B                     	org	3145739
  4217   30000B  E0                 	db	224
  4218                           
  4219                           ;Config register CONFIG7L @ 0x30000C
  4220                           ;	unspecified, using default values
  4221                           ;	Table Read Protection bit
  4222                           ;	EBTR0 = 0x1, unprogrammed default
  4223                           ;	Table Read Protection bit
  4224                           ;	EBTR1 = 0x1, unprogrammed default
  4225                           ;	Table Read Protection bit
  4226                           ;	EBTR2 = 0x1, unprogrammed default
  4227                           ;	Table Read Protection bit
  4228                           ;	EBTR3 = 0x1, unprogrammed default
  4229   30000C                     	org	3145740
  4230   30000C  0F                 	db	15
  4231                           
  4232                           ;Config register CONFIG7H @ 0x30000D
  4233                           ;	unspecified, using default values
  4234                           ;	Boot Block Table Read Protection bit
  4235                           ;	EBTRB = 0x1, unprogrammed default
  4236   30000D                     	org	3145741
  4237   30000D  40                 	db	64
  4238                           tosu	equ	0xFFF
  4239                           tosh	equ	0xFFE
  4240                           tosl	equ	0xFFD
  4241                           stkptr	equ	0xFFC
  4242                           pclatu	equ	0xFFB
  4243                           pclath	equ	0xFFA
  4244                           pcl	equ	0xFF9
  4245                           tblptru	equ	0xFF8
  4246                           tblptrh	equ	0xFF7
  4247                           tblptrl	equ	0xFF6
  4248                           tablat	equ	0xFF5
  4249                           prodh	equ	0xFF4
  4250                           prodl	equ	0xFF3
  4251                           indf0	equ	0xFEF
  4252                           postinc0	equ	0xFEE
  4253                           postdec0	equ	0xFED
  4254                           preinc0	equ	0xFEC
  4255                           plusw0	equ	0xFEB
  4256                           fsr0h	equ	0xFEA
  4257                           fsr0l	equ	0xFE9
  4258                           wreg	equ	0xFE8
  4259                           indf1	equ	0xFE7
  4260                           postinc1	equ	0xFE6
  4261                           postdec1	equ	0xFE5
  4262                           preinc1	equ	0xFE4
  4263                           plusw1	equ	0xFE3
  4264                           fsr1h	equ	0xFE2
  4265                           fsr1l	equ	0xFE1
  4266                           bsr	equ	0xFE0
  4267                           indf2	equ	0xFDF
  4268                           postinc2	equ	0xFDE
  4269                           postdec2	equ	0xFDD
  4270                           preinc2	equ	0xFDC
  4271                           plusw2	equ	0xFDB
  4272                           fsr2h	equ	0xFDA
  4273                           fsr2l	equ	0xFD9
  4274                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     83     100
    BANK0           128     46     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1243$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1243$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1283$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sp__generate_random_sequence_easy	PTR int  size(2) Largest target is 8
		 -> generate_random_sequence_easy@array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _rand->___lmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod

Critical Paths under _interruption in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruption in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0    8051
                                             79 COMRAM     4     4      0
                                              0 BANK0     46    46      0
                               _init
                           _initUART
                             _printf
                               _rand
                   _reproduz_vitoria
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _setLED                                               4     3      1     262
                                             10 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _reproduz_vitoria                                     9     9      0     184
                                             10 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _rand                                                 6     4      2     370
                                             22 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                             10 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5696
                                             73 COMRAM     6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5262
                                             65 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    4912
                                             51 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    3670
                                             38 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2043
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     953
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     704
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             16 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _interruption                                        10    10      0     184
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _initUART
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _rand
     ___lmul
   _reproduz_vitoria
   _setLED

 _interruption (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2E      66       5       79.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     53      64       1       79.4%
BITBIGSFRhlhhhh     1F      0       0      17        0.0%
BITBIGSFRlhhh       15      0       0      22        0.0%
BITBIGSFRlhhl        F      0       0      23        0.0%
BITBIGSFRhlhhhl      E      0       0      18        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRhlhhl       8      0       0      19        0.0%
BITBIGSFRhlhl        7      0       0      20        0.0%
BITBIGSFRhll         1      0       0      21        0.0%
BITBIGSFRll          1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      25        0.0%
DATA                 0      0      CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 06 23:45:19 2023

             reproduz_vitoria@i_765 000E               reproduz_vitoria@i_766 0010  
             reproduz_vitoria@i_767 0012                                  l53 17D2  
                                l56 17E0                                  l90 151C  
                                l85 14AA                                  l87 14B8  
                                l88 14C6                                  l89 14D4  
                      ___awdiv@sign 0010                                 l102 17CA  
                               l200 166C                                 l120 10F6  
                               l105 17B0                                 l121 1102  
                               l122 1140                                 l123 1142  
                               l115 1020                                 l116 105E  
                               l117 106A                                 l118 10AC  
                               l119 10B8                                 l137 07D8  
                               l432 14A2                                 l419 13F2  
                               l199 165C                                 l900 0F16  
                               l911 1014                                 l931 173E  
                               l924 16BA                                 l918 1264  
                               l943 132E                                 l951 16FE  
                               l928 1736                                 l866 178A  
                               l892 1596                                 l959 1602  
                               l888 1540                                 l897 0EC8  
                               l899 0ED0                                 u940 17E0  
                               u941 17DC                                 u950 1278  
                               u951 1274                                 u960 128A  
                               u961 1286                                 u970 12B2  
                               u971 12AE                                 u980 12E8  
                               u981 12E4                                 u990 16FE  
                               u991 16FA                                 _abs 1700  
                               _pad 151E                        ___awmod@sign 0010  
                               wreg 0FE8                                ?_abs 0011  
                              l2111 0782                                l2201 0AA8  
                              l2121 07E0                                l2113 07A0  
                              l2105 0726                                l2211 0B08  
                              l2203 0ABA                                l2131 084E  
                              l2123 07F2                                l2115 07B6  
                              l2107 074C                                l2051 0624  
                              l2221 0B68                                l2213 0B46  
                              l2205 0AC2                                l2133 0868  
                              l2125 080A                                l2141 0898  
                              l2117 07BC                                l2109 076A  
                              l2061 064E                                l2053 062C  
                              l2231 0BA2                                l2223 0B78  
                              l2215 0B4E                                l2151 0906  
                              l2143 08AA                                l2135 0884  
                              l2119 07D8                                l2071 067A  
                              l2063 0656                                l2055 0638  
                              l2241 0BE8                                l2225 0B84  
                              l2209 0AE2                                l2153 0920  
                              l2145 08C2                                l2161 0948  
                              l2137 0890                                l2129 082A  
                              l2073 0682                                l2065 065E  
                              l2057 0644                                l2251 0C3C  
                              l2235 0BBA                                l2219 0B56  
                              l2171 09B6                                l2163 095A  
                              l2091 06E4                                l2227 0B8C  
                              l2075 0682                                l2067 066A  
                              l2059 0644                                l1701 143A  
                              l1621 1266                                l2245 0C08  
                              l2237 0BCE                                l2173 09D0  
                              l2165 0972                                l2181 09F8  
                              l2157 0940                                l2149 08E2  
                              l2093 06E8                                l2085 06B0  
                              l2077 0696                                l2069 0672  
                              l1711 1476                                l1703 1442  
                              l1631 12E8                                l1623 1278  
                              l2247 0C16                                l2255 0C44  
                              l2239 0BE0                                l2191 0A66  
                              l2183 0A0A                                l2095 0704  
                              l2087 06BE                                l2079 06A8  
                              l1713 147C                                l1705 144A  
                              l1625 128A                                l1641 16DE  
                              l1801 1196                                l2249 0C22  
                              l2257 0C50                                l2193 0A80  
                              l2185 0A22                                l2177 09F0  
                              l2169 0992                                l2089 06CA  
                              l2097 070C                                l1651 134E  
                              l1643 1330                                l1707 1458  
                              l1715 1482                                l1619 17CE  
                              l1627 1294                                l1635 16BC  
                              l1731 1560                                l1723 151E  
                              l1811 122A                                l1803 11B2  
                              l2283 14F6                                l2099 071E  
                              l1661 1382                                l1653 135C  
                              l1645 1334                                l1717 1492  
                              l1709 146E                                l1629 12B2  
                              l1637 16C8                                l1733 1564  
                              l1725 152C                                l1741 0E82  
                              l1805 11CE                                l1821 1604  
                              l1901 1018                                l2197 0AA0  
                              l2189 0A42                                l1671 13BC  
                              l1663 138A                                l1655 1364  
                              l1647 1342                                l1719 149A  
                              l1639 16DA                                l1735 1582  
                              l1727 1538                                l1751 0ED8  
                              l1743 0E96                                l1807 1212  
                              l1815 123C                                l1831 166E  
                              l1823 1614                                l1911 1040  
                              l1681 13E2                                l1673 13C4  
                              l1665 1392                                l1657 1368  
                              l1649 134A                                l1737 1700  
                              l1729 154C                                l1761 0F12  
                              l1753 0EE8                                l1745 0EA6  
                              l1833 167A                                l1825 1622  
                              l1921 107C                                l1913 1062  
                              l1841 14A6                                l1851 17B2  
                              l1683 13EA                                l1675 13C6  
                              l1667 13A0                                l1659 1370  
                              l1691 1406                                l1739 171A  
                              l1771 0F66                                l1763 0F1E  
                              l1755 0EEE                                l1747 0EAE  
                              l1835 1696                                l1827 1632  
                              l1931 10BA                                l1923 108E  
                              l1907 1022                                l1861 17C4  
                              l1853 17B6                                l1677 13CC  
                              l1669 13A6                                l1693 140E  
                              l1781 0FCE                                l1773 0F6C  
                              l1765 0F28                                l1757 0EFE  
                              l1749 0EBC                                l1837 16B2  
                              l1829 163C                                l1933 10C8  
                              l1925 10B0                                l1909 1030  
                              l1845 14E2                                l1871 179A  
                              l1863 17C6                                l1855 17BE  
                              l1679 13D2                                l1695 1412  
                              l1687 13F4                                l1783 0FDE  
                              l1767 0F2E                                l1775 0F88  
                              l1759 0F0A                                l1791 1144  
                              l1951 176E                                l1943 1104  
                              l1935 10D8                                l1919 106C  
                              l1881 17A4                                l1873 179C  
                              l1865 17C8                                l1857 17C0  
                              l1697 1420                                l1689 13F8  
                              l1785 0FE4                                l1777 0FA2  
                              l1769 0F60                                l1793 1168  
                              l1945 1112                                l1937 10FA  
                              l1891 17AE                                l1883 17A6  
                              l1875 179E                                l1867 178C  
                              l1859 17C2                                l1699 1428  
                              l1787 0FF4                                l1779 0FB4  
                              l1795 1176                                l1947 1122  
                              l1885 17A8                                l1877 17A0  
                              l1869 1798                                l1797 1182  
                              l1949 1766                                l1893 1598  
                              ?_pad 001C                                l1887 17AA  
                              l1879 17A2                                l1799 1186  
                              l1895 15D4                                l1889 17AC  
                              l1899 1016                                STR_1 0601  
                              STR_2 061E                                STR_3 061E  
                              STR_4 060E                                STR_5 0616  
                              u1000 1342                                u1001 133E  
                              u1010 135C                                u1011 1358  
                              u1020 1382                                u1100 146E  
                              u1021 137E                                u1101 146A  
                              u1030 13A0                                u1110 1492  
                              u1031 139C                                u1111 148E  
                              u1040 13BC                                u1120 152C  
                              u1200 0EFE                                u1041 13B8  
                              u1121 1528                                u1201 0EFA  
                              u1050 13E2                                u1130 1582  
                              u1210 0FA2                                u1051 13DE  
                              u1131 157E                                u1211 0F9E  
                              u1060 1406                                u1140 171A  
                              u1220 0FB4                                u1300 16B2  
                              u1061 1402                                u1141 1716  
                              u1221 0FB0                                u1301 16AE  
                              u1070 1420                                u1230 0FCE  
                              u1150 0E92                                u1071 141C  
                              u1231 0FCA                                u1151 0E8C  
                              u1080 143A                                u1240 0FDE  
                              u1160 0E94                                u1081 1436  
                              u1241 0FDA                                u1090 1458  
                              u1170 0EA6                                u1250 1168  
                              u1091 1454                                u1171 0EA2  
                              u1251 1164                                u1315 14B2  
                              u1180 0EBC                                u1260 11B2  
                              u1316 14B4                                u1181 0EB8  
                              u1261 11AE                                u1325 14C0  
                              u1190 0EE8                                u1270 11CE  
                              u1350 15F4                                u1326 14C2  
                              u1191 0EE4                                u1271 11CA  
                              u1335 14CE                                u1280 1622  
                              u1360 105E                                u1336 14D0  
                              u1600 071E                                u1281 161E  
                              u1361 105A                                u1345 14DC  
                              u1601 071A                                u1290 165C  
                              u1370 10AC                                u1346 14DE  
                              u1610 07D8                                u1291 1658  
                              u1355 15EA                                u1371 10A8  
                              u1611 07D4                                u1380 10F6  
                              u1700 095A                                u1620 07F2  
                              u1381 10F2                                u1701 0956  
                              u1621 07EE                                u1390 1140  
                              u1710 098E                                u1630 0826  
                              u1391 113C                                u1711 098A  
                              u1631 0822                                u1551 063E  
                              u1800 0B46                                u1720 09B6  
                              u1640 084E                                u1801 0B42  
                              u1721 09B2                                u1641 084A  
                              u1561 0664                                u1810 0B68  
                              u1730 09EC                                u1650 0884  
                              u1570 0696                                u1811 0B64  
                              u1731 09E8                                u1651 0880  
                              u1571 0692                                u1820 0B9E  
                              u1740 0A0A                                u1660 08AA  
                              u1580 06A8                                u1821 0B9A  
                              u1741 0A06                                u1661 08A6  
                              u1581 06A4                                u1830 0BB6  
                              u1750 0A3E                                u1670 08DE  
                              u1590 0704                                u1831 0BB2  
                              u1751 0A3A                                u1671 08DA  
                              u1591 0700                                u1840 0BCE  
                              u1760 0A66                                u1680 0906  
                              u1841 0BCA                                u1761 0A62  
                              u1681 0902                                u1850 0BE0  
                              u1770 0A9C                                u1690 093C  
                              u1907 1038                                u1851 0BDC  
                              u1771 0A98                                u1691 0938  
                              u1860 0C04                                u1780 0ABA  
                              u1917 1072                                u1861 0C00  
                              u1781 0AB6                                u1790 0ADE  
                              u1927 1084                                u1791 0ADA  
                              u1937 10C0                                u1947 10D0  
                              u1957 1106                                u1877 0774  
                              u1967 1116                                u1887 07AA  
                              u1897 1028                                i2l70 0D7A  
                              i2l62 0CF4                                i2l80 0E7A  
                              i2l72 0E00                                i2l64 0CB0  
                              i2l65 0CEE                                i2l81 0E7E  
                              i2l74 0DC8                                i2l66 0E7C  
                              i2l75 0DFA                                i2l67 0D80  
                              i2l69 0D3C                                i2l79 0E48  
                       main@estagio 00E4                                abs@a 0011  
                              _dbuf 0098                                _main 0624  
                              _dtoa 0E82                                _init 178C  
                              _rand 1598                                _seed 0061  
                              _prec 005E                                pad@i 0023  
                              pad@p 0020                                fsr1h 0FE2  
                              fsr2h 0FDA                                indf2 0FDF  
                              fsr1l 0FE1                                pad@w 0025  
                              fsr2l 0FD9                                btemp 0065  
                              start 000E                        ___param_bank 0000  
                             ??_abs 0013                               ??_pad 0022  
                             ?_main 0001                               ?_dtoa 0027  
                             ?_init 0001                               ?_rand 0017  
                   __end_of___awdiv 13F4                     __end_of___awmod 14A4  
                   ___awdiv@divisor 000D                     ___awdiv@counter 000F  
                      vfpfcnvrt@fmt 0036                               _SPBRG 0FAF  
                             _PORTD 0F83                               _TRISB 0F93  
                             _TRISD 0F95                               _TXREG 0FAD  
               ___lmul@multiplicand 000F                               _flags 0060  
                             _fputc 1266                               _fputs 16BC  
                             pad@fp 001C                               _width 005C  
                             _putch 17CC                               main@i 00D2  
                             dtoa@d 0029                               main@r 00D6  
                             dtoa@i 0031                               dtoa@p 002D  
                             dtoa@s 0033                               dtoa@w 002F  
                             tablat 0FF5                               ttemp5 0066  
                             ttemp6 0069                               ttemp7 006D  
                             status 0FD8                               wtemp8 0066  
                   __initialization 1740                        __end_of_main 0C58  
                      __end_of_dtoa 1016                        __end_of_init 17B2  
                      __end_of_rand 1604                              ??_main 0050  
                            ??_dtoa 002B                              ??_init 000B  
                            ??_rand 0019                       __activetblptr 0002  
                            _ADCON1 0FC1                              ?_fputc 000C  
                            ?_fputs 0015                    ___awdiv@dividend 000B  
                            ?_putch 0001                              i2l2001 0DBE  
                            i2l2011 0DDC                              i2l2013 0E0E  
                            i2l2015 0E26                              i2l2007 0DCA  
                            i2l2025 0E4A                              i2l2017 0E34  
                            i2l2009 0DD2                              i2l2027 0E52  
                            i2l2019 0E3E                              i2l2029 0E5C  
                            i2l1961 0C8E                              i2l1971 0CB2  
                            i2l1963 0C9C                              i2l1955 0C5A  
                            i2l1981 0D28                              i2l1973 0CC0  
                            i2l1965 0CA6                              i2l1957 0C68  
                            i2l1991 0D4C                              i2l1983 0D32  
                            i2l1975 0CD0                              i2l1959 0C76  
                            i2l1993 0D5C                              i2l1977 0D02  
                            i2l1995 0D8E                              i2l1979 0D1A  
                            i2l1997 0DA6                              i2l1989 0D3E  
                            i2l1999 0DB4                              _SPBRGH 0FB0  
                      vfprintf@cfmt 0048                              ___lmul 1604  
                         ??___awdiv 000F                           ??___awmod 000F  
                  __end_of_initUART 17CC                              _setLED 14A4  
                            clear_0 1746                              clear_1 1752  
                  ___awdiv@quotient 0011                     ___awmod@divisor 000D  
                       setLED@value 000B                              isa$std 0001  
                   ___awmod@counter 000F                              _printf 1766  
                            pad@buf 001E                              dtoa@fp 0027  
                            fputc@c 000C                              fputs@c 0019  
                            fputs@i 001A                              fputs@s 0015  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                     interruption@i 0003                    __end_of_vfprintf 16BC  
                        __accesstop 0080             __end_of__initialization 1758  
                     ___rparam_used 0001                      __pcstackCOMRAM 0001  
                     ?_interruption 0001                       __end_of_fputc 1330  
                     __end_of_fputs 1700                       __end_of_putch 17E2  
                           ??_fputc 0010                             ??_fputs 0019  
               main@sequencia_facil 00C8                             ??_putch 000B  
                  _reproduz_vitoria 1016                          __pbssBANK0 0080  
        main@sequencia_facil_perdeu 00BA       main@esperando_sequencia_facil 00BE  
                    ??_interruption 0001                             ?___lmul 000B  
                           ?_setLED 000B                      ___lmul@product 0013  
                           ?_printf 004A                           ?_initUART 0001  
                           __Hparam 0000                             __Lparam 0000  
                           ___awdiv 1330                             ___awmod 13F4  
                         ?_vfprintf 0042                        __psmallconst 0600  
                           __pcinit 1740                             __ramtop 0600  
                           __ptext0 0624                             __ptext1 14A4  
                           __ptext2 1016                             __ptext3 1598  
                           __ptext4 1604                             __ptext5 1766  
                           __ptext6 166E                             __ptext7 1144  
                           __ptext8 0E82                             __ptext9 151E  
                  ___awmod@dividend 000B                      __pintcode_body 0C58  
              end_of_initialization 1758                          ??_initUART 000B  
                           fputc@fp 000E                       __Lmediumconst 0000  
                           int_func 0C58                             fputs@fp 0017  
                 __end_of_vfpfcnvrt 1266                           _RCSTAbits 0FAB  
                           postdec2 0FDD                             postinc0 0FEE  
                           postinc1 0FE6                             postinc2 0FDE  
                  vfpfcnvrt@convarg 003C                          ??_vfprintf 0048  
                         _PORTBbits 0F81                           _PORTCbits 0F82  
                         _PORTDbits 0F83                           _TRISCbits 0F94  
        main@possui_sequencia_facil 00B8          main@possui_sequencia_media 00BC  
              __end_of_interruption 0E82                           _TXSTAbits 0FAC  
                    __end_of___lmul 166E            __end_of_reproduz_vitoria 1144  
                       vfpfcnvrt@ap 0038                         vfpfcnvrt@cp 0040  
                       vfpfcnvrt@fp 0034                         _BAUDCONbits 0FB8  
                    __end_of_setLED 151E                      __end_of_printf 178C  
               start_initialization 1740                   reproduz_vitoria@i 000C  
                       __end_of_abs 1740                         __end_of_pad 1598  
                       vfprintf@fmt 0044                            ??___lmul 0013  
                          ??_setLED 000C                            ??_printf 004E  
                       __pbssCOMRAM 0054                       __pcstackBANK0 00B8  
                         _dtoa$1310 002B                           __pintcode 0008  
                          ?___awdiv 000B                            ?___awmod 000B  
     main@sequencia_facil_finalizou 00D0                         __smallconst 0600  
                          i2u200_47 0D0C                            i2u201_47 0D40  
                          i2u202_47 0D50                            i2u203_47 0D98  
                          i2u140_40 0C68                            i2u140_41 0C64  
                          i2u204_47 0DCC                            i2u141_40 0C76  
                          i2u141_41 0C72                            i2u205_47 0DD6  
                          i2u150_40 0E0E                            i2u142_40 0C9C  
                          i2u150_41 0E0A                            i2u142_41 0C98  
                          i2u206_47 0E18                            i2u151_40 0E34  
                          i2u143_40 0CEE                            i2u151_41 0E30  
                          i2u143_41 0CEA                            i2u207_47 0E4C  
                          i2u152_40 0E7A                            i2u144_40 0D02  
                          i2u152_41 0E76                            i2u144_41 0CFE  
                          i2u208_47 0E56                            i2u145_40 0D28  
                          i2u145_41 0D24                            i2u146_40 0D7A  
                          i2u146_41 0D76                            i2u147_40 0D8E  
                          i2u147_41 0D8A                            i2u148_40 0DB4  
                          i2u148_41 0DB0                            i2u149_40 0DFA  
                          i2u149_41 0DF6                            i2u197_47 0C80  
                          i2u198_47 0CB8                            i2u199_47 0CC8  
                          _RCONbits 0FD0                           main@F2923 0080  
                         main@F2917 0088                   interruption@i_687 0005  
                 interruption@i_688 0007                   interruption@i_689 0009  
                      _interruption 0008                           _vfpfcnvrt 1144  
                         main@i_801 00D4                           main@i_792 00DA  
                         main@i_793 00DC                           main@i_794 00DE  
                         main@i_795 00E0                           main@i_796 00E2  
                         main@i_789 00D8                           main@array 00C0  
generate_random_sequence_easy@F2907 0054                   ___lmul@multiplier 000B  
                       _INTCON2bits 0FF1                         _INTCON3bits 0FF0  
                          __Hrparam 0000                          vfprintf@ap 0046  
                          __Lrparam 0000                          vfprintf@fp 0042  
                         setLED@pos 000E                          ?_vfpfcnvrt 0034  
                 ?_reproduz_vitoria 0001                  ??_reproduz_vitoria 000B  
                          __ptext10 16BC                            __ptext11 1266  
                          __ptext12 17CC                            __ptext13 1700  
                          __ptext14 13F4                            __ptext15 1330  
                          __ptext16 17B2                            __ptext17 178C  
                          _initUART 17B2                            isa$xinst 0000  
                          int$flags 0065                            _vfprintf 166E  
                         printf@fmt 004A                           putch@byte 000B  
                        _INTCONbits 0FF2                            intlevel2 0000  
                          printf@ap 004E                         ??_vfpfcnvrt 003A  
                       _pressedBTN1 0096                         _pressedBTN2 0094  
                       _pressedBTN3 0092                         _pressedBTN4 0090  
