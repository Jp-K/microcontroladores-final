

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 04 12:08:55 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _PORTD	set	3971
    60   000000                     _PORTBbits	set	3969
    61   000000                     _PORTDbits	set	3971
    62   000000                     _TXSTAbits	set	4012
    63   000000                     _TXREG	set	4013
    64   000000                     _SPBRG	set	4015
    65   000000                     _TRISB	set	3987
    66   000000                     _TRISCbits	set	3988
    67   000000                     _TRISD	set	3989
    68   000000                     _RCSTAbits	set	4011
    69   000000                     _BAUDCONbits	set	4024
    70   000000                     _SPBRGH	set	4016
    71   000000                     _ADCON1	set	4033
    72   000000                     _RCONbits	set	4048
    73   000000                     _INTCON2bits	set	4081
    74   000000                     _INTCONbits	set	4082
    75                           
    76                           	psect	smallconst
    77   000600                     __psmallconst:
    78                           	callstack 0
    79   000600  00                 	db	0
    80   000601                     STR_1:
    81   000601  49                 	db	73	;'I'
    82   000602  6E                 	db	110	;'n'
    83   000603  69                 	db	105	;'i'
    84   000604  74                 	db	116	;'t'
    85   000605  20                 	db	32
    86   000606  55                 	db	85	;'U'
    87   000607  41                 	db	65	;'A'
    88   000608  52                 	db	82	;'R'
    89   000609  54                 	db	84	;'T'
    90   00060A  21                 	db	33
    91   00060B  20                 	db	32
    92   00060C  0A                 	db	10
    93   00060D  00                 	db	0
    94   00060E  00                 	db	0	; dummy byte at the end
    95   000000                     
    96                           ; #config settings
    97                           
    98                           	psect	cinit
    99   000950                     __pcinit:
   100                           	callstack 0
   101   000950                     start_initialization:
   102                           	callstack 0
   103   000950                     __initialization:
   104                           	callstack 0
   105                           
   106                           ; Clear objects allocated to COMRAM (37 bytes)
   107   000950  EE00  F001         	lfsr	0,__pbssCOMRAM
   108   000954  0E25               	movlw	37
   109   000956                     clear_0:
   110   000956  6AEE               	clrf	postinc0,c
   111   000958  06E8               	decf	wreg,f,c
   112   00095A  E1FD               	bnz	clear_0
   113   00095C                     end_of_initialization:
   114                           	callstack 0
   115   00095C                     __end_of__initialization:
   116                           	callstack 0
   117   00095C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   118   00095E  6EF8               	movwf	tblptru,c
   119   000960  0100               	movlb	0
   120   000962  EF37  F004         	goto	_main	;jump to C main() function
   121                           
   122                           	psect	bssCOMRAM
   123   000001                     __pbssCOMRAM:
   124                           	callstack 0
   125   000001                     	ds	32
   126   000021                     _width:
   127                           	callstack 0
   128   000021                     	ds	2
   129   000023                     _prec:
   130                           	callstack 0
   131   000023                     	ds	2
   132   000025                     _flags:
   133                           	callstack 0
   134   000025                     	ds	1
   135                           
   136                           	psect	cstackCOMRAM
   137   000026                     __pcstackCOMRAM:
   138                           	callstack 0
   139   000026                     ??_getBTN:
   140   000026                     putch@byte:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x0
   144   000026                     	ds	1
   145   000027                     fputc@c:
   146                           	callstack 0
   147                           
   148                           ; 2 bytes @ 0x1
   149   000027                     	ds	1
   150   000028                     getBTN@pos:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x2
   154   000028                     	ds	1
   155   000029                     setLED@value:
   156                           	callstack 0
   157   000029                     fputc@fp:
   158                           	callstack 0
   159                           
   160                           ; 2 bytes @ 0x3
   161   000029                     	ds	1
   162   00002A                     ??_setLED:
   163                           
   164                           ; 1 bytes @ 0x4
   165   00002A                     	ds	1
   166   00002B                     ??_fputc:
   167                           
   168                           ; 1 bytes @ 0x5
   169   00002B                     	ds	1
   170   00002C                     setLED@pos:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x6
   174   00002C                     	ds	4
   175   000030                     vfpfcnvrt@fp:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0xA
   179   000030                     	ds	2
   180   000032                     vfpfcnvrt@fmt:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0xC
   184   000032                     	ds	2
   185   000034                     vfpfcnvrt@ap:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0xE
   189   000034                     	ds	2
   190   000036                     ?_vfprintf:
   191                           	callstack 0
   192   000036                     vfprintf@fp:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x10
   196   000036                     	ds	2
   197   000038                     vfprintf@fmt:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x12
   201   000038                     	ds	2
   202   00003A                     vfprintf@ap:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x14
   206   00003A                     	ds	2
   207   00003C                     vfprintf@cfmt:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x16
   211   00003C                     	ds	2
   212   00003E                     ?_printf:
   213                           	callstack 0
   214   00003E                     printf@fmt:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x18
   218   00003E                     	ds	2
   219   000040                     printf@ap:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x1A
   223   000040                     	ds	2
   224   000042                     
   225                           ; 1 bytes @ 0x1C
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 143 in file "main.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   245 ;;      Params:         0       0       0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0       0       0
   247 ;;      Temps:          0       0       0       0       0       0       0
   248 ;;      Totals:         0       0       0       0       0       0       0
   249 ;;Total ram usage:        0 bytes
   250 ;; Hardware stack levels required when called: 5
   251 ;; This function calls:
   252 ;;		_getBTN
   253 ;;		_init
   254 ;;		_initUART
   255 ;;		_printf
   256 ;;		_setLED
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text0
   263   00086E                     __ptext0:
   264                           	callstack 0
   265   00086E                     _main:
   266                           	callstack 26
   267   00086E                     
   268                           ;main.c: 144:     init();
   269   00086E  ECBE  F004         	call	_init	;wreg free
   270                           
   271                           ;main.c: 145:     initUART();
   272   000872  EC9B  F004         	call	_initUART	;wreg free
   273   000876                     
   274                           ;main.c: 146:     printf("Init UART! \n");
   275   000876  0E01               	movlw	low STR_1
   276   000878  6E3E               	movwf	printf@fmt^0,c
   277   00087A  0E06               	movlw	high STR_1
   278   00087C  6E3F               	movwf	(printf@fmt+1)^0,c
   279   00087E  EC88  F004         	call	_printf	;wreg free
   280   000882                     l989:
   281                           
   282                           ;main.c: 152:         setLED(1, getBTN(1));
   283   000882  0E01               	movlw	1
   284   000884  EC6D  F003         	call	_getBTN
   285   000888  6E29               	movwf	setLED@value^0,c
   286   00088A  0E01               	movlw	1
   287   00088C  ECFA  F003         	call	_setLED
   288   000890                     
   289                           ;main.c: 154:         setLED(2, getBTN(2));
   290   000890  0E02               	movlw	2
   291   000892  EC6D  F003         	call	_getBTN
   292   000896  6E29               	movwf	setLED@value^0,c
   293   000898  0E02               	movlw	2
   294   00089A  ECFA  F003         	call	_setLED
   295   00089E                     
   296                           ;main.c: 156:         setLED(3, getBTN(3));
   297   00089E  0E03               	movlw	3
   298   0008A0  EC6D  F003         	call	_getBTN
   299   0008A4  6E29               	movwf	setLED@value^0,c
   300   0008A6  0E03               	movlw	3
   301   0008A8  ECFA  F003         	call	_setLED
   302   0008AC                     
   303                           ;main.c: 158:         setLED(4, getBTN(4));
   304   0008AC  0E04               	movlw	4
   305   0008AE  EC6D  F003         	call	_getBTN
   306   0008B2  6E29               	movwf	setLED@value^0,c
   307   0008B4  0E04               	movlw	4
   308   0008B6  ECFA  F003         	call	_setLED
   309   0008BA  EF41  F004         	goto	l989
   310   0008BE  EF00  F000         	goto	start
   311   0008C2                     __end_of_main:
   312                           	callstack 0
   313                           
   314 ;; *************** function _setLED *****************
   315 ;; Defined at:
   316 ;;		line 57 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;  pos             1    wreg     unsigned char 
   319 ;;  value           1    3[COMRAM] unsigned char 
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  pos             1    6[COMRAM] unsigned char 
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      void 
   324 ;; Registers used:
   325 ;;		wreg, status,2, status,0
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   331 ;;      Params:         1       0       0       0       0       0       0
   332 ;;      Locals:         1       0       0       0       0       0       0
   333 ;;      Temps:          2       0       0       0       0       0       0
   334 ;;      Totals:         4       0       0       0       0       0       0
   335 ;;Total ram usage:        4 bytes
   336 ;; Hardware stack levels used: 1
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_main
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           	psect	text1
   345   0007F4                     __ptext1:
   346                           	callstack 0
   347   0007F4                     _setLED:
   348                           	callstack 30
   349                           
   350                           ;incstack = 0
   351                           ;setLED@pos stored from wreg
   352   0007F4  6E2C               	movwf	setLED@pos^0,c
   353   0007F6                     
   354                           ;main.c: 58:     switch (pos) {
   355   0007F6  EF19  F004         	goto	l973
   356   0007FA                     l44:
   357                           
   358                           ;main.c: 60:             PORTDbits.RD0 = value;
   359   0007FA  B029               	btfsc	setLED@value^0,0,c
   360   0007FC  D002               	bra	u265
   361   0007FE  9083               	bcf	131,0,c	;volatile
   362   000800  D001               	bra	u266
   363   000802                     u265:
   364   000802  8083               	bsf	131,0,c	;volatile
   365   000804                     u266:
   366                           
   367                           ;main.c: 61:             break;
   368   000804  EF36  F004         	goto	l49
   369   000808                     l46:
   370                           
   371                           ;main.c: 63:             PORTDbits.RD1 = value;
   372   000808  B029               	btfsc	setLED@value^0,0,c
   373   00080A  D002               	bra	u275
   374   00080C  9283               	bcf	131,1,c	;volatile
   375   00080E  D001               	bra	u276
   376   000810                     u275:
   377   000810  8283               	bsf	131,1,c	;volatile
   378   000812                     u276:
   379                           
   380                           ;main.c: 64:             break;
   381   000812  EF36  F004         	goto	l49
   382   000816                     l47:
   383                           
   384                           ;main.c: 66:             PORTDbits.RD2 = value;
   385   000816  B029               	btfsc	setLED@value^0,0,c
   386   000818  D002               	bra	u285
   387   00081A  9483               	bcf	131,2,c	;volatile
   388   00081C  D001               	bra	u286
   389   00081E                     u285:
   390   00081E  8483               	bsf	131,2,c	;volatile
   391   000820                     u286:
   392                           
   393                           ;main.c: 67:             break;
   394   000820  EF36  F004         	goto	l49
   395   000824                     l48:
   396                           
   397                           ;main.c: 69:             PORTDbits.RD3 = value;
   398   000824  B029               	btfsc	setLED@value^0,0,c
   399   000826  D002               	bra	u295
   400   000828  9683               	bcf	131,3,c	;volatile
   401   00082A  D001               	bra	u296
   402   00082C                     u295:
   403   00082C  8683               	bsf	131,3,c	;volatile
   404   00082E                     u296:
   405                           
   406                           ;main.c: 70:             break;
   407   00082E  EF36  F004         	goto	l49
   408   000832                     l973:
   409   000832  502C               	movf	setLED@pos^0,w,c
   410   000834  6E2A               	movwf	??_setLED^0,c
   411   000836  6A2B               	clrf	(??_setLED+1)^0,c
   412                           
   413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   414                           ; Switch size 1, requested type "simple"
   415                           ; Number of cases is 1, Range of values is 0 to 0
   416                           ; switch strategies available:
   417                           ; Name         Instructions Cycles
   418                           ; simple_byte            4     3 (average)
   419                           ;	Chosen strategy is simple_byte
   420   000838  502B               	movf	(??_setLED+1)^0,w,c
   421   00083A  0A00               	xorlw	0	; case 0
   422   00083C  B4D8               	btfsc	status,2,c
   423   00083E  EF23  F004         	goto	l1005
   424   000842  EF36  F004         	goto	l49
   425   000846                     l1005:
   426                           
   427                           ; Switch size 1, requested type "simple"
   428                           ; Number of cases is 4, Range of values is 1 to 4
   429                           ; switch strategies available:
   430                           ; Name         Instructions Cycles
   431                           ; simple_byte           13     7 (average)
   432                           ;	Chosen strategy is simple_byte
   433   000846  502A               	movf	??_setLED^0,w,c
   434   000848  0A01               	xorlw	1	; case 1
   435   00084A  B4D8               	btfsc	status,2,c
   436   00084C  EFFD  F003         	goto	l44
   437   000850  0A03               	xorlw	3	; case 2
   438   000852  B4D8               	btfsc	status,2,c
   439   000854  EF04  F004         	goto	l46
   440   000858  0A01               	xorlw	1	; case 3
   441   00085A  B4D8               	btfsc	status,2,c
   442   00085C  EF0B  F004         	goto	l47
   443   000860  0A07               	xorlw	7	; case 4
   444   000862  B4D8               	btfsc	status,2,c
   445   000864  EF12  F004         	goto	l48
   446   000868  EF36  F004         	goto	l49
   447   00086C                     l49:
   448   00086C  0012               	return		;funcret
   449   00086E                     __end_of_setLED:
   450                           	callstack 0
   451                           
   452 ;; *************** function _printf *****************
   453 ;; Defined at:
   454 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;  fmt             2   24[COMRAM] PTR const unsigned char 
   457 ;;		 -> STR_1(13), 
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  ap              2   26[COMRAM] PTR void [1]
   460 ;;		 -> ?_printf(2), 
   461 ;;  ret             2    0        int 
   462 ;; Return value:  Size  Location     Type
   463 ;;                  2   24[COMRAM] int 
   464 ;; Registers used:
   465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   471 ;;      Params:         2       0       0       0       0       0       0
   472 ;;      Locals:         2       0       0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0       0       0
   474 ;;      Totals:         4       0       0       0       0       0       0
   475 ;;Total ram usage:        4 bytes
   476 ;; Hardware stack levels used: 1
   477 ;; Hardware stack levels required when called: 4
   478 ;; This function calls:
   479 ;;		_vfprintf
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text2
   486   000910                     __ptext2:
   487                           	callstack 0
   488   000910                     _printf:
   489                           	callstack 26
   490   000910  0E40               	movlw	low (?_printf+2)
   491   000912  6E40               	movwf	printf@ap^0,c
   492   000914  0E00               	movlw	high (?_printf+2)
   493   000916  6E41               	movwf	(printf@ap+1)^0,c
   494   000918  0E00               	movlw	0
   495   00091A  6E36               	movwf	vfprintf@fp^0,c
   496   00091C  0E00               	movlw	0
   497   00091E  6E37               	movwf	(vfprintf@fp+1)^0,c
   498   000920  C03E  F038         	movff	printf@fmt,vfprintf@fmt
   499   000924  C03F  F039         	movff	printf@fmt+1,vfprintf@fmt+1
   500   000928  0E40               	movlw	low printf@ap
   501   00092A  6E3A               	movwf	vfprintf@ap^0,c
   502   00092C  0E00               	movlw	high printf@ap
   503   00092E  6E3B               	movwf	(vfprintf@ap+1)^0,c
   504   000930  EC61  F004         	call	_vfprintf	;wreg free
   505   000934  0012               	return		;funcret
   506   000936                     __end_of_printf:
   507                           	callstack 0
   508                           
   509 ;; *************** function _vfprintf *****************
   510 ;; Defined at:
   511 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
   514 ;;		 -> NULL(0), 
   515 ;;  fmt             2   18[COMRAM] PTR const unsigned char 
   516 ;;		 -> STR_1(13), 
   517 ;;  ap              2   20[COMRAM] PTR PTR void 
   518 ;;		 -> printf@ap(2), 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  cfmt            2   22[COMRAM] PTR unsigned char 
   521 ;;		 -> STR_1(13), 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  2   16[COMRAM] int 
   524 ;; Registers used:
   525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   531 ;;      Params:         6       0       0       0       0       0       0
   532 ;;      Locals:         2       0       0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0
   534 ;;      Totals:         8       0       0       0       0       0       0
   535 ;;Total ram usage:        8 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 3
   538 ;; This function calls:
   539 ;;		_vfpfcnvrt
   540 ;; This function is called by:
   541 ;;		_printf
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text3
   546   0008C2                     __ptext3:
   547                           	callstack 0
   548   0008C2                     _vfprintf:
   549                           	callstack 26
   550   0008C2                     
   551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
   552   0008C2  C038  F03C         	movff	vfprintf@fmt,vfprintf@cfmt
   553   0008C6  C039  F03D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   554                           
   555                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
   556   0008CA  EF75  F004         	goto	l963
   557   0008CE                     l961:
   558                           
   559                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   560   0008CE  C036  F030         	movff	vfprintf@fp,vfpfcnvrt@fp
   561   0008D2  C037  F031         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   562   0008D6  0E3C               	movlw	low vfprintf@cfmt
   563   0008D8  6E32               	movwf	vfpfcnvrt@fmt^0,c
   564   0008DA  0E00               	movlw	high vfprintf@cfmt
   565   0008DC  6E33               	movwf	(vfpfcnvrt@fmt+1)^0,c
   566   0008DE  C03A  F034         	movff	vfprintf@ap,vfpfcnvrt@ap
   567   0008E2  C03B  F035         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   568   0008E6  ECBB  F003         	call	_vfpfcnvrt	;wreg free
   569   0008EA                     l963:
   570                           
   571                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
   572   0008EA  C03C  FFF6         	movff	vfprintf@cfmt,tblptrl
   573   0008EE  C03D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   574   0008F2                     	if	0	;tblptru may be non-zero
   575   0008F2                     	endif
   576   0008F2                     	if	0	;tblptru may be non-zero
   577   0008F2                     	endif
   578   0008F2  0008               	tblrd		*
   579   0008F4  50F5               	movf	tablat,w,c
   580   0008F6  0900               	iorlw	0
   581   0008F8  A4D8               	btfss	status,2,c
   582   0008FA  EF81  F004         	goto	u251
   583   0008FE  EF83  F004         	goto	u250
   584   000902                     u251:
   585   000902  EF67  F004         	goto	l961
   586   000906                     u250:
   587   000906                     
   588                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
   589   000906  0E00               	movlw	0
   590   000908  6E37               	movwf	(?_vfprintf+1)^0,c
   591   00090A  0E00               	movlw	0
   592   00090C  6E36               	movwf	?_vfprintf^0,c
   593   00090E  0012               	return		;funcret
   594   000910                     __end_of_vfprintf:
   595                           	callstack 0
   596                           
   597 ;; *************** function _vfpfcnvrt *****************
   598 ;; Defined at:
   599 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
   602 ;;		 -> NULL(0), 
   603 ;;  fmt             2   12[COMRAM] PTR PTR unsigned char 
   604 ;;		 -> vfprintf@cfmt(2), 
   605 ;;  ap              2   14[COMRAM] PTR PTR void 
   606 ;;		 -> printf@ap(2), 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  convarg         4    0        struct .
   609 ;;  cp              3    0        PTR unsigned char 
   610 ;;  i               2    0        int 
   611 ;;  done            2    0        int 
   612 ;;  c               1    0        unsigned char 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   622 ;;      Params:         6       0       0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0
   625 ;;      Totals:         6       0       0       0       0       0       0
   626 ;;Total ram usage:        6 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 2
   629 ;; This function calls:
   630 ;;		_fputc
   631 ;; This function is called by:
   632 ;;		_vfprintf
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text4
   637   000776                     __ptext4:
   638                           	callstack 0
   639   000776                     _vfpfcnvrt:
   640                           	callstack 26
   641   000776                     
   642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
   643   000776  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   644   00077A  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   645   00077E  CFDE FFF6          	movff	postinc2,tblptrl
   646   000782  CFDD FFF7          	movff	postdec2,tblptrh
   647   000786                     	if	0	;tblptru may be non-zero
   648   000786                     	endif
   649   000786                     	if	0	;tblptru may be non-zero
   650   000786                     	endif
   651   000786  0008               	tblrd		*
   652   000788  50F5               	movf	tablat,w,c
   653   00078A  0A25               	xorlw	37
   654   00078C  A4D8               	btfss	status,2,c
   655   00078E  EFCB  F003         	goto	u241
   656   000792  EFCD  F003         	goto	u240
   657   000796                     u241:
   658   000796  EFE5  F003         	goto	l953
   659   00079A                     u240:
   660   00079A                     
   661                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
   662   00079A  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   663   00079E  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   664   0007A2  2ADE               	incf	postinc2,f,c
   665   0007A4  0E00               	movlw	0
   666   0007A6  22DD               	addwfc	postdec2,f,c
   667   0007A8                     
   668                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
   669   0007A8  0E00               	movlw	0
   670   0007AA  6E22               	movwf	(_width+1)^0,c
   671   0007AC  0E00               	movlw	0
   672   0007AE  6E21               	movwf	_width^0,c
   673   0007B0  C021  F025         	movff	_width,_flags
   674   0007B4                     
   675                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
   676   0007B4  6823               	setf	_prec^0,c
   677   0007B6  6824               	setf	(_prec+1)^0,c
   678   0007B8                     l949:
   679                           
   680                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
   681   0007B8  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   682   0007BC  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   683   0007C0  2ADE               	incf	postinc2,f,c
   684   0007C2  0E00               	movlw	0
   685   0007C4  22DD               	addwfc	postdec2,f,c
   686   0007C6  EFF9  F003         	goto	l779
   687   0007CA                     l953:
   688                           
   689                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
   690   0007CA  C032  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   691   0007CE  C033  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   692   0007D2  CFDE FFF6          	movff	postinc2,tblptrl
   693   0007D6  CFDD FFF7          	movff	postdec2,tblptrh
   694   0007DA                     	if	0	;tblptru may be non-zero
   695   0007DA                     	endif
   696   0007DA                     	if	0	;tblptru may be non-zero
   697   0007DA                     	endif
   698   0007DA  0008               	tblrd		*
   699   0007DC  50F5               	movf	tablat,w,c
   700   0007DE  6E27               	movwf	fputc@c^0,c
   701   0007E0  6A28               	clrf	(fputc@c+1)^0,c
   702   0007E2  C030  F029         	movff	vfpfcnvrt@fp,fputc@fp
   703   0007E6  C031  F02A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   704   0007EA  EC08  F003         	call	_fputc	;wreg free
   705   0007EE  EFDC  F003         	goto	l949
   706   0007F2                     l779:
   707   0007F2  0012               	return		;funcret
   708   0007F4                     __end_of_vfpfcnvrt:
   709                           	callstack 0
   710                           
   711 ;; *************** function _fputc *****************
   712 ;; Defined at:
   713 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  c               2    1[COMRAM] int 
   716 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
   717 ;;		 -> NULL(0), 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  2    1[COMRAM] int 
   722 ;; Registers used:
   723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   729 ;;      Params:         4       0       0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0       0       0
   731 ;;      Temps:          5       0       0       0       0       0       0
   732 ;;      Totals:         9       0       0       0       0       0       0
   733 ;;Total ram usage:        9 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 1
   736 ;; This function calls:
   737 ;;		_putch
   738 ;; This function is called by:
   739 ;;		_vfpfcnvrt
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text5
   744   000610                     __ptext5:
   745                           	callstack 0
   746   000610                     _fputc:
   747                           	callstack 26
   748   000610  5029               	movf	fputc@fp^0,w,c
   749   000612  102A               	iorwf	(fputc@fp+1)^0,w,c
   750   000614  B4D8               	btfsc	status,2,c
   751   000616  EF0F  F003         	goto	u201
   752   00061A  EF11  F003         	goto	u200
   753   00061E                     u201:
   754   00061E  EF1A  F003         	goto	l931
   755   000622                     u200:
   756   000622  5029               	movf	fputc@fp^0,w,c
   757   000624  102A               	iorwf	(fputc@fp+1)^0,w,c
   758   000626  A4D8               	btfss	status,2,c
   759   000628  EF18  F003         	goto	u211
   760   00062C  EF1A  F003         	goto	u210
   761   000630                     u211:
   762   000630  EF1F  F003         	goto	l933
   763   000634                     u210:
   764   000634                     l931:
   765   000634  5027               	movf	fputc@c^0,w,c
   766   000636  ECB3  F004         	call	_putch
   767   00063A  EF6C  F003         	goto	l797
   768   00063E                     l933:
   769   00063E  EE20 F00A          	lfsr	2,10
   770   000642  5029               	movf	fputc@fp^0,w,c
   771   000644  26D9               	addwf	fsr2l,f,c
   772   000646  502A               	movf	(fputc@fp+1)^0,w,c
   773   000648  22DA               	addwfc	fsr2h,f,c
   774   00064A  50DE               	movf	postinc2,w,c
   775   00064C  10DE               	iorwf	postinc2,w,c
   776   00064E  B4D8               	btfsc	status,2,c
   777   000650  EF2C  F003         	goto	u221
   778   000654  EF2E  F003         	goto	u220
   779   000658                     u221:
   780   000658  EF49  F003         	goto	l937
   781   00065C                     u220:
   782   00065C  EE20 F00A          	lfsr	2,10
   783   000660  5029               	movf	fputc@fp^0,w,c
   784   000662  26D9               	addwf	fsr2l,f,c
   785   000664  502A               	movf	(fputc@fp+1)^0,w,c
   786   000666  22DA               	addwfc	fsr2h,f,c
   787   000668  EE10 F003          	lfsr	1,3
   788   00066C  5029               	movf	fputc@fp^0,w,c
   789   00066E  26E1               	addwf	fsr1l,f,c
   790   000670  502A               	movf	(fputc@fp+1)^0,w,c
   791   000672  22E2               	addwfc	fsr1h,f,c
   792   000674  50DE               	movf	postinc2,w,c
   793   000676  5CE6               	subwf	postinc1,w,c
   794   000678  50E6               	movf	postinc1,w,c
   795   00067A  0A80               	xorlw	128
   796   00067C  6E2F               	movwf	(??_fputc+4)^0,c
   797   00067E  50DE               	movf	postinc2,w,c
   798   000680  0A80               	xorlw	128
   799   000682  582F               	subwfb	(??_fputc+4)^0,w,c
   800   000684  B0D8               	btfsc	status,0,c
   801   000686  EF47  F003         	goto	u231
   802   00068A  EF49  F003         	goto	u230
   803   00068E                     u231:
   804   00068E  EF6C  F003         	goto	l797
   805   000692                     u230:
   806   000692                     l937:
   807   000692  EE20 F003          	lfsr	2,3
   808   000696  5029               	movf	fputc@fp^0,w,c
   809   000698  26D9               	addwf	fsr2l,f,c
   810   00069A  502A               	movf	(fputc@fp+1)^0,w,c
   811   00069C  22DA               	addwfc	fsr2h,f,c
   812   00069E  CFDE F02B          	movff	postinc2,??_fputc
   813   0006A2  CFDD F02C          	movff	postdec2,??_fputc+1
   814   0006A6  C029  FFD9         	movff	fputc@fp,fsr2l
   815   0006AA  C02A  FFDA         	movff	fputc@fp+1,fsr2h
   816   0006AE  CFDE F02D          	movff	postinc2,??_fputc+2
   817   0006B2  CFDD F02E          	movff	postdec2,??_fputc+3
   818   0006B6  502B               	movf	??_fputc^0,w,c
   819   0006B8  242D               	addwf	(??_fputc+2)^0,w,c
   820   0006BA  6ED9               	movwf	fsr2l,c
   821   0006BC  502C               	movf	(??_fputc+1)^0,w,c
   822   0006BE  202E               	addwfc	(??_fputc+3)^0,w,c
   823   0006C0  6EDA               	movwf	fsr2h,c
   824   0006C2  C027  FFDF         	movff	fputc@c,indf2
   825   0006C6  EE20 F003          	lfsr	2,3
   826   0006CA  5029               	movf	fputc@fp^0,w,c
   827   0006CC  26D9               	addwf	fsr2l,f,c
   828   0006CE  502A               	movf	(fputc@fp+1)^0,w,c
   829   0006D0  22DA               	addwfc	fsr2h,f,c
   830   0006D2  2ADE               	incf	postinc2,f,c
   831   0006D4  0E00               	movlw	0
   832   0006D6  22DD               	addwfc	postdec2,f,c
   833   0006D8                     l797:
   834   0006D8  0012               	return		;funcret
   835   0006DA                     __end_of_fputc:
   836                           	callstack 0
   837                           
   838 ;; *************** function _putch *****************
   839 ;; Defined at:
   840 ;;		line 24 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;  byte            1    wreg     unsigned char 
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  byte            1    0[COMRAM] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   854 ;;      Params:         0       0       0       0       0       0       0
   855 ;;      Locals:         1       0       0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0
   857 ;;      Totals:         1       0       0       0       0       0       0
   858 ;;Total ram usage:        1 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; This function calls:
   861 ;;		Nothing
   862 ;; This function is called by:
   863 ;;		_fputc
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text6
   868   000966                     __ptext6:
   869                           	callstack 0
   870   000966                     _putch:
   871                           	callstack 26
   872                           
   873                           ;incstack = 0
   874                           ;putch@byte stored from wreg
   875   000966  6E26               	movwf	putch@byte^0,c
   876   000968                     
   877                           ;main.c: 25:     TXREG = byte;
   878   000968  C026  FFAD         	movff	putch@byte,4013	;volatile
   879   00096C                     l37:
   880   00096C  A2AC               	btfss	172,1,c	;volatile
   881   00096E  EFBB  F004         	goto	u11
   882   000972  EFBD  F004         	goto	u10
   883   000976                     u11:
   884   000976  EFB6  F004         	goto	l37
   885   00097A                     u10:
   886   00097A  0012               	return		;funcret
   887   00097C                     __end_of_putch:
   888                           	callstack 0
   889                           
   890 ;; *************** function _initUART *****************
   891 ;; Defined at:
   892 ;;		line 105 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   906 ;;      Params:         0       0       0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text7
   920   000936                     __ptext7:
   921                           	callstack 0
   922   000936                     _initUART:
   923                           	callstack 30
   924   000936                     
   925                           ;main.c: 106:     TRISCbits.RC6 = 1;
   926   000936  8C94               	bsf	148,6,c	;volatile
   927                           
   928                           ;main.c: 107:     TRISCbits.RC7 = 1;
   929   000938  8E94               	bsf	148,7,c	;volatile
   930   00093A                     
   931                           ;main.c: 108:     SPBRG = 34;
   932   00093A  0E22               	movlw	34
   933   00093C  6EAF               	movwf	175,c	;volatile
   934                           
   935                           ;main.c: 109:     SPBRGH = 0;
   936   00093E  0E00               	movlw	0
   937   000940  6EB0               	movwf	176,c	;volatile
   938   000942                     
   939                           ;main.c: 110:     BAUDCONbits.BRG16 = 1;
   940   000942  86B8               	bsf	184,3,c	;volatile
   941   000944                     
   942                           ;main.c: 111:     TXSTAbits.BRGH = 1;
   943   000944  84AC               	bsf	172,2,c	;volatile
   944   000946                     
   945                           ;main.c: 112:     TXSTAbits.SYNC = 0;
   946   000946  98AC               	bcf	172,4,c	;volatile
   947   000948                     
   948                           ;main.c: 113:     TXSTAbits.TXEN = 1;
   949   000948  8AAC               	bsf	172,5,c	;volatile
   950   00094A                     
   951                           ;main.c: 114:     RCSTAbits.SPEN = 1;
   952   00094A  8EAB               	bsf	171,7,c	;volatile
   953   00094C                     
   954                           ;main.c: 115:     RCSTAbits.CREN = 1;
   955   00094C  88AB               	bsf	171,4,c	;volatile
   956   00094E  0012               	return		;funcret
   957   000950                     __end_of_initUART:
   958                           	callstack 0
   959                           
   960 ;; *************** function _init *****************
   961 ;; Defined at:
   962 ;;		line 118 in file "main.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg, status,2
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   976 ;;      Params:         0       0       0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text8
   990   00097C                     __ptext8:
   991                           	callstack 0
   992   00097C                     _init:
   993                           	callstack 30
   994   00097C                     
   995                           ;main.c: 119:     ADCON1 = 0x0F;
   996   00097C  0E0F               	movlw	15
   997   00097E  6EC1               	movwf	193,c	;volatile
   998                           
   999                           ;main.c: 120:     TRISD = 0x00;
  1000   000980  0E00               	movlw	0
  1001   000982  6E95               	movwf	149,c	;volatile
  1002                           
  1003                           ;main.c: 121:     PORTD = 0x00;
  1004   000984  0E00               	movlw	0
  1005   000986  6E83               	movwf	131,c	;volatile
  1006   000988                     
  1007                           ;main.c: 123:     TRISB = 0xFF;
  1008   000988  6893               	setf	147,c	;volatile
  1009   00098A                     
  1010                           ;main.c: 124:     INTCON2bits.RBPU = 0;
  1011   00098A  9EF1               	bcf	241,7,c	;volatile
  1012   00098C                     
  1013                           ;main.c: 126:     RCONbits.IPEN = 0;
  1014   00098C  9ED0               	bcf	208,7,c	;volatile
  1015   00098E                     
  1016                           ;main.c: 132:     INTCONbits.RBIE = 1;
  1017   00098E  86F2               	bsf	242,3,c	;volatile
  1018   000990  0012               	return		;funcret
  1019   000992                     __end_of_init:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _getBTN *****************
  1023 ;; Defined at:
  1024 ;;		line 74 in file "main.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  pos             1    wreg     unsigned char 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  pos             1    2[COMRAM] unsigned char 
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      unsigned char 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1038 ;;      Params:         0       0       0       0       0       0       0
  1039 ;;      Locals:         1       0       0       0       0       0       0
  1040 ;;      Temps:          2       0       0       0       0       0       0
  1041 ;;      Totals:         3       0       0       0       0       0       0
  1042 ;;Total ram usage:        3 bytes
  1043 ;; Hardware stack levels used: 1
  1044 ;; This function calls:
  1045 ;;		Nothing
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text9
  1052   0006DA                     __ptext9:
  1053                           	callstack 0
  1054   0006DA                     _getBTN:
  1055                           	callstack 30
  1056                           
  1057                           ;incstack = 0
  1058                           ;getBTN@pos stored from wreg
  1059   0006DA  6E28               	movwf	getBTN@pos^0,c
  1060   0006DC                     
  1061                           ;main.c: 75:     switch (pos) {
  1062   0006DC  EF9C  F003         	goto	l865
  1063   0006E0                     l53:
  1064                           
  1065                           ;main.c: 77:             return !PORTBbits.RB5;
  1066   0006E0  AA81               	btfss	129,5,c	;volatile
  1067   0006E2  EF75  F003         	goto	u121
  1068   0006E6  EF78  F003         	goto	u120
  1069   0006EA                     u121:
  1070   0006EA  0E01               	movlw	1
  1071   0006EC  EF79  F003         	goto	u130
  1072   0006F0                     u120:
  1073   0006F0  0E00               	movlw	0
  1074   0006F2                     u130:
  1075   0006F2  EFBA  F003         	goto	l54
  1076   0006F6                     l55:
  1077                           
  1078                           ;main.c: 79:             return !PORTBbits.RB4;
  1079   0006F6  A881               	btfss	129,4,c	;volatile
  1080   0006F8  EF80  F003         	goto	u141
  1081   0006FC  EF83  F003         	goto	u140
  1082   000700                     u141:
  1083   000700  0E01               	movlw	1
  1084   000702  EF84  F003         	goto	u150
  1085   000706                     u140:
  1086   000706  0E00               	movlw	0
  1087   000708                     u150:
  1088   000708  EFBA  F003         	goto	l54
  1089   00070C                     l56:
  1090                           
  1091                           ;main.c: 81:             return !PORTBbits.RB7;
  1092   00070C  AE81               	btfss	129,7,c	;volatile
  1093   00070E  EF8B  F003         	goto	u161
  1094   000712  EF8E  F003         	goto	u160
  1095   000716                     u161:
  1096   000716  0E01               	movlw	1
  1097   000718  EF8F  F003         	goto	u170
  1098   00071C                     u160:
  1099   00071C  0E00               	movlw	0
  1100   00071E                     u170:
  1101   00071E  EFBA  F003         	goto	l54
  1102   000722                     l57:
  1103                           
  1104                           ;main.c: 83:             return !PORTBbits.RB6;
  1105   000722  AC81               	btfss	129,6,c	;volatile
  1106   000724  EF96  F003         	goto	u181
  1107   000728  EF99  F003         	goto	u180
  1108   00072C                     u181:
  1109   00072C  0E01               	movlw	1
  1110   00072E  EF9A  F003         	goto	u190
  1111   000732                     u180:
  1112   000732  0E00               	movlw	0
  1113   000734                     u190:
  1114   000734  EFBA  F003         	goto	l54
  1115   000738                     l865:
  1116   000738  5028               	movf	getBTN@pos^0,w,c
  1117   00073A  6E26               	movwf	??_getBTN^0,c
  1118   00073C  6A27               	clrf	(??_getBTN+1)^0,c
  1119                           
  1120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1121                           ; Switch size 1, requested type "simple"
  1122                           ; Number of cases is 1, Range of values is 0 to 0
  1123                           ; switch strategies available:
  1124                           ; Name         Instructions Cycles
  1125                           ; simple_byte            4     3 (average)
  1126                           ;	Chosen strategy is simple_byte
  1127   00073E  5027               	movf	(??_getBTN+1)^0,w,c
  1128   000740  0A00               	xorlw	0	; case 0
  1129   000742  B4D8               	btfsc	status,2,c
  1130   000744  EFA6  F003         	goto	l1007
  1131   000748  EFB9  F003         	goto	l867
  1132   00074C                     l1007:
  1133                           
  1134                           ; Switch size 1, requested type "simple"
  1135                           ; Number of cases is 4, Range of values is 1 to 4
  1136                           ; switch strategies available:
  1137                           ; Name         Instructions Cycles
  1138                           ; simple_byte           13     7 (average)
  1139                           ;	Chosen strategy is simple_byte
  1140   00074C  5026               	movf	??_getBTN^0,w,c
  1141   00074E  0A01               	xorlw	1	; case 1
  1142   000750  B4D8               	btfsc	status,2,c
  1143   000752  EF70  F003         	goto	l53
  1144   000756  0A03               	xorlw	3	; case 2
  1145   000758  B4D8               	btfsc	status,2,c
  1146   00075A  EF7B  F003         	goto	l55
  1147   00075E  0A01               	xorlw	1	; case 3
  1148   000760  B4D8               	btfsc	status,2,c
  1149   000762  EF86  F003         	goto	l56
  1150   000766  0A07               	xorlw	7	; case 4
  1151   000768  B4D8               	btfsc	status,2,c
  1152   00076A  EF91  F003         	goto	l57
  1153   00076E  EFB9  F003         	goto	l867
  1154   000772                     l867:
  1155                           
  1156                           ;main.c: 85:     return 0;
  1157   000772  0E00               	movlw	0
  1158   000774                     l54:
  1159   000774  0012               	return		;funcret
  1160   000776                     __end_of_getBTN:
  1161                           	callstack 0
  1162                           
  1163                           	psect	rparam
  1164   000000                     
  1165                           	psect	idloc
  1166                           
  1167                           ;Config register IDLOC0 @ 0x200000
  1168                           ;	unspecified, using default values
  1169   200000                     	org	2097152
  1170   200000  FF                 	db	255
  1171                           
  1172                           ;Config register IDLOC1 @ 0x200001
  1173                           ;	unspecified, using default values
  1174   200001                     	org	2097153
  1175   200001  FF                 	db	255
  1176                           
  1177                           ;Config register IDLOC2 @ 0x200002
  1178                           ;	unspecified, using default values
  1179   200002                     	org	2097154
  1180   200002  FF                 	db	255
  1181                           
  1182                           ;Config register IDLOC3 @ 0x200003
  1183                           ;	unspecified, using default values
  1184   200003                     	org	2097155
  1185   200003  FF                 	db	255
  1186                           
  1187                           ;Config register IDLOC4 @ 0x200004
  1188                           ;	unspecified, using default values
  1189   200004                     	org	2097156
  1190   200004  FF                 	db	255
  1191                           
  1192                           ;Config register IDLOC5 @ 0x200005
  1193                           ;	unspecified, using default values
  1194   200005                     	org	2097157
  1195   200005  FF                 	db	255
  1196                           
  1197                           ;Config register IDLOC6 @ 0x200006
  1198                           ;	unspecified, using default values
  1199   200006                     	org	2097158
  1200   200006  FF                 	db	255
  1201                           
  1202                           ;Config register IDLOC7 @ 0x200007
  1203                           ;	unspecified, using default values
  1204   200007                     	org	2097159
  1205   200007  FF                 	db	255
  1206                           
  1207                           	psect	config
  1208                           
  1209                           ; Padding undefined space
  1210   300000                     	org	3145728
  1211   300000  FF                 	db	255
  1212                           
  1213                           ;Config register CONFIG1H @ 0x300001
  1214                           ;	Oscillator Selection bits
  1215                           ;	OSC = XT, XT oscillator
  1216                           ;	Fail-Safe Clock Monitor Enable bit
  1217                           ;	FCMEN = 0x0, unprogrammed default
  1218                           ;	Internal/External Oscillator Switchover bit
  1219                           ;	IESO = 0x0, unprogrammed default
  1220   300001                     	org	3145729
  1221   300001  01                 	db	1
  1222                           
  1223                           ;Config register CONFIG2L @ 0x300002
  1224                           ;	Power-up Timer Enable bit
  1225                           ;	PWRT = 0x1, unprogrammed default
  1226                           ;	Brown-out Reset Enable bits
  1227                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1228                           ;	Brown Out Reset Voltage bits
  1229                           ;	BORV = 0x3, unprogrammed default
  1230   300002                     	org	3145730
  1231   300002  19                 	db	25
  1232                           
  1233                           ;Config register CONFIG2H @ 0x300003
  1234                           ;	Watchdog Timer Enable bit
  1235                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1236                           ;	Watchdog Timer Postscale Select bits
  1237                           ;	WDTPS = 0xF, unprogrammed default
  1238   300003                     	org	3145731
  1239   300003  1E                 	db	30
  1240                           
  1241                           ; Padding undefined space
  1242   300004                     	org	3145732
  1243   300004  FF                 	db	255
  1244                           
  1245                           ;Config register CONFIG3H @ 0x300005
  1246                           ;	unspecified, using default values
  1247                           ;	CCP2 MUX bit
  1248                           ;	CCP2MX = 0x1, unprogrammed default
  1249                           ;	PORTB A/D Enable bit
  1250                           ;	PBADEN = 0x1, unprogrammed default
  1251                           ;	Low-Power Timer1 Oscillator Enable bit
  1252                           ;	LPT1OSC = 0x0, unprogrammed default
  1253                           ;	MCLR Pin Enable bit
  1254                           ;	MCLRE = 0x1, unprogrammed default
  1255   300005                     	org	3145733
  1256   300005  83                 	db	131
  1257                           
  1258                           ;Config register CONFIG4L @ 0x300006
  1259                           ;	unspecified, using default values
  1260                           ;	Stack Full/Underflow Reset Enable bit
  1261                           ;	STVREN = 0x1, unprogrammed default
  1262                           ;	Single-Supply ICSP Enable bit
  1263                           ;	LVP = 0x1, unprogrammed default
  1264                           ;	Extended Instruction Set Enable bit
  1265                           ;	XINST = 0x0, unprogrammed default
  1266                           ;	Background Debugger Enable bit
  1267                           ;	DEBUG = 0x1, unprogrammed default
  1268   300006                     	org	3145734
  1269   300006  85                 	db	133
  1270                           
  1271                           ; Padding undefined space
  1272   300007                     	org	3145735
  1273   300007  FF                 	db	255
  1274                           
  1275                           ;Config register CONFIG5L @ 0x300008
  1276                           ;	unspecified, using default values
  1277                           ;	Code Protection bit
  1278                           ;	CP0 = 0x1, unprogrammed default
  1279                           ;	Code Protection bit
  1280                           ;	CP1 = 0x1, unprogrammed default
  1281                           ;	Code Protection bit
  1282                           ;	CP2 = 0x1, unprogrammed default
  1283                           ;	Code Protection bit
  1284                           ;	CP3 = 0x1, unprogrammed default
  1285   300008                     	org	3145736
  1286   300008  0F                 	db	15
  1287                           
  1288                           ;Config register CONFIG5H @ 0x300009
  1289                           ;	unspecified, using default values
  1290                           ;	Boot Block Code Protection bit
  1291                           ;	CPB = 0x1, unprogrammed default
  1292                           ;	Data EEPROM Code Protection bit
  1293                           ;	CPD = 0x1, unprogrammed default
  1294   300009                     	org	3145737
  1295   300009  C0                 	db	192
  1296                           
  1297                           ;Config register CONFIG6L @ 0x30000A
  1298                           ;	unspecified, using default values
  1299                           ;	Write Protection bit
  1300                           ;	WRT0 = 0x1, unprogrammed default
  1301                           ;	Write Protection bit
  1302                           ;	WRT1 = 0x1, unprogrammed default
  1303                           ;	Write Protection bit
  1304                           ;	WRT2 = 0x1, unprogrammed default
  1305                           ;	Write Protection bit
  1306                           ;	WRT3 = 0x1, unprogrammed default
  1307   30000A                     	org	3145738
  1308   30000A  0F                 	db	15
  1309                           
  1310                           ;Config register CONFIG6H @ 0x30000B
  1311                           ;	unspecified, using default values
  1312                           ;	Configuration Register Write Protection bit
  1313                           ;	WRTC = 0x1, unprogrammed default
  1314                           ;	Boot Block Write Protection bit
  1315                           ;	WRTB = 0x1, unprogrammed default
  1316                           ;	Data EEPROM Write Protection bit
  1317                           ;	WRTD = 0x1, unprogrammed default
  1318   30000B                     	org	3145739
  1319   30000B  E0                 	db	224
  1320                           
  1321                           ;Config register CONFIG7L @ 0x30000C
  1322                           ;	unspecified, using default values
  1323                           ;	Table Read Protection bit
  1324                           ;	EBTR0 = 0x1, unprogrammed default
  1325                           ;	Table Read Protection bit
  1326                           ;	EBTR1 = 0x1, unprogrammed default
  1327                           ;	Table Read Protection bit
  1328                           ;	EBTR2 = 0x1, unprogrammed default
  1329                           ;	Table Read Protection bit
  1330                           ;	EBTR3 = 0x1, unprogrammed default
  1331   30000C                     	org	3145740
  1332   30000C  0F                 	db	15
  1333                           
  1334                           ;Config register CONFIG7H @ 0x30000D
  1335                           ;	unspecified, using default values
  1336                           ;	Boot Block Table Read Protection bit
  1337                           ;	EBTRB = 0x1, unprogrammed default
  1338   30000D                     	org	3145741
  1339   30000D  40                 	db	64
  1340                           tosu	equ	0xFFF
  1341                           tosh	equ	0xFFE
  1342                           tosl	equ	0xFFD
  1343                           stkptr	equ	0xFFC
  1344                           pclatu	equ	0xFFB
  1345                           pclath	equ	0xFFA
  1346                           pcl	equ	0xFF9
  1347                           tblptru	equ	0xFF8
  1348                           tblptrh	equ	0xFF7
  1349                           tblptrl	equ	0xFF6
  1350                           tablat	equ	0xFF5
  1351                           prodh	equ	0xFF4
  1352                           prodl	equ	0xFF3
  1353                           indf0	equ	0xFEF
  1354                           postinc0	equ	0xFEE
  1355                           postdec0	equ	0xFED
  1356                           preinc0	equ	0xFEC
  1357                           plusw0	equ	0xFEB
  1358                           fsr0h	equ	0xFEA
  1359                           fsr0l	equ	0xFE9
  1360                           wreg	equ	0xFE8
  1361                           indf1	equ	0xFE7
  1362                           postinc1	equ	0xFE6
  1363                           postdec1	equ	0xFE5
  1364                           preinc1	equ	0xFE4
  1365                           plusw1	equ	0xFE3
  1366                           fsr1h	equ	0xFE2
  1367                           fsr1l	equ	0xFE1
  1368                           bsr	equ	0xFE0
  1369                           indf2	equ	0xFDF
  1370                           postinc2	equ	0xFDE
  1371                           postdec2	equ	0xFDD
  1372                           preinc2	equ	0xFDC
  1373                           plusw2	equ	0xFDB
  1374                           fsr2h	equ	0xFDA
  1375                           fsr2l	equ	0xFD9
  1376                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     28      65
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    S1034$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1034$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1069$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    printf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _setLED->_getBTN
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1909
                             _getBTN
                               _init
                           _initUART
                             _printf
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _setLED                                               4     3      1     414
                                              3 COMRAM     4     3      1
                             _getBTN (ARG)
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2    1480
                                             24 COMRAM     4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    1352
                                             16 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           18    12      6    1005
                                             10 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     645
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getBTN                                               3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getBTN
   _init
   _initUART
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
   _setLED
     _getBTN (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1C      41       1       51.2%
BITBIGSFRhhhhlh     20      0       0      17        0.0%
BITBIGSFRlhh        15      0       0      22        0.0%
BITBIGSFRlhl         F      0       0      23        0.0%
BITBIGSFRhhhhll      E      0       0      18        0.0%
BITBIGSFRhhhhh       D      0       0      16        0.0%
BITBIGSFRhhhl        8      0       0      19        0.0%
BITBIGSFRhhl         7      0       0      20        0.0%
BITBIGSFRllh         1      0       0      24        0.0%
BITBIGSFRhl          1      0       0      21        0.0%
BITBIGSFRlll         1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      26        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 04 12:08:55 2023

                     l40 097A                       l44 07FA                       l53 06E0  
                     l61 094E                       l37 096C                       l54 0774  
                     l46 0808                       l55 06F6                       l47 0816  
                     l56 070C                       l64 0990                       l48 0824  
                     l57 0722                       l49 086C                       u10 097A  
                     u11 0976                      l807 0968                      l753 0934  
                    l931 0634                      l861 06DC                      l933 063E  
                    l941 0776                      l935 065C                      l927 0610  
                    l943 079A                      l865 0738                      l881 0944  
                    l937 0692                      l929 0622                      l945 07A8  
                    l953 07CA                      l785 090E                      l961 08CE  
                    l867 0772                      l891 097C                      l883 0946  
                    l875 0936                      l779 07F2                      l947 07B4  
                    l963 08EA                      l893 0988                      l885 0948  
                    l877 093A                      l797 06D8                      l949 07B8  
                    l965 0906                      l981 0918                      l973 0832  
                    l895 098A                      l887 094A                      l879 0942  
                    l959 08C2                      l991 0890                      l897 098C  
                    l889 094C                      l969 07F6                      l993 089E  
                    l985 086E                      l899 098E                      l979 0910  
                    l995 08AC                      l987 0876                      l989 0882  
                    u120 06F0                      u200 0622                      u121 06EA  
                    u201 061E                      u130 06F2                      u210 0634  
                    u211 0630                      u140 0706                      u220 065C  
                    u141 0700                      u221 0658                      u150 0708  
                    u230 0692                      u231 068E                      u160 071C  
                    u240 079A                      u161 0716                      u241 0796  
                    u170 071E                      u250 0906                      u251 0902  
                    u180 0732                      u181 072C                      u190 0734  
                    u265 0802                      u266 0804                      u275 0810  
                    u276 0812                      u285 081E                      u286 0820  
                    u295 082C                      u296 082E                      wreg 0FE8  
                   l1005 0846                     l1007 074C                     STR_1 0601  
                   _dbuf 0001                     _main 086E                     _init 097C  
                   _prec 0023                     fsr1h 0FE2                     fsr2h 0FDA  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   start 0000             ___param_bank 0000                    ?_main 0026  
                  ?_init 0026             vfpfcnvrt@fmt 0032                    _SPBRG 0FAF  
                  _PORTD 0F83                    _TRISB 0F93                    _TRISD 0F95  
                  _TXREG 0FAD                    _flags 0025                    _fputc 0610  
                  _width 0021                    _putch 0966                    tablat 0FF5  
                  status 0FD8          __initialization 0950             __end_of_main 08C2  
           __end_of_init 0992                   ??_main 0042                   ??_init 0026  
          __activetblptr 0002                   _ADCON1 0FC1                   ?_fputc 0027  
                 ?_putch 0026                   _SPBRGH 0FB0             vfprintf@cfmt 003C  
                 _getBTN 06DA         __end_of_initUART 0950                   _setLED 07F4  
                 clear_0 0956              setLED@value 0029                   isa$std 0001  
                 _printf 0910                   fputc@c 0027             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
       __end_of_vfprintf 0910               __accesstop 0080  __end_of__initialization 095C  
          ___rparam_used 0001           __pcstackCOMRAM 0026            __end_of_fputc 06DA  
          __end_of_putch 097C                  ??_fputc 002B                  ??_putch 0026  
                ?_getBTN 0026                  ?_setLED 0029                  ?_printf 003E  
              ?_initUART 0026                  __Hparam 0000                  __Lparam 0000  
              ?_vfprintf 0036             __psmallconst 0600                  __pcinit 0950  
                __ramtop 0600                  __ptext0 086E                  __ptext1 07F4  
                __ptext2 0910                  __ptext3 08C2                  __ptext4 0776  
                __ptext5 0610                  __ptext6 0966                  __ptext7 0936  
                __ptext8 097C                  __ptext9 06DA     end_of_initialization 095C  
             ??_initUART 0026                  fputc@fp 0029            __Lmediumconst 0000  
      __end_of_vfpfcnvrt 07F4                _RCSTAbits 0FAB                  postdec2 0FDD  
                postinc0 0FEE                  postinc1 0FE6                  postinc2 0FDE  
             ??_vfprintf 003C                _PORTBbits 0F81                _PORTDbits 0F83  
              _TRISCbits 0F94                _TXSTAbits 0FAC              vfpfcnvrt@ap 0034  
            vfpfcnvrt@fp 0030           __end_of_getBTN 0776              _BAUDCONbits 0FB8  
         __end_of_setLED 086E           __end_of_printf 0936      start_initialization 0950  
            vfprintf@fmt 0038                 ??_getBTN 0026                 ??_setLED 002A  
               ??_printf 0040              __pbssCOMRAM 0001              __smallconst 0600  
              getBTN@pos 0028                 _RCONbits 0FD0                _vfpfcnvrt 0776  
            _INTCON2bits 0FF1                 __Hrparam 0000               vfprintf@ap 003A  
               __Lrparam 0000               vfprintf@fp 0036                setLED@pos 002C  
             ?_vfpfcnvrt 0030                 _initUART 0936                 isa$xinst 0000  
               _vfprintf 08C2                printf@fmt 003E                putch@byte 0026  
             _INTCONbits 0FF2                 printf@ap 0040              ??_vfpfcnvrt 0036  
