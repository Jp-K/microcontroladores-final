

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 06 01:38:28 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4520 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     _PORTCbits	set	3970
    72   000000                     _PORTDbits	set	3971
    73   000000                     _PORTD	set	3971
    74   000000                     _PORTBbits	set	3969
    75   000000                     _TXSTAbits	set	4012
    76   000000                     _TXREG	set	4013
    77   000000                     _SPBRG	set	4015
    78   000000                     _INTCONbits	set	4082
    79   000000                     _TRISB	set	3987
    80   000000                     _TRISCbits	set	3988
    81   000000                     _TRISD	set	3989
    82   000000                     _RCSTAbits	set	4011
    83   000000                     _BAUDCONbits	set	4024
    84   000000                     _SPBRGH	set	4016
    85   000000                     _ADCON1	set	4033
    86   000000                     _RCONbits	set	4048
    87   000000                     _INTCON2bits	set	4081
    88   000000                     _INTCON3bits	set	4080
    89                           
    90                           	psect	smallconst
    91   000600                     __psmallconst:
    92                           	callstack 0
    93   000600  00                 	db	0
    94   000601                     STR_1:
    95   000601  49                 	db	73	;'I'
    96   000602  6E                 	db	110	;'n'
    97   000603  69                 	db	105	;'i'
    98   000604  74                 	db	116	;'t'
    99   000605  20                 	db	32
   100   000606  55                 	db	85	;'U'
   101   000607  41                 	db	65	;'A'
   102   000608  52                 	db	82	;'R'
   103   000609  54                 	db	84	;'T'
   104   00060A  21                 	db	33
   105   00060B  20                 	db	32
   106   00060C  0A                 	db	10
   107   00060D  00                 	db	0
   108   00060E                     STR_4:
   109   00060E  70                 	db	112	;'p'
   110   00060F  65                 	db	101	;'e'
   111   000610  72                 	db	114	;'r'
   112   000611  64                 	db	100	;'d'
   113   000612  65                 	db	101	;'e'
   114   000613  75                 	db	117	;'u'
   115   000614  20                 	db	32
   116   000615  00                 	db	0
   117   000616                     STR_5:
   118   000616  67                 	db	103	;'g'
   119   000617  61                 	db	97	;'a'
   120   000618  6E                 	db	110	;'n'
   121   000619  68                 	db	104	;'h'
   122   00061A  6F                 	db	111	;'o'
   123   00061B  75                 	db	117	;'u'
   124   00061C  20                 	db	32
   125   00061D  00                 	db	0
   126   00061E                     STR_2:
   127   00061E  25                 	db	37
   128   00061F  64                 	db	100	;'d'
   129   000620  20                 	db	32
   130   000621  00                 	db	0
   131   000622  00                 	db	0	; dummy byte at the end
   132   000000                     
   133                           ; #config settings
   134                           
   135                           	psect	cinit
   136   00160E                     __pcinit:
   137                           	callstack 0
   138   00160E                     start_initialization:
   139                           	callstack 0
   140   00160E                     __initialization:
   141                           	callstack 0
   142                           
   143                           ; Clear objects allocated to BANK0 (56 bytes)
   144   00160E  EE00  F080         	lfsr	0,__pbssBANK0
   145   001612  0E38               	movlw	56
   146   001614                     clear_0:
   147   001614  6AEE               	clrf	postinc0,c
   148   001616  06E8               	decf	wreg,f,c
   149   001618  E1FD               	bnz	clear_0
   150                           
   151                           ; Clear objects allocated to COMRAM (17 bytes)
   152   00161A  EE00  F054         	lfsr	0,__pbssCOMRAM
   153   00161E  0E11               	movlw	17
   154   001620                     clear_1:
   155   001620  6AEE               	clrf	postinc0,c
   156   001622  06E8               	decf	wreg,f,c
   157   001624  E1FD               	bnz	clear_1
   158   001626                     end_of_initialization:
   159                           	callstack 0
   160   001626                     __end_of__initialization:
   161                           	callstack 0
   162   001626  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   163   001628  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   164   00162A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165   00162C  6EF8               	movwf	tblptru,c
   166   00162E  0100               	movlb	0
   167   001630  EF12  F003         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssCOMRAM
   170   000054                     __pbssCOMRAM:
   171                           	callstack 0
   172   000054                     	ds	8
   173   00005C                     _width:
   174                           	callstack 0
   175   00005C                     	ds	2
   176   00005E                     _prec:
   177                           	callstack 0
   178   00005E                     	ds	2
   179   000060                     _flags:
   180                           	callstack 0
   181   000060                     	ds	1
   182   000061                     _seed:
   183                           	callstack 0
   184   000061                     	ds	4
   185                           
   186                           	psect	bssBANK0
   187   000080                     __pbssBANK0:
   188                           	callstack 0
   189   000080                     	ds	8
   190   000088                     	ds	8
   191   000090                     _pressedBTN4:
   192                           	callstack 0
   193   000090                     	ds	2
   194   000092                     _pressedBTN3:
   195                           	callstack 0
   196   000092                     	ds	2
   197   000094                     _pressedBTN2:
   198                           	callstack 0
   199   000094                     	ds	2
   200   000096                     _pressedBTN1:
   201                           	callstack 0
   202   000096                     	ds	2
   203   000098                     _dbuf:
   204                           	callstack 0
   205   000098                     	ds	32
   206                           
   207                           	psect	cstackBANK0
   208   0000B8                     __pcstackBANK0:
   209                           	callstack 0
   210   0000B8                     main@possui_sequencia_facil:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x0
   214   0000B8                     	ds	2
   215   0000BA                     main@sequencia_facil_perdeu:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x2
   219   0000BA                     	ds	2
   220   0000BC                     main@possui_sequencia_media:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x4
   224   0000BC                     	ds	2
   225   0000BE                     main@esperando_sequencia_facil:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x6
   229   0000BE                     	ds	2
   230   0000C0                     main@array:
   231                           	callstack 0
   232                           
   233                           ; 8 bytes @ 0x8
   234   0000C0                     	ds	8
   235   0000C8                     main@sequencia_facil:
   236                           	callstack 0
   237                           
   238                           ; 8 bytes @ 0x10
   239   0000C8                     	ds	8
   240   0000D0                     main@sequencia_facil_finalizou:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x18
   244   0000D0                     	ds	2
   245   0000D2                     main@i:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x1A
   249   0000D2                     	ds	2
   250   0000D4                     main@i_795:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x1C
   254   0000D4                     	ds	2
   255   0000D6                     main@r:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x1E
   259   0000D6                     	ds	2
   260   0000D8                     main@i_784:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x20
   264   0000D8                     	ds	2
   265   0000DA                     main@i_787:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x22
   269   0000DA                     	ds	2
   270   0000DC                     main@i_788:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x24
   274   0000DC                     	ds	2
   275   0000DE                     main@i_789:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x26
   279   0000DE                     	ds	2
   280   0000E0                     main@i_790:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x28
   284   0000E0                     	ds	2
   285   0000E2                     main@i_791:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x2A
   289   0000E2                     	ds	2
   290   0000E4                     main@estagio:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x2C
   294   0000E4                     	ds	2
   295                           
   296                           	psect	cstackCOMRAM
   297   000001                     __pcstackCOMRAM:
   298                           	callstack 0
   299   000001                     ??_interruption:
   300   000001                     
   301                           ; 1 bytes @ 0x0
   302   000001                     	ds	2
   303   000003                     interruption@i:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x2
   307   000003                     	ds	2
   308   000005                     interruption@i_687:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x4
   312   000005                     	ds	2
   313   000007                     interruption@i_688:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x6
   317   000007                     	ds	2
   318   000009                     interruption@i_689:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x8
   322   000009                     	ds	2
   323   00000B                     ?___awdiv:
   324                           	callstack 0
   325   00000B                     ?___awmod:
   326                           	callstack 0
   327   00000B                     ?___lmul:
   328                           	callstack 0
   329   00000B                     putch@byte:
   330                           	callstack 0
   331   00000B                     setLED@value:
   332                           	callstack 0
   333   00000B                     ___awdiv@dividend:
   334                           	callstack 0
   335   00000B                     ___awmod@dividend:
   336                           	callstack 0
   337   00000B                     ___lmul@multiplier:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0xA
   341   00000B                     	ds	1
   342   00000C                     ??_setLED:
   343   00000C                     fputc@c:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xB
   347   00000C                     	ds	1
   348   00000D                     ___awdiv@divisor:
   349                           	callstack 0
   350   00000D                     ___awmod@divisor:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xC
   354   00000D                     	ds	1
   355   00000E                     setLED@pos:
   356                           	callstack 0
   357   00000E                     fputc@fp:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0xD
   361   00000E                     	ds	1
   362   00000F                     ___awdiv@counter:
   363                           	callstack 0
   364   00000F                     ___awmod@counter:
   365                           	callstack 0
   366   00000F                     ___lmul@multiplicand:
   367                           	callstack 0
   368                           
   369                           ; 4 bytes @ 0xE
   370   00000F                     	ds	1
   371   000010                     ??_fputc:
   372   000010                     ___awdiv@sign:
   373                           	callstack 0
   374   000010                     ___awmod@sign:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0xF
   378   000010                     	ds	1
   379   000011                     ?_abs:
   380                           	callstack 0
   381   000011                     ___awdiv@quotient:
   382                           	callstack 0
   383   000011                     abs@a:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x10
   387   000011                     	ds	2
   388   000013                     ??_abs:
   389   000013                     ___lmul@product:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0x12
   393   000013                     	ds	2
   394   000015                     fputs@s:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x14
   398   000015                     	ds	2
   399   000017                     ?_rand:
   400                           	callstack 0
   401   000017                     fputs@fp:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x16
   405   000017                     	ds	2
   406   000019                     ??_rand:
   407   000019                     fputs@c:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x18
   411   000019                     	ds	1
   412   00001A                     fputs@i:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x19
   416   00001A                     	ds	2
   417   00001C                     pad@fp:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x1B
   421   00001C                     	ds	2
   422   00001E                     pad@buf:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x1D
   426   00001E                     	ds	2
   427   000020                     pad@p:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x1F
   431   000020                     	ds	2
   432   000022                     ??_pad:
   433                           
   434                           ; 1 bytes @ 0x21
   435   000022                     	ds	1
   436   000023                     pad@i:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x22
   440   000023                     	ds	2
   441   000025                     pad@w:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x24
   445   000025                     	ds	2
   446   000027                     dtoa@fp:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x26
   450   000027                     	ds	2
   451   000029                     dtoa@d:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x28
   455   000029                     	ds	2
   456   00002B                     _dtoa$1304:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2A
   460   00002B                     	ds	2
   461   00002D                     dtoa@p:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x2C
   465   00002D                     	ds	2
   466   00002F                     dtoa@w:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x2E
   470   00002F                     	ds	2
   471   000031                     dtoa@i:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x30
   475   000031                     	ds	2
   476   000033                     dtoa@s:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x32
   480   000033                     	ds	1
   481   000034                     vfpfcnvrt@fp:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x33
   485   000034                     	ds	2
   486   000036                     vfpfcnvrt@fmt:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x35
   490   000036                     	ds	2
   491   000038                     vfpfcnvrt@ap:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x37
   495   000038                     	ds	2
   496   00003A                     ??_vfpfcnvrt:
   497                           
   498                           ; 1 bytes @ 0x39
   499   00003A                     	ds	2
   500   00003C                     vfpfcnvrt@convarg:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x3B
   504   00003C                     	ds	4
   505   000040                     vfpfcnvrt@cp:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x3F
   509   000040                     	ds	2
   510   000042                     ?_vfprintf:
   511                           	callstack 0
   512   000042                     vfprintf@fp:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x41
   516   000042                     	ds	2
   517   000044                     vfprintf@fmt:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x43
   521   000044                     	ds	2
   522   000046                     vfprintf@ap:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x45
   526   000046                     	ds	2
   527   000048                     vfprintf@cfmt:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x47
   531   000048                     	ds	2
   532   00004A                     ?_printf:
   533                           	callstack 0
   534   00004A                     printf@fmt:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x49
   538   00004A                     	ds	4
   539   00004E                     printf@ap:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x4D
   543   00004E                     	ds	2
   544   000050                     ??_main:
   545                           
   546                           ; 1 bytes @ 0x4F
   547   000050                     	ds	4
   548                           
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 193 in file "main.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  i               2   42[BANK0 ] int 
   559 ;;  i               2   40[BANK0 ] int 
   560 ;;  i               2   38[BANK0 ] int 
   561 ;;  i               2   36[BANK0 ] int 
   562 ;;  i               2   34[BANK0 ] int 
   563 ;;  i               2   28[BANK0 ] int 
   564 ;;  i               2   32[BANK0 ] int 
   565 ;;  i               2   26[BANK0 ] int 
   566 ;;  sequencia_fa    8   16[BANK0 ] int [4]
   567 ;;  array           8    8[BANK0 ] int [4]
   568 ;;  estagio         2   44[BANK0 ] int 
   569 ;;  r               2   30[BANK0 ] int 
   570 ;;  sequencia_fa    2   24[BANK0 ] int 
   571 ;;  esperando_se    2    6[BANK0 ] int 
   572 ;;  possui_seque    2    4[BANK0 ] int 
   573 ;;  sequencia_fa    2    2[BANK0 ] int 
   574 ;;  possui_seque    2    0[BANK0 ] int 
   575 ;;  possui_seque    2    0        int 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   585 ;;      Params:         0       0       0       0       0       0       0
   586 ;;      Locals:         0      46       0       0       0       0       0
   587 ;;      Temps:          4       0       0       0       0       0       0
   588 ;;      Totals:         4      46       0       0       0       0       0
   589 ;;Total ram usage:       50 bytes
   590 ;; Hardware stack levels required when called: 9
   591 ;; This function calls:
   592 ;;		_init
   593 ;;		_initUART
   594 ;;		_printf
   595 ;;		_rand
   596 ;;		_setLED
   597 ;; This function is called by:
   598 ;;		Startup code after reset
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text0
   603   000624                     __ptext0:
   604                           	callstack 0
   605   000624                     _main:
   606                           	callstack 22
   607   000624                     
   608                           ;main.c: 194:     init();
   609   000624  EC2D  F00B         	call	_init	;wreg free
   610                           
   611                           ;main.c: 195:     initUART();
   612   000628  EC40  F00B         	call	_initUART	;wreg free
   613   00062C                     
   614                           ;main.c: 196:     printf("Init UART! \n");
   615   00062C  0E01               	movlw	low STR_1
   616   00062E  6E4A               	movwf	printf@fmt^0,c
   617   000630  0E06               	movlw	high STR_1
   618   000632  6E4B               	movwf	(printf@fmt+1)^0,c
   619   000634  EC1A  F00B         	call	_printf	;wreg free
   620   000638                     
   621                           ;main.c: 197:     int array[4] = {};
   622   000638  EE20  F0C0         	lfsr	2,main@array
   623   00063C  0E07               	movlw	7
   624   00063E                     u1471:
   625   00063E  6ADE               	clrf	postinc2,c
   626   000640  06E8               	decf	wreg,f,c
   627   000642  E2FD               	bc	u1471
   628   000644                     
   629                           ;main.c: 230:     int estagio = 0;
   630   000644  0E00               	movlw	0
   631   000646  0100               	movlb	0	; () banked
   632   000648  6FE5               	movwf	(main@estagio+1)& (0+255),b
   633   00064A  0E00               	movlw	0
   634   00064C  6FE4               	movwf	main@estagio& (0+255),b
   635   00064E                     
   636                           ; BSR set to: 0
   637                           ;main.c: 232:     int possui_sequencia_facil = 0;
   638   00064E  0E00               	movlw	0
   639   000650  6FB9               	movwf	(main@possui_sequencia_facil+1)& (0+255),b
   640   000652  0E00               	movlw	0
   641   000654  6FB8               	movwf	main@possui_sequencia_facil& (0+255),b
   642   000656                     
   643                           ; BSR set to: 0
   644                           ;main.c: 233:     int esperando_sequencia_facil = 0;
   645   000656  0E00               	movlw	0
   646   000658  6FBF               	movwf	(main@esperando_sequencia_facil+1)& (0+255),b
   647   00065A  0E00               	movlw	0
   648   00065C  6FBE               	movwf	main@esperando_sequencia_facil& (0+255),b
   649   00065E                     
   650                           ; BSR set to: 0
   651                           ;main.c: 234:     int sequencia_facil[4] = {0};
   652   00065E  EE20  F0C8         	lfsr	2,main@sequencia_facil
   653   000662  0E07               	movlw	7
   654   000664                     u1481:
   655   000664  6ADE               	clrf	postinc2,c
   656   000666  06E8               	decf	wreg,f,c
   657   000668  E2FD               	bc	u1481
   658   00066A                     
   659                           ; BSR set to: 0
   660                           ;main.c: 235:     int sequencia_facil_finalizou = 0;
   661   00066A  0E00               	movlw	0
   662   00066C  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
   663   00066E  0E00               	movlw	0
   664   000670  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
   665   000672                     
   666                           ; BSR set to: 0
   667                           ;main.c: 236:     int sequencia_facil_perdeu = 0;
   668   000672  0E00               	movlw	0
   669   000674  6FBB               	movwf	(main@sequencia_facil_perdeu+1)& (0+255),b
   670   000676  0E00               	movlw	0
   671   000678  6FBA               	movwf	main@sequencia_facil_perdeu& (0+255),b
   672   00067A                     
   673                           ; BSR set to: 0
   674                           ;main.c: 237:     int possui_sequencia_media = 0;
   675   00067A  0E00               	movlw	0
   676   00067C  6FBD               	movwf	(main@possui_sequencia_media+1)& (0+255),b
   677   00067E  0E00               	movlw	0
   678   000680  6FBC               	movwf	main@possui_sequencia_media& (0+255),b
   679   000682                     l1962:
   680                           
   681                           ;main.c: 242:         if (estagio == 0) {
   682   000682  0100               	movlb	0	; () banked
   683   000684  51E4               	movf	main@estagio& (0+255),w,b
   684   000686  11E5               	iorwf	(main@estagio+1)& (0+255),w,b
   685   000688  A4D8               	btfss	status,2,c
   686   00068A  EF49  F003         	goto	u1491
   687   00068E  EF4B  F003         	goto	u1490
   688   000692                     u1491:
   689   000692  EFC4  F005         	goto	l2112
   690   000696                     u1490:
   691   000696                     
   692                           ; BSR set to: 0
   693                           ;main.c: 243:             if (possui_sequencia_facil == 0) {
   694   000696  51B8               	movf	main@possui_sequencia_facil& (0+255),w,b
   695   000698  11B9               	iorwf	(main@possui_sequencia_facil+1)& (0+255),w,b
   696   00069A  A4D8               	btfss	status,2,c
   697   00069C  EF52  F003         	goto	u1501
   698   0006A0  EF54  F003         	goto	u1500
   699   0006A4                     u1501:
   700   0006A4  EF86  F003         	goto	l1984
   701   0006A8                     u1500:
   702   0006A8                     
   703                           ; BSR set to: 0
   704                           ;main.c: 244:                 for (int i = 0; i < 4; i++) {
   705   0006A8  0E00               	movlw	0
   706   0006AA  6FD3               	movwf	(main@i+1)& (0+255),b
   707   0006AC  0E00               	movlw	0
   708   0006AE  6FD2               	movwf	main@i& (0+255),b
   709   0006B0                     l1972:
   710                           
   711                           ; BSR set to: 0
   712                           ;main.c: 245:                     r = rand() % 4;
   713   0006B0  EC33  F00A         	call	_rand	;wreg free
   714   0006B4  0E03               	movlw	3
   715   0006B6  1417               	andwf	?_rand^0,w,c
   716   0006B8  0100               	movlb	0	; () banked
   717   0006BA  6FD6               	movwf	main@r& (0+255),b
   718   0006BC  6BD7               	clrf	(main@r+1)& (0+255),b
   719   0006BE                     
   720                           ; BSR set to: 0
   721                           ;main.c: 246:                     r = r + 1;
   722   0006BE  0E01               	movlw	1
   723   0006C0  25D6               	addwf	main@r& (0+255),w,b
   724   0006C2  6FD6               	movwf	main@r& (0+255),b
   725   0006C4  0E00               	movlw	0
   726   0006C6  21D7               	addwfc	(main@r+1)& (0+255),w,b
   727   0006C8  6FD7               	movwf	(main@r+1)& (0+255),b
   728   0006CA                     
   729                           ; BSR set to: 0
   730                           ;main.c: 247:                     array[i] = r;
   731   0006CA  90D8               	bcf	status,0,c
   732   0006CC  35D2               	rlcf	main@i& (0+255),w,b
   733   0006CE  6ED9               	movwf	fsr2l,c
   734   0006D0  35D3               	rlcf	(main@i+1)& (0+255),w,b
   735   0006D2  6EDA               	movwf	fsr2h,c
   736   0006D4  0EC0               	movlw	low main@array
   737   0006D6  26D9               	addwf	fsr2l,f,c
   738   0006D8  0E00               	movlw	high main@array
   739   0006DA  22DA               	addwfc	fsr2h,f,c
   740   0006DC  C0D6  FFDE         	movff	main@r,postinc2
   741   0006E0  C0D7  FFDD         	movff	main@r+1,postdec2
   742   0006E4                     
   743                           ; BSR set to: 0
   744                           ;main.c: 248:                 }
   745   0006E4  4BD2               	infsnz	main@i& (0+255),f,b
   746   0006E6  2BD3               	incf	(main@i+1)& (0+255),f,b
   747   0006E8                     
   748                           ; BSR set to: 0
   749   0006E8  BFD3               	btfsc	(main@i+1)& (0+255),7,b
   750   0006EA  EF80  F003         	goto	u1511
   751   0006EE  51D3               	movf	(main@i+1)& (0+255),w,b
   752   0006F0  E109               	bnz	u1510
   753   0006F2  0E04               	movlw	4
   754   0006F4  5DD2               	subwf	main@i& (0+255),w,b
   755   0006F6  A0D8               	btfss	status,0,c
   756   0006F8  EF80  F003         	goto	u1511
   757   0006FC  EF82  F003         	goto	u1510
   758   000700                     u1511:
   759   000700  EF58  F003         	goto	l1972
   760   000704                     u1510:
   761   000704                     
   762                           ; BSR set to: 0
   763                           ;main.c: 249:                 possui_sequencia_facil = 1;
   764   000704  0E00               	movlw	0
   765   000706  6FB9               	movwf	(main@possui_sequencia_facil+1)& (0+255),b
   766   000708  0E01               	movlw	1
   767   00070A  6FB8               	movwf	main@possui_sequencia_facil& (0+255),b
   768   00070C                     l1984:
   769                           
   770                           ; BSR set to: 0
   771                           ;main.c: 252:             if (esperando_sequencia_facil == 0) {
   772   00070C  51BE               	movf	main@esperando_sequencia_facil& (0+255),w,b
   773   00070E  11BF               	iorwf	(main@esperando_sequencia_facil+1)& (0+255),w,b
   774   000710  A4D8               	btfss	status,2,c
   775   000712  EF8D  F003         	goto	u1521
   776   000716  EF8F  F003         	goto	u1520
   777   00071A                     u1521:
   778   00071A  EFEC  F003         	goto	l126
   779   00071E                     u1520:
   780   00071E                     
   781                           ; BSR set to: 0
   782                           ;main.c: 253:                 for (int i = 0; i < 4; i++) {
   783   00071E  0E00               	movlw	0
   784   000720  6FD9               	movwf	(main@i_784+1)& (0+255),b
   785   000722  0E00               	movlw	0
   786   000724  6FD8               	movwf	main@i_784& (0+255),b
   787   000726                     l1992:
   788                           
   789                           ; BSR set to: 0
   790                           ;main.c: 254:                     printf("%d ", array[i]);
   791   000726  0E1E               	movlw	low STR_2
   792   000728  6E4A               	movwf	printf@fmt^0,c
   793   00072A  0E06               	movlw	high STR_2
   794   00072C  6E4B               	movwf	(printf@fmt+1)^0,c
   795   00072E  90D8               	bcf	status,0,c
   796   000730  35D8               	rlcf	main@i_784& (0+255),w,b
   797   000732  6ED9               	movwf	fsr2l,c
   798   000734  35D9               	rlcf	(main@i_784+1)& (0+255),w,b
   799   000736  6EDA               	movwf	fsr2h,c
   800   000738  0EC0               	movlw	low main@array
   801   00073A  26D9               	addwf	fsr2l,f,c
   802   00073C  0E00               	movlw	high main@array
   803   00073E  22DA               	addwfc	fsr2h,f,c
   804   000740  CFDE F04C          	movff	postinc2,?_printf+2
   805   000744  CFDD F04D          	movff	postdec2,?_printf+3
   806   000748  EC1A  F00B         	call	_printf	;wreg free
   807   00074C                     
   808                           ;main.c: 255:                     setLED(array[i], 1);
   809   00074C  0E01               	movlw	1
   810   00074E  6E0B               	movwf	setLED@value^0,c
   811   000750  90D8               	bcf	status,0,c
   812   000752  0100               	movlb	0	; () banked
   813   000754  35D8               	rlcf	main@i_784& (0+255),w,b
   814   000756  6ED9               	movwf	fsr2l,c
   815   000758  35D9               	rlcf	(main@i_784+1)& (0+255),w,b
   816   00075A  6EDA               	movwf	fsr2h,c
   817   00075C  0EC0               	movlw	low main@array
   818   00075E  26D9               	addwf	fsr2l,f,c
   819   000760  0E00               	movlw	high main@array
   820   000762  22DA               	addwfc	fsr2h,f,c
   821   000764  50DF               	movf	indf2,w,c
   822   000766  ECB9  F009         	call	_setLED
   823   00076A                     
   824                           ;main.c: 256:                     _delay((unsigned long)((1000)*(16000000/4000.0)));
   825   00076A  0E15               	movlw	21
   826   00076C  6E51               	movwf	(??_main+1)^0,c
   827   00076E  0E4B               	movlw	75
   828   000770  6E50               	movwf	??_main^0,c
   829   000772  0EBE               	movlw	190
   830   000774                     u1797:
   831   000774  2EE8               	decfsz	wreg,f,c
   832   000776  D7FE               	bra	u1797
   833   000778  2E50               	decfsz	??_main^0,f,c
   834   00077A  D7FC               	bra	u1797
   835   00077C  2E51               	decfsz	(??_main+1)^0,f,c
   836   00077E  D7FA               	bra	u1797
   837   000780  D000               	nop2	
   838   000782                     
   839                           ;main.c: 257:                     setLED(array[i], 0);
   840   000782  0E00               	movlw	0
   841   000784  6E0B               	movwf	setLED@value^0,c
   842   000786  90D8               	bcf	status,0,c
   843   000788  0100               	movlb	0	; () banked
   844   00078A  35D8               	rlcf	main@i_784& (0+255),w,b
   845   00078C  6ED9               	movwf	fsr2l,c
   846   00078E  35D9               	rlcf	(main@i_784+1)& (0+255),w,b
   847   000790  6EDA               	movwf	fsr2h,c
   848   000792  0EC0               	movlw	low main@array
   849   000794  26D9               	addwf	fsr2l,f,c
   850   000796  0E00               	movlw	high main@array
   851   000798  22DA               	addwfc	fsr2h,f,c
   852   00079A  50DF               	movf	indf2,w,c
   853   00079C  ECB9  F009         	call	_setLED
   854   0007A0                     
   855                           ;main.c: 258:                     _delay((unsigned long)((500)*(16000000/4000.0)));
   856   0007A0  0E0B               	movlw	11
   857   0007A2  6E51               	movwf	(??_main+1)^0,c
   858   0007A4  0E26               	movlw	38
   859   0007A6  6E50               	movwf	??_main^0,c
   860   0007A8  0E5E               	movlw	94
   861   0007AA                     u1807:
   862   0007AA  2EE8               	decfsz	wreg,f,c
   863   0007AC  D7FE               	bra	u1807
   864   0007AE  2E50               	decfsz	??_main^0,f,c
   865   0007B0  D7FC               	bra	u1807
   866   0007B2  2E51               	decfsz	(??_main+1)^0,f,c
   867   0007B4  D7FA               	bra	u1807
   868   0007B6                     
   869                           ;main.c: 259:                 }
   870   0007B6  0100               	movlb	0	; () banked
   871   0007B8  4BD8               	infsnz	main@i_784& (0+255),f,b
   872   0007BA  2BD9               	incf	(main@i_784+1)& (0+255),f,b
   873   0007BC                     
   874                           ; BSR set to: 0
   875   0007BC  BFD9               	btfsc	(main@i_784+1)& (0+255),7,b
   876   0007BE  EFEA  F003         	goto	u1531
   877   0007C2  51D9               	movf	(main@i_784+1)& (0+255),w,b
   878   0007C4  E109               	bnz	u1530
   879   0007C6  0E04               	movlw	4
   880   0007C8  5DD8               	subwf	main@i_784& (0+255),w,b
   881   0007CA  A0D8               	btfss	status,0,c
   882   0007CC  EFEA  F003         	goto	u1531
   883   0007D0  EFEC  F003         	goto	u1530
   884   0007D4                     u1531:
   885   0007D4  EF93  F003         	goto	l1992
   886   0007D8                     u1530:
   887   0007D8                     l126:
   888                           
   889                           ; BSR set to: 0
   890                           ;main.c: 263:             if (esperando_sequencia_facil = 1) {
   891   0007D8  0E00               	movlw	0
   892   0007DA  6FBF               	movwf	(main@esperando_sequencia_facil+1)& (0+255),b
   893   0007DC  0E01               	movlw	1
   894   0007DE  6FBE               	movwf	main@esperando_sequencia_facil& (0+255),b
   895   0007E0                     
   896                           ; BSR set to: 0
   897                           ;main.c: 264:                 if (pressedBTN1 == 1) {
   898   0007E0  0596               	decf	_pressedBTN1& (0+255),w,b
   899   0007E2  1197               	iorwf	(_pressedBTN1+1)& (0+255),w,b
   900   0007E4  A4D8               	btfss	status,2,c
   901   0007E6  EFF7  F003         	goto	u1541
   902   0007EA  EFF9  F003         	goto	u1540
   903   0007EE                     u1541:
   904   0007EE  EF4C  F004         	goto	l2028
   905   0007F2                     u1540:
   906   0007F2                     
   907                           ; BSR set to: 0
   908                           ;main.c: 265:                     pressedBTN1 = 0;
   909   0007F2  0E00               	movlw	0
   910   0007F4  6F97               	movwf	(_pressedBTN1+1)& (0+255),b
   911   0007F6  0E00               	movlw	0
   912   0007F8  6F96               	movwf	_pressedBTN1& (0+255),b
   913                           
   914                           ;main.c: 266:                     sequencia_facil_finalizou = 1;
   915   0007FA  0E00               	movlw	0
   916   0007FC  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
   917   0007FE  0E01               	movlw	1
   918   000800  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
   919                           
   920                           ;main.c: 267:                     for (int i = 0; i < 4; i++) {
   921   000802  0E00               	movlw	0
   922   000804  6FDB               	movwf	(main@i_787+1)& (0+255),b
   923   000806  0E00               	movlw	0
   924   000808  6FDA               	movwf	main@i_787& (0+255),b
   925   00080A                     l2012:
   926                           
   927                           ; BSR set to: 0
   928   00080A  BFDB               	btfsc	(main@i_787+1)& (0+255),7,b
   929   00080C  EF11  F004         	goto	u1551
   930   000810  51DB               	movf	(main@i_787+1)& (0+255),w,b
   931   000812  E109               	bnz	u1550
   932   000814  0E04               	movlw	4
   933   000816  5DDA               	subwf	main@i_787& (0+255),w,b
   934   000818  A0D8               	btfss	status,0,c
   935   00081A  EF11  F004         	goto	u1551
   936   00081E  EF13  F004         	goto	u1550
   937   000822                     u1551:
   938   000822  EF15  F004         	goto	l2016
   939   000826                     u1550:
   940   000826  EF54  F005         	goto	l2088
   941   00082A                     l2016:
   942                           
   943                           ; BSR set to: 0
   944                           ;main.c: 268:                         if (sequencia_facil[i] == 0) {
   945   00082A  90D8               	bcf	status,0,c
   946   00082C  35DA               	rlcf	main@i_787& (0+255),w,b
   947   00082E  6ED9               	movwf	fsr2l,c
   948   000830  35DB               	rlcf	(main@i_787+1)& (0+255),w,b
   949   000832  6EDA               	movwf	fsr2h,c
   950   000834  0EC8               	movlw	low main@sequencia_facil
   951   000836  26D9               	addwf	fsr2l,f,c
   952   000838  0E00               	movlw	high main@sequencia_facil
   953   00083A  22DA               	addwfc	fsr2h,f,c
   954   00083C  50DE               	movf	postinc2,w,c
   955   00083E  10DE               	iorwf	postinc2,w,c
   956   000840  A4D8               	btfss	status,2,c
   957   000842  EF25  F004         	goto	u1561
   958   000846  EF27  F004         	goto	u1560
   959   00084A                     u1561:
   960   00084A  EF48  F004         	goto	l2024
   961   00084E                     u1560:
   962   00084E                     
   963                           ; BSR set to: 0
   964                           ;main.c: 269:                             sequencia_facil[i] = 1;
   965   00084E  90D8               	bcf	status,0,c
   966   000850  35DA               	rlcf	main@i_787& (0+255),w,b
   967   000852  6ED9               	movwf	fsr2l,c
   968   000854  35DB               	rlcf	(main@i_787+1)& (0+255),w,b
   969   000856  6EDA               	movwf	fsr2h,c
   970   000858  0EC8               	movlw	low main@sequencia_facil
   971   00085A  26D9               	addwf	fsr2l,f,c
   972   00085C  0E00               	movlw	high main@sequencia_facil
   973   00085E  22DA               	addwfc	fsr2h,f,c
   974   000860  0E01               	movlw	1
   975   000862  6EDE               	movwf	postinc2,c
   976   000864  0E00               	movlw	0
   977   000866  6EDD               	movwf	postdec2,c
   978   000868                     
   979                           ; BSR set to: 0
   980                           ;main.c: 270:                             if (i < 3) {
   981   000868  BFDB               	btfsc	(main@i_787+1)& (0+255),7,b
   982   00086A  EF42  F004         	goto	u1570
   983   00086E  51DB               	movf	(main@i_787+1)& (0+255),w,b
   984   000870  E107               	bnz	u1571
   985   000872  0E03               	movlw	3
   986   000874  5DDA               	subwf	main@i_787& (0+255),w,b
   987   000876  B0D8               	btfsc	status,0,c
   988   000878  EF40  F004         	goto	u1571
   989   00087C  EF42  F004         	goto	u1570
   990   000880                     u1571:
   991   000880  EF54  F005         	goto	l2088
   992   000884                     u1570:
   993   000884                     l2022:
   994                           
   995                           ; BSR set to: 0
   996                           ;main.c: 271:                                 sequencia_facil_finalizou = 0;
   997   000884  0E00               	movlw	0
   998   000886  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
   999   000888  0E00               	movlw	0
  1000   00088A  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
  1001   00088C  EF54  F005         	goto	l2088
  1002   000890                     l2024:
  1003                           
  1004                           ; BSR set to: 0
  1005                           ;main.c: 275:                     }
  1006   000890  4BDA               	infsnz	main@i_787& (0+255),f,b
  1007   000892  2BDB               	incf	(main@i_787+1)& (0+255),f,b
  1008   000894  EF05  F004         	goto	l2012
  1009   000898                     l2028:
  1010                           
  1011                           ; BSR set to: 0
  1012   000898  0594               	decf	_pressedBTN2& (0+255),w,b
  1013   00089A  1195               	iorwf	(_pressedBTN2+1)& (0+255),w,b
  1014   00089C  A4D8               	btfss	status,2,c
  1015   00089E  EF53  F004         	goto	u1581
  1016   0008A2  EF55  F004         	goto	u1580
  1017   0008A6                     u1581:
  1018   0008A6  EFA4  F004         	goto	l2048
  1019   0008AA                     u1580:
  1020   0008AA                     
  1021                           ; BSR set to: 0
  1022                           ;main.c: 278:                     pressedBTN2 = 0;
  1023   0008AA  0E00               	movlw	0
  1024   0008AC  6F95               	movwf	(_pressedBTN2+1)& (0+255),b
  1025   0008AE  0E00               	movlw	0
  1026   0008B0  6F94               	movwf	_pressedBTN2& (0+255),b
  1027                           
  1028                           ;main.c: 279:                     sequencia_facil_finalizou = 1;
  1029   0008B2  0E00               	movlw	0
  1030   0008B4  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
  1031   0008B6  0E01               	movlw	1
  1032   0008B8  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
  1033                           
  1034                           ;main.c: 280:                     for (int i = 0; i < 4; i++) {
  1035   0008BA  0E00               	movlw	0
  1036   0008BC  6FDD               	movwf	(main@i_788+1)& (0+255),b
  1037   0008BE  0E00               	movlw	0
  1038   0008C0  6FDC               	movwf	main@i_788& (0+255),b
  1039   0008C2                     l2032:
  1040                           
  1041                           ; BSR set to: 0
  1042   0008C2  BFDD               	btfsc	(main@i_788+1)& (0+255),7,b
  1043   0008C4  EF6D  F004         	goto	u1591
  1044   0008C8  51DD               	movf	(main@i_788+1)& (0+255),w,b
  1045   0008CA  E109               	bnz	u1590
  1046   0008CC  0E04               	movlw	4
  1047   0008CE  5DDC               	subwf	main@i_788& (0+255),w,b
  1048   0008D0  A0D8               	btfss	status,0,c
  1049   0008D2  EF6D  F004         	goto	u1591
  1050   0008D6  EF6F  F004         	goto	u1590
  1051   0008DA                     u1591:
  1052   0008DA  EF71  F004         	goto	l2036
  1053   0008DE                     u1590:
  1054   0008DE  EF54  F005         	goto	l2088
  1055   0008E2                     l2036:
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;main.c: 281:                         if (sequencia_facil[i] == 0) {
  1059   0008E2  90D8               	bcf	status,0,c
  1060   0008E4  35DC               	rlcf	main@i_788& (0+255),w,b
  1061   0008E6  6ED9               	movwf	fsr2l,c
  1062   0008E8  35DD               	rlcf	(main@i_788+1)& (0+255),w,b
  1063   0008EA  6EDA               	movwf	fsr2h,c
  1064   0008EC  0EC8               	movlw	low main@sequencia_facil
  1065   0008EE  26D9               	addwf	fsr2l,f,c
  1066   0008F0  0E00               	movlw	high main@sequencia_facil
  1067   0008F2  22DA               	addwfc	fsr2h,f,c
  1068   0008F4  50DE               	movf	postinc2,w,c
  1069   0008F6  10DE               	iorwf	postinc2,w,c
  1070   0008F8  A4D8               	btfss	status,2,c
  1071   0008FA  EF81  F004         	goto	u1601
  1072   0008FE  EF83  F004         	goto	u1600
  1073   000902                     u1601:
  1074   000902  EFA0  F004         	goto	l2044
  1075   000906                     u1600:
  1076   000906                     
  1077                           ; BSR set to: 0
  1078                           ;main.c: 282:                             sequencia_facil[i] = 2;
  1079   000906  90D8               	bcf	status,0,c
  1080   000908  35DC               	rlcf	main@i_788& (0+255),w,b
  1081   00090A  6ED9               	movwf	fsr2l,c
  1082   00090C  35DD               	rlcf	(main@i_788+1)& (0+255),w,b
  1083   00090E  6EDA               	movwf	fsr2h,c
  1084   000910  0EC8               	movlw	low main@sequencia_facil
  1085   000912  26D9               	addwf	fsr2l,f,c
  1086   000914  0E00               	movlw	high main@sequencia_facil
  1087   000916  22DA               	addwfc	fsr2h,f,c
  1088   000918  0E02               	movlw	2
  1089   00091A  6EDE               	movwf	postinc2,c
  1090   00091C  0E00               	movlw	0
  1091   00091E  6EDD               	movwf	postdec2,c
  1092   000920                     
  1093                           ; BSR set to: 0
  1094                           ;main.c: 283:                             if (i < 3) {
  1095   000920  BFDD               	btfsc	(main@i_788+1)& (0+255),7,b
  1096   000922  EF9E  F004         	goto	u1610
  1097   000926  51DD               	movf	(main@i_788+1)& (0+255),w,b
  1098   000928  E107               	bnz	u1611
  1099   00092A  0E03               	movlw	3
  1100   00092C  5DDC               	subwf	main@i_788& (0+255),w,b
  1101   00092E  B0D8               	btfsc	status,0,c
  1102   000930  EF9C  F004         	goto	u1611
  1103   000934  EF9E  F004         	goto	u1610
  1104   000938                     u1611:
  1105   000938  EF54  F005         	goto	l2088
  1106   00093C                     u1610:
  1107   00093C  EF42  F004         	goto	l2022
  1108   000940                     l2044:
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;main.c: 288:                     }
  1112   000940  4BDC               	infsnz	main@i_788& (0+255),f,b
  1113   000942  2BDD               	incf	(main@i_788+1)& (0+255),f,b
  1114   000944  EF61  F004         	goto	l2032
  1115   000948                     l2048:
  1116                           
  1117                           ; BSR set to: 0
  1118   000948  0592               	decf	_pressedBTN3& (0+255),w,b
  1119   00094A  1193               	iorwf	(_pressedBTN3+1)& (0+255),w,b
  1120   00094C  A4D8               	btfss	status,2,c
  1121   00094E  EFAB  F004         	goto	u1621
  1122   000952  EFAD  F004         	goto	u1620
  1123   000956                     u1621:
  1124   000956  EFFC  F004         	goto	l2068
  1125   00095A                     u1620:
  1126   00095A                     
  1127                           ; BSR set to: 0
  1128                           ;main.c: 291:                     pressedBTN3 = 0;
  1129   00095A  0E00               	movlw	0
  1130   00095C  6F93               	movwf	(_pressedBTN3+1)& (0+255),b
  1131   00095E  0E00               	movlw	0
  1132   000960  6F92               	movwf	_pressedBTN3& (0+255),b
  1133                           
  1134                           ;main.c: 292:                     sequencia_facil_finalizou = 1;
  1135   000962  0E00               	movlw	0
  1136   000964  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
  1137   000966  0E01               	movlw	1
  1138   000968  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
  1139                           
  1140                           ;main.c: 293:                     for (int i = 0; i < 4; i++) {
  1141   00096A  0E00               	movlw	0
  1142   00096C  6FDF               	movwf	(main@i_789+1)& (0+255),b
  1143   00096E  0E00               	movlw	0
  1144   000970  6FDE               	movwf	main@i_789& (0+255),b
  1145   000972                     l2052:
  1146                           
  1147                           ; BSR set to: 0
  1148   000972  BFDF               	btfsc	(main@i_789+1)& (0+255),7,b
  1149   000974  EFC5  F004         	goto	u1631
  1150   000978  51DF               	movf	(main@i_789+1)& (0+255),w,b
  1151   00097A  E109               	bnz	u1630
  1152   00097C  0E04               	movlw	4
  1153   00097E  5DDE               	subwf	main@i_789& (0+255),w,b
  1154   000980  A0D8               	btfss	status,0,c
  1155   000982  EFC5  F004         	goto	u1631
  1156   000986  EFC7  F004         	goto	u1630
  1157   00098A                     u1631:
  1158   00098A  EFC9  F004         	goto	l2056
  1159   00098E                     u1630:
  1160   00098E  EF54  F005         	goto	l2088
  1161   000992                     l2056:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;main.c: 294:                         if (sequencia_facil[i] == 0) {
  1165   000992  90D8               	bcf	status,0,c
  1166   000994  35DE               	rlcf	main@i_789& (0+255),w,b
  1167   000996  6ED9               	movwf	fsr2l,c
  1168   000998  35DF               	rlcf	(main@i_789+1)& (0+255),w,b
  1169   00099A  6EDA               	movwf	fsr2h,c
  1170   00099C  0EC8               	movlw	low main@sequencia_facil
  1171   00099E  26D9               	addwf	fsr2l,f,c
  1172   0009A0  0E00               	movlw	high main@sequencia_facil
  1173   0009A2  22DA               	addwfc	fsr2h,f,c
  1174   0009A4  50DE               	movf	postinc2,w,c
  1175   0009A6  10DE               	iorwf	postinc2,w,c
  1176   0009A8  A4D8               	btfss	status,2,c
  1177   0009AA  EFD9  F004         	goto	u1641
  1178   0009AE  EFDB  F004         	goto	u1640
  1179   0009B2                     u1641:
  1180   0009B2  EFF8  F004         	goto	l2064
  1181   0009B6                     u1640:
  1182   0009B6                     
  1183                           ; BSR set to: 0
  1184                           ;main.c: 295:                             sequencia_facil[i] = 3;
  1185   0009B6  90D8               	bcf	status,0,c
  1186   0009B8  35DE               	rlcf	main@i_789& (0+255),w,b
  1187   0009BA  6ED9               	movwf	fsr2l,c
  1188   0009BC  35DF               	rlcf	(main@i_789+1)& (0+255),w,b
  1189   0009BE  6EDA               	movwf	fsr2h,c
  1190   0009C0  0EC8               	movlw	low main@sequencia_facil
  1191   0009C2  26D9               	addwf	fsr2l,f,c
  1192   0009C4  0E00               	movlw	high main@sequencia_facil
  1193   0009C6  22DA               	addwfc	fsr2h,f,c
  1194   0009C8  0E03               	movlw	3
  1195   0009CA  6EDE               	movwf	postinc2,c
  1196   0009CC  0E00               	movlw	0
  1197   0009CE  6EDD               	movwf	postdec2,c
  1198   0009D0                     
  1199                           ; BSR set to: 0
  1200                           ;main.c: 296:                             if (i < 3) {
  1201   0009D0  BFDF               	btfsc	(main@i_789+1)& (0+255),7,b
  1202   0009D2  EFF6  F004         	goto	u1650
  1203   0009D6  51DF               	movf	(main@i_789+1)& (0+255),w,b
  1204   0009D8  E107               	bnz	u1651
  1205   0009DA  0E03               	movlw	3
  1206   0009DC  5DDE               	subwf	main@i_789& (0+255),w,b
  1207   0009DE  B0D8               	btfsc	status,0,c
  1208   0009E0  EFF4  F004         	goto	u1651
  1209   0009E4  EFF6  F004         	goto	u1650
  1210   0009E8                     u1651:
  1211   0009E8  EF54  F005         	goto	l2088
  1212   0009EC                     u1650:
  1213   0009EC  EF42  F004         	goto	l2022
  1214   0009F0                     l2064:
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;main.c: 301:                     }
  1218   0009F0  4BDE               	infsnz	main@i_789& (0+255),f,b
  1219   0009F2  2BDF               	incf	(main@i_789+1)& (0+255),f,b
  1220   0009F4  EFB9  F004         	goto	l2052
  1221   0009F8                     l2068:
  1222                           
  1223                           ; BSR set to: 0
  1224   0009F8  0590               	decf	_pressedBTN4& (0+255),w,b
  1225   0009FA  1191               	iorwf	(_pressedBTN4+1)& (0+255),w,b
  1226   0009FC  A4D8               	btfss	status,2,c
  1227   0009FE  EF03  F005         	goto	u1661
  1228   000A02  EF05  F005         	goto	u1660
  1229   000A06                     u1661:
  1230   000A06  EF54  F005         	goto	l2088
  1231   000A0A                     u1660:
  1232   000A0A                     
  1233                           ; BSR set to: 0
  1234                           ;main.c: 304:                     pressedBTN4 = 0;
  1235   000A0A  0E00               	movlw	0
  1236   000A0C  6F91               	movwf	(_pressedBTN4+1)& (0+255),b
  1237   000A0E  0E00               	movlw	0
  1238   000A10  6F90               	movwf	_pressedBTN4& (0+255),b
  1239                           
  1240                           ;main.c: 305:                     sequencia_facil_finalizou = 1;
  1241   000A12  0E00               	movlw	0
  1242   000A14  6FD1               	movwf	(main@sequencia_facil_finalizou+1)& (0+255),b
  1243   000A16  0E01               	movlw	1
  1244   000A18  6FD0               	movwf	main@sequencia_facil_finalizou& (0+255),b
  1245                           
  1246                           ;main.c: 306:                     for (int i = 0; i < 4; i++) {
  1247   000A1A  0E00               	movlw	0
  1248   000A1C  6FE1               	movwf	(main@i_790+1)& (0+255),b
  1249   000A1E  0E00               	movlw	0
  1250   000A20  6FE0               	movwf	main@i_790& (0+255),b
  1251   000A22                     l2072:
  1252                           
  1253                           ; BSR set to: 0
  1254   000A22  BFE1               	btfsc	(main@i_790+1)& (0+255),7,b
  1255   000A24  EF1D  F005         	goto	u1671
  1256   000A28  51E1               	movf	(main@i_790+1)& (0+255),w,b
  1257   000A2A  E109               	bnz	u1670
  1258   000A2C  0E04               	movlw	4
  1259   000A2E  5DE0               	subwf	main@i_790& (0+255),w,b
  1260   000A30  A0D8               	btfss	status,0,c
  1261   000A32  EF1D  F005         	goto	u1671
  1262   000A36  EF1F  F005         	goto	u1670
  1263   000A3A                     u1671:
  1264   000A3A  EF21  F005         	goto	l2076
  1265   000A3E                     u1670:
  1266   000A3E  EF54  F005         	goto	l2088
  1267   000A42                     l2076:
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;main.c: 307:                         if (sequencia_facil[i] == 0) {
  1271   000A42  90D8               	bcf	status,0,c
  1272   000A44  35E0               	rlcf	main@i_790& (0+255),w,b
  1273   000A46  6ED9               	movwf	fsr2l,c
  1274   000A48  35E1               	rlcf	(main@i_790+1)& (0+255),w,b
  1275   000A4A  6EDA               	movwf	fsr2h,c
  1276   000A4C  0EC8               	movlw	low main@sequencia_facil
  1277   000A4E  26D9               	addwf	fsr2l,f,c
  1278   000A50  0E00               	movlw	high main@sequencia_facil
  1279   000A52  22DA               	addwfc	fsr2h,f,c
  1280   000A54  50DE               	movf	postinc2,w,c
  1281   000A56  10DE               	iorwf	postinc2,w,c
  1282   000A58  A4D8               	btfss	status,2,c
  1283   000A5A  EF31  F005         	goto	u1681
  1284   000A5E  EF33  F005         	goto	u1680
  1285   000A62                     u1681:
  1286   000A62  EF50  F005         	goto	l2084
  1287   000A66                     u1680:
  1288   000A66                     
  1289                           ; BSR set to: 0
  1290                           ;main.c: 308:                             sequencia_facil[i] = 4;
  1291   000A66  90D8               	bcf	status,0,c
  1292   000A68  35E0               	rlcf	main@i_790& (0+255),w,b
  1293   000A6A  6ED9               	movwf	fsr2l,c
  1294   000A6C  35E1               	rlcf	(main@i_790+1)& (0+255),w,b
  1295   000A6E  6EDA               	movwf	fsr2h,c
  1296   000A70  0EC8               	movlw	low main@sequencia_facil
  1297   000A72  26D9               	addwf	fsr2l,f,c
  1298   000A74  0E00               	movlw	high main@sequencia_facil
  1299   000A76  22DA               	addwfc	fsr2h,f,c
  1300   000A78  0E04               	movlw	4
  1301   000A7A  6EDE               	movwf	postinc2,c
  1302   000A7C  0E00               	movlw	0
  1303   000A7E  6EDD               	movwf	postdec2,c
  1304   000A80                     
  1305                           ; BSR set to: 0
  1306                           ;main.c: 309:                             if (i < 3) {
  1307   000A80  BFE1               	btfsc	(main@i_790+1)& (0+255),7,b
  1308   000A82  EF4E  F005         	goto	u1690
  1309   000A86  51E1               	movf	(main@i_790+1)& (0+255),w,b
  1310   000A88  E107               	bnz	u1691
  1311   000A8A  0E03               	movlw	3
  1312   000A8C  5DE0               	subwf	main@i_790& (0+255),w,b
  1313   000A8E  B0D8               	btfsc	status,0,c
  1314   000A90  EF4C  F005         	goto	u1691
  1315   000A94  EF4E  F005         	goto	u1690
  1316   000A98                     u1691:
  1317   000A98  EF54  F005         	goto	l2088
  1318   000A9C                     u1690:
  1319   000A9C  EF42  F004         	goto	l2022
  1320   000AA0                     l2084:
  1321                           
  1322                           ; BSR set to: 0
  1323                           ;main.c: 314:                     }
  1324   000AA0  4BE0               	infsnz	main@i_790& (0+255),f,b
  1325   000AA2  2BE1               	incf	(main@i_790+1)& (0+255),f,b
  1326   000AA4  EF11  F005         	goto	l2072
  1327   000AA8                     l2088:
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;main.c: 318:                 if (sequencia_facil_finalizou == 1) {
  1331   000AA8  05D0               	decf	main@sequencia_facil_finalizou& (0+255),w,b
  1332   000AAA  11D1               	iorwf	(main@sequencia_facil_finalizou+1)& (0+255),w,b
  1333   000AAC  A4D8               	btfss	status,2,c
  1334   000AAE  EF5B  F005         	goto	u1701
  1335   000AB2  EF5D  F005         	goto	u1700
  1336   000AB6                     u1701:
  1337   000AB6  EF41  F003         	goto	l1962
  1338   000ABA                     u1700:
  1339   000ABA                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 319:                     for (int i = 0; i < 4; i++) {
  1342   000ABA  0E00               	movlw	0
  1343   000ABC  6FE3               	movwf	(main@i_791+1)& (0+255),b
  1344   000ABE  0E00               	movlw	0
  1345   000AC0  6FE2               	movwf	main@i_791& (0+255),b
  1346   000AC2                     l2092:
  1347                           
  1348                           ; BSR set to: 0
  1349   000AC2  BFE3               	btfsc	(main@i_791+1)& (0+255),7,b
  1350   000AC4  EF6D  F005         	goto	u1711
  1351   000AC8  51E3               	movf	(main@i_791+1)& (0+255),w,b
  1352   000ACA  E109               	bnz	u1710
  1353   000ACC  0E04               	movlw	4
  1354   000ACE  5DE2               	subwf	main@i_791& (0+255),w,b
  1355   000AD0  A0D8               	btfss	status,0,c
  1356   000AD2  EF6D  F005         	goto	u1711
  1357   000AD6  EF6F  F005         	goto	u1710
  1358   000ADA                     u1711:
  1359   000ADA  EF71  F005         	goto	l2096
  1360   000ADE                     u1710:
  1361   000ADE  EFAB  F005         	goto	l2106
  1362   000AE2                     l2096:
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;main.c: 320:                         printf("%d ", sequencia_facil[i]);
  1366   000AE2  0E1E               	movlw	low STR_2
  1367   000AE4  6E4A               	movwf	printf@fmt^0,c
  1368   000AE6  0E06               	movlw	high STR_2
  1369   000AE8  6E4B               	movwf	(printf@fmt+1)^0,c
  1370   000AEA  90D8               	bcf	status,0,c
  1371   000AEC  35E2               	rlcf	main@i_791& (0+255),w,b
  1372   000AEE  6ED9               	movwf	fsr2l,c
  1373   000AF0  35E3               	rlcf	(main@i_791+1)& (0+255),w,b
  1374   000AF2  6EDA               	movwf	fsr2h,c
  1375   000AF4  0EC8               	movlw	low main@sequencia_facil
  1376   000AF6  26D9               	addwf	fsr2l,f,c
  1377   000AF8  0E00               	movlw	high main@sequencia_facil
  1378   000AFA  22DA               	addwfc	fsr2h,f,c
  1379   000AFC  CFDE F04C          	movff	postinc2,?_printf+2
  1380   000B00  CFDD F04D          	movff	postdec2,?_printf+3
  1381   000B04  EC1A  F00B         	call	_printf	;wreg free
  1382   000B08                     
  1383                           ;main.c: 321:                         if (sequencia_facil[i] != array[i]) {
  1384   000B08  90D8               	bcf	status,0,c
  1385   000B0A  0100               	movlb	0	; () banked
  1386   000B0C  35E2               	rlcf	main@i_791& (0+255),w,b
  1387   000B0E  6ED9               	movwf	fsr2l,c
  1388   000B10  35E3               	rlcf	(main@i_791+1)& (0+255),w,b
  1389   000B12  6EDA               	movwf	fsr2h,c
  1390   000B14  0EC0               	movlw	low main@array
  1391   000B16  26D9               	addwf	fsr2l,f,c
  1392   000B18  0E00               	movlw	high main@array
  1393   000B1A  22DA               	addwfc	fsr2h,f,c
  1394   000B1C  90D8               	bcf	status,0,c
  1395   000B1E  35E2               	rlcf	main@i_791& (0+255),w,b
  1396   000B20  6EE1               	movwf	fsr1l,c
  1397   000B22  35E3               	rlcf	(main@i_791+1)& (0+255),w,b
  1398   000B24  6EE2               	movwf	fsr1h,c
  1399   000B26  0EC8               	movlw	low main@sequencia_facil
  1400   000B28  26E1               	addwf	fsr1l,f,c
  1401   000B2A  0E00               	movlw	high main@sequencia_facil
  1402   000B2C  22E2               	addwfc	fsr1h,f,c
  1403   000B2E  50DE               	movf	postinc2,w,c
  1404   000B30  18E6               	xorwf	postinc1,w,c
  1405   000B32  E109               	bnz	u1720
  1406   000B34  50DE               	movf	postinc2,w,c
  1407   000B36  18E6               	xorwf	postinc1,w,c
  1408   000B38  B4D8               	btfsc	status,2,c
  1409   000B3A  EFA1  F005         	goto	u1721
  1410   000B3E  EFA3  F005         	goto	u1720
  1411   000B42                     u1721:
  1412   000B42  EFA7  F005         	goto	l2102
  1413   000B46                     u1720:
  1414   000B46                     
  1415                           ; BSR set to: 0
  1416                           ;main.c: 322:                             sequencia_facil_perdeu = 1;
  1417   000B46  0E00               	movlw	0
  1418   000B48  6FBB               	movwf	(main@sequencia_facil_perdeu+1)& (0+255),b
  1419   000B4A  0E01               	movlw	1
  1420   000B4C  6FBA               	movwf	main@sequencia_facil_perdeu& (0+255),b
  1421   000B4E                     l2102:
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;main.c: 324:                     }
  1425   000B4E  4BE2               	infsnz	main@i_791& (0+255),f,b
  1426   000B50  2BE3               	incf	(main@i_791+1)& (0+255),f,b
  1427   000B52  EF61  F005         	goto	l2092
  1428   000B56                     l2106:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;main.c: 325:                     if (sequencia_facil_perdeu == 1) {
  1432   000B56  05BA               	decf	main@sequencia_facil_perdeu& (0+255),w,b
  1433   000B58  11BB               	iorwf	(main@sequencia_facil_perdeu+1)& (0+255),w,b
  1434   000B5A  A4D8               	btfss	status,2,c
  1435   000B5C  EFB2  F005         	goto	u1731
  1436   000B60  EFB4  F005         	goto	u1730
  1437   000B64                     u1731:
  1438   000B64  EFBC  F005         	goto	l2110
  1439   000B68                     u1730:
  1440   000B68                     
  1441                           ; BSR set to: 0
  1442                           ;main.c: 326:                         printf("perdeu ");
  1443   000B68  0E0E               	movlw	low STR_4
  1444   000B6A  6E4A               	movwf	printf@fmt^0,c
  1445   000B6C  0E06               	movlw	high STR_4
  1446   000B6E  6E4B               	movwf	(printf@fmt+1)^0,c
  1447   000B70  EC1A  F00B         	call	_printf	;wreg free
  1448                           
  1449                           ;main.c: 327:                     } else {
  1450   000B74  EF41  F003         	goto	l1962
  1451   000B78                     l2110:
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;main.c: 328:                         printf("ganhou ");
  1455   000B78  0E16               	movlw	low STR_5
  1456   000B7A  6E4A               	movwf	printf@fmt^0,c
  1457   000B7C  0E06               	movlw	high STR_5
  1458   000B7E  6E4B               	movwf	(printf@fmt+1)^0,c
  1459   000B80  EC1A  F00B         	call	_printf	;wreg free
  1460   000B84  EF41  F003         	goto	l1962
  1461   000B88                     l2112:
  1462                           
  1463                           ; BSR set to: 0
  1464   000B88  05E4               	decf	main@estagio& (0+255),w,b
  1465   000B8A  11E5               	iorwf	(main@estagio+1)& (0+255),w,b
  1466   000B8C  A4D8               	btfss	status,2,c
  1467   000B8E  EFCB  F005         	goto	u1741
  1468   000B92  EFCD  F005         	goto	u1740
  1469   000B96                     u1741:
  1470   000B96  EFCF  F005         	goto	l2116
  1471   000B9A                     u1740:
  1472   000B9A  EF41  F003         	goto	l1962
  1473   000B9E                     l2116:
  1474                           
  1475                           ; BSR set to: 0
  1476   000B9E  0E02               	movlw	2
  1477   000BA0  19E4               	xorwf	main@estagio& (0+255),w,b
  1478   000BA2  11E5               	iorwf	(main@estagio+1)& (0+255),w,b
  1479   000BA4  A4D8               	btfss	status,2,c
  1480   000BA6  EFD7  F005         	goto	u1751
  1481   000BAA  EFD9  F005         	goto	u1750
  1482   000BAE                     u1751:
  1483   000BAE  EFDB  F005         	goto	l2120
  1484   000BB2                     u1750:
  1485   000BB2  EF41  F003         	goto	l1962
  1486   000BB6                     l2120:
  1487                           
  1488                           ; BSR set to: 0
  1489   000BB6  0E03               	movlw	3
  1490   000BB8  19E4               	xorwf	main@estagio& (0+255),w,b
  1491   000BBA  11E5               	iorwf	(main@estagio+1)& (0+255),w,b
  1492   000BBC  A4D8               	btfss	status,2,c
  1493   000BBE  EFE3  F005         	goto	u1761
  1494   000BC2  EFE5  F005         	goto	u1760
  1495   000BC6                     u1761:
  1496   000BC6  EF26  F006         	goto	l2142
  1497   000BCA                     u1760:
  1498   000BCA                     
  1499                           ; BSR set to: 0
  1500                           ;main.c: 339:             if (possui_sequencia_media == 0) {
  1501   000BCA  51BC               	movf	main@possui_sequencia_media& (0+255),w,b
  1502   000BCC  11BD               	iorwf	(main@possui_sequencia_media+1)& (0+255),w,b
  1503   000BCE  A4D8               	btfss	status,2,c
  1504   000BD0  EFEC  F005         	goto	u1771
  1505   000BD4  EFEE  F005         	goto	u1770
  1506   000BD8                     u1771:
  1507   000BD8  EF41  F003         	goto	l1962
  1508   000BDC                     u1770:
  1509   000BDC                     
  1510                           ; BSR set to: 0
  1511                           ;main.c: 340:                 for (int i = 0; i < 4; i++) {
  1512   000BDC  0E00               	movlw	0
  1513   000BDE  6FD5               	movwf	(main@i_795+1)& (0+255),b
  1514   000BE0  0E00               	movlw	0
  1515   000BE2  6FD4               	movwf	main@i_795& (0+255),b
  1516   000BE4                     l2126:
  1517                           
  1518                           ; BSR set to: 0
  1519   000BE4  BFD5               	btfsc	(main@i_795+1)& (0+255),7,b
  1520   000BE6  EFFE  F005         	goto	u1781
  1521   000BEA  51D5               	movf	(main@i_795+1)& (0+255),w,b
  1522   000BEC  E109               	bnz	u1780
  1523   000BEE  0E04               	movlw	4
  1524   000BF0  5DD4               	subwf	main@i_795& (0+255),w,b
  1525   000BF2  A0D8               	btfss	status,0,c
  1526   000BF4  EFFE  F005         	goto	u1781
  1527   000BF8  EF00  F006         	goto	u1780
  1528   000BFC                     u1781:
  1529   000BFC  EF02  F006         	goto	l2130
  1530   000C00                     u1780:
  1531   000C00  EF20  F006         	goto	l2140
  1532   000C04                     l2130:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;main.c: 341:                     r = rand() % 4;
  1536   000C04  EC33  F00A         	call	_rand	;wreg free
  1537   000C08  0E03               	movlw	3
  1538   000C0A  1417               	andwf	?_rand^0,w,c
  1539   000C0C  0100               	movlb	0	; () banked
  1540   000C0E  6FD6               	movwf	main@r& (0+255),b
  1541   000C10  6BD7               	clrf	(main@r+1)& (0+255),b
  1542   000C12                     
  1543                           ; BSR set to: 0
  1544                           ;main.c: 342:                     r = r + 1;
  1545   000C12  0E01               	movlw	1
  1546   000C14  25D6               	addwf	main@r& (0+255),w,b
  1547   000C16  6FD6               	movwf	main@r& (0+255),b
  1548   000C18  0E00               	movlw	0
  1549   000C1A  21D7               	addwfc	(main@r+1)& (0+255),w,b
  1550   000C1C  6FD7               	movwf	(main@r+1)& (0+255),b
  1551   000C1E                     
  1552                           ; BSR set to: 0
  1553                           ;main.c: 343:                     array[i] = r;
  1554   000C1E  90D8               	bcf	status,0,c
  1555   000C20  35D4               	rlcf	main@i_795& (0+255),w,b
  1556   000C22  6ED9               	movwf	fsr2l,c
  1557   000C24  35D5               	rlcf	(main@i_795+1)& (0+255),w,b
  1558   000C26  6EDA               	movwf	fsr2h,c
  1559   000C28  0EC0               	movlw	low main@array
  1560   000C2A  26D9               	addwf	fsr2l,f,c
  1561   000C2C  0E00               	movlw	high main@array
  1562   000C2E  22DA               	addwfc	fsr2h,f,c
  1563   000C30  C0D6  FFDE         	movff	main@r,postinc2
  1564   000C34  C0D7  FFDD         	movff	main@r+1,postdec2
  1565   000C38                     
  1566                           ; BSR set to: 0
  1567                           ;main.c: 344:                 }
  1568   000C38  4BD4               	infsnz	main@i_795& (0+255),f,b
  1569   000C3A  2BD5               	incf	(main@i_795+1)& (0+255),f,b
  1570   000C3C  EFF2  F005         	goto	l2126
  1571   000C40                     l2140:
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;main.c: 345:                 possui_sequencia_media = 1;
  1575   000C40  0E00               	movlw	0
  1576   000C42  6FBD               	movwf	(main@possui_sequencia_media+1)& (0+255),b
  1577   000C44  0E01               	movlw	1
  1578   000C46  6FBC               	movwf	main@possui_sequencia_media& (0+255),b
  1579   000C48  EF41  F003         	goto	l1962
  1580   000C4C                     l2142:
  1581                           
  1582                           ; BSR set to: 0
  1583   000C4C  EF41  F003         	goto	l1962
  1584   000C50  EF07  F000         	goto	start
  1585   000C54                     __end_of_main:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _setLED *****************
  1589 ;; Defined at:
  1590 ;;		line 110 in file "main.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  pos             1    wreg     unsigned char 
  1593 ;;  value           1   10[COMRAM] unsigned char 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  pos             1   13[COMRAM] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1605 ;;      Params:         1       0       0       0       0       0       0
  1606 ;;      Locals:         1       0       0       0       0       0       0
  1607 ;;      Temps:          2       0       0       0       0       0       0
  1608 ;;      Totals:         4       0       0       0       0       0       0
  1609 ;;Total ram usage:        4 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 1
  1612 ;; This function calls:
  1613 ;;		Nothing
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text1
  1620   001372                     __ptext1:
  1621                           	callstack 0
  1622   001372                     _setLED:
  1623                           	callstack 29
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;incstack = 0
  1627                           ;setLED@pos stored from wreg
  1628   001372  6E0E               	movwf	setLED@pos^0,c
  1629   001374                     
  1630                           ;main.c: 111:     switch (pos) {
  1631   001374  EFD8  F009         	goto	l1782
  1632   001378                     l85:
  1633                           
  1634                           ;main.c: 113:             PORTDbits.RD0 = value;
  1635   001378  B00B               	btfsc	setLED@value^0,0,c
  1636   00137A  D002               	bra	u1275
  1637   00137C  9083               	bcf	131,0,c	;volatile
  1638   00137E  D001               	bra	u1276
  1639   001380                     u1275:
  1640   001380  8083               	bsf	131,0,c	;volatile
  1641   001382                     u1276:
  1642                           
  1643                           ;main.c: 114:             break;
  1644   001382  EFF5  F009         	goto	l90
  1645   001386                     l87:
  1646                           
  1647                           ;main.c: 116:             PORTDbits.RD1 = value;
  1648   001386  B00B               	btfsc	setLED@value^0,0,c
  1649   001388  D002               	bra	u1285
  1650   00138A  9283               	bcf	131,1,c	;volatile
  1651   00138C  D001               	bra	u1286
  1652   00138E                     u1285:
  1653   00138E  8283               	bsf	131,1,c	;volatile
  1654   001390                     u1286:
  1655                           
  1656                           ;main.c: 117:             break;
  1657   001390  EFF5  F009         	goto	l90
  1658   001394                     l88:
  1659                           
  1660                           ;main.c: 119:             PORTDbits.RD2 = value;
  1661   001394  B00B               	btfsc	setLED@value^0,0,c
  1662   001396  D002               	bra	u1295
  1663   001398  9483               	bcf	131,2,c	;volatile
  1664   00139A  D001               	bra	u1296
  1665   00139C                     u1295:
  1666   00139C  8483               	bsf	131,2,c	;volatile
  1667   00139E                     u1296:
  1668                           
  1669                           ;main.c: 120:             break;
  1670   00139E  EFF5  F009         	goto	l90
  1671   0013A2                     l89:
  1672                           
  1673                           ;main.c: 122:             PORTDbits.RD3 = value;
  1674   0013A2  B00B               	btfsc	setLED@value^0,0,c
  1675   0013A4  D002               	bra	u1305
  1676   0013A6  9683               	bcf	131,3,c	;volatile
  1677   0013A8  D001               	bra	u1306
  1678   0013AA                     u1305:
  1679   0013AA  8683               	bsf	131,3,c	;volatile
  1680   0013AC                     u1306:
  1681                           
  1682                           ;main.c: 123:             break;
  1683   0013AC  EFF5  F009         	goto	l90
  1684   0013B0                     l1782:
  1685   0013B0  500E               	movf	setLED@pos^0,w,c
  1686   0013B2  6E0C               	movwf	??_setLED^0,c
  1687   0013B4  6A0D               	clrf	(??_setLED+1)^0,c
  1688                           
  1689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1690                           ; Switch size 1, requested type "simple"
  1691                           ; Number of cases is 1, Range of values is 0 to 0
  1692                           ; switch strategies available:
  1693                           ; Name         Instructions Cycles
  1694                           ; simple_byte            4     3 (average)
  1695                           ;	Chosen strategy is simple_byte
  1696   0013B6  500D               	movf	(??_setLED+1)^0,w,c
  1697   0013B8  0A00               	xorlw	0	; case 0
  1698   0013BA  B4D8               	btfsc	status,2,c
  1699   0013BC  EFE2  F009         	goto	l2168
  1700   0013C0  EFF5  F009         	goto	l90
  1701   0013C4                     l2168:
  1702                           
  1703                           ; Switch size 1, requested type "simple"
  1704                           ; Number of cases is 4, Range of values is 1 to 4
  1705                           ; switch strategies available:
  1706                           ; Name         Instructions Cycles
  1707                           ; simple_byte           13     7 (average)
  1708                           ;	Chosen strategy is simple_byte
  1709   0013C4  500C               	movf	??_setLED^0,w,c
  1710   0013C6  0A01               	xorlw	1	; case 1
  1711   0013C8  B4D8               	btfsc	status,2,c
  1712   0013CA  EFBC  F009         	goto	l85
  1713   0013CE  0A03               	xorlw	3	; case 2
  1714   0013D0  B4D8               	btfsc	status,2,c
  1715   0013D2  EFC3  F009         	goto	l87
  1716   0013D6  0A01               	xorlw	1	; case 3
  1717   0013D8  B4D8               	btfsc	status,2,c
  1718   0013DA  EFCA  F009         	goto	l88
  1719   0013DE  0A07               	xorlw	7	; case 4
  1720   0013E0  B4D8               	btfsc	status,2,c
  1721   0013E2  EFD1  F009         	goto	l89
  1722   0013E6  EFF5  F009         	goto	l90
  1723   0013EA                     l90:
  1724   0013EA  0012               	return		;funcret
  1725   0013EC                     __end_of_setLED:
  1726                           	callstack 0
  1727                           
  1728 ;; *************** function _rand *****************
  1729 ;; Defined at:
  1730 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\rand.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  2   22[COMRAM] int 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1744 ;;      Params:         2       0       0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0       0       0
  1746 ;;      Temps:          4       0       0       0       0       0       0
  1747 ;;      Totals:         6       0       0       0       0       0       0
  1748 ;;Total ram usage:        6 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 2
  1751 ;; This function calls:
  1752 ;;		___lmul
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;;		_generate_random_sequence_easy
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text2
  1760   001466                     __ptext2:
  1761                           	callstack 0
  1762   001466                     _rand:
  1763                           	callstack 28
  1764   001466  C061  F00B         	movff	_seed,___lmul@multiplier
  1765   00146A  C062  F00C         	movff	_seed+1,___lmul@multiplier+1
  1766   00146E  C063  F00D         	movff	_seed+2,___lmul@multiplier+2
  1767   001472  C064  F00E         	movff	_seed+3,___lmul@multiplier+3
  1768   001476  0E2D               	movlw	45
  1769   001478  6E0F               	movwf	___lmul@multiplicand^0,c
  1770   00147A  0E7F               	movlw	127
  1771   00147C  6E10               	movwf	(___lmul@multiplicand+1)^0,c
  1772   00147E  0E95               	movlw	149
  1773   001480  6E11               	movwf	(___lmul@multiplicand+2)^0,c
  1774   001482  0E4C               	movlw	76
  1775   001484  6E12               	movwf	(___lmul@multiplicand+3)^0,c
  1776   001486  EC69  F00A         	call	___lmul	;wreg free
  1777   00148A  0E01               	movlw	1
  1778   00148C  240B               	addwf	?___lmul^0,w,c
  1779   00148E  6E61               	movwf	_seed^0,c
  1780   001490  0E00               	movlw	0
  1781   001492  200C               	addwfc	(?___lmul+1)^0,w,c
  1782   001494  6E62               	movwf	(_seed+1)^0,c
  1783   001496  0E00               	movlw	0
  1784   001498  200D               	addwfc	(?___lmul+2)^0,w,c
  1785   00149A  6E63               	movwf	(_seed+2)^0,c
  1786   00149C  0E00               	movlw	0
  1787   00149E  200E               	addwfc	(?___lmul+3)^0,w,c
  1788   0014A0  6E64               	movwf	(_seed+3)^0,c
  1789   0014A2  C061  F019         	movff	_seed,??_rand
  1790   0014A6  C062  F01A         	movff	_seed+1,??_rand+1
  1791   0014AA  C063  F01B         	movff	_seed+2,??_rand+2
  1792   0014AE  C064  F01C         	movff	_seed+3,??_rand+3
  1793   0014B2  0E12               	movlw	18
  1794   0014B4  EF61  F00A         	goto	u1310
  1795   0014B8                     u1315:
  1796   0014B8  90D8               	bcf	status,0,c
  1797   0014BA  321C               	rrcf	(??_rand+3)^0,f,c
  1798   0014BC  321B               	rrcf	(??_rand+2)^0,f,c
  1799   0014BE  321A               	rrcf	(??_rand+1)^0,f,c
  1800   0014C0  3219               	rrcf	??_rand^0,f,c
  1801   0014C2                     u1310:
  1802   0014C2  2EE8               	decfsz	wreg,f,c
  1803   0014C4  EF5C  F00A         	goto	u1315
  1804   0014C8  C019  F017         	movff	??_rand,?_rand
  1805   0014CC  C01A  F018         	movff	??_rand+1,?_rand+1
  1806   0014D0  0012               	return		;funcret
  1807   0014D2                     __end_of_rand:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function ___lmul *****************
  1811 ;; Defined at:
  1812 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  multiplier      4   10[COMRAM] unsigned long 
  1815 ;;  multiplicand    4   14[COMRAM] unsigned long 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  product         4   18[COMRAM] unsigned long 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  4   10[COMRAM] unsigned long 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1827 ;;      Params:         8       0       0       0       0       0       0
  1828 ;;      Locals:         4       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0
  1830 ;;      Totals:        12       0       0       0       0       0       0
  1831 ;;Total ram usage:       12 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_rand
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text3
  1842   0014D2                     __ptext3:
  1843                           	callstack 0
  1844   0014D2                     ___lmul:
  1845                           	callstack 28
  1846   0014D2  0E00               	movlw	0
  1847   0014D4  6E13               	movwf	___lmul@product^0,c
  1848   0014D6  0E00               	movlw	0
  1849   0014D8  6E14               	movwf	(___lmul@product+1)^0,c
  1850   0014DA  0E00               	movlw	0
  1851   0014DC  6E15               	movwf	(___lmul@product+2)^0,c
  1852   0014DE  0E00               	movlw	0
  1853   0014E0  6E16               	movwf	(___lmul@product+3)^0,c
  1854   0014E2                     l1760:
  1855   0014E2  A00B               	btfss	___lmul@multiplier^0,0,c
  1856   0014E4  EF76  F00A         	goto	u1241
  1857   0014E8  EF78  F00A         	goto	u1240
  1858   0014EC                     u1241:
  1859   0014EC  EF80  F00A         	goto	l1764
  1860   0014F0                     u1240:
  1861   0014F0  500F               	movf	___lmul@multiplicand^0,w,c
  1862   0014F2  2613               	addwf	___lmul@product^0,f,c
  1863   0014F4  5010               	movf	(___lmul@multiplicand+1)^0,w,c
  1864   0014F6  2214               	addwfc	(___lmul@product+1)^0,f,c
  1865   0014F8  5011               	movf	(___lmul@multiplicand+2)^0,w,c
  1866   0014FA  2215               	addwfc	(___lmul@product+2)^0,f,c
  1867   0014FC  5012               	movf	(___lmul@multiplicand+3)^0,w,c
  1868   0014FE  2216               	addwfc	(___lmul@product+3)^0,f,c
  1869   001500                     l1764:
  1870   001500  90D8               	bcf	status,0,c
  1871   001502  360F               	rlcf	___lmul@multiplicand^0,f,c
  1872   001504  3610               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1873   001506  3611               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1874   001508  3612               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1875   00150A  90D8               	bcf	status,0,c
  1876   00150C  320E               	rrcf	(___lmul@multiplier+3)^0,f,c
  1877   00150E  320D               	rrcf	(___lmul@multiplier+2)^0,f,c
  1878   001510  320C               	rrcf	(___lmul@multiplier+1)^0,f,c
  1879   001512  320B               	rrcf	___lmul@multiplier^0,f,c
  1880   001514  500B               	movf	___lmul@multiplier^0,w,c
  1881   001516  100C               	iorwf	(___lmul@multiplier+1)^0,w,c
  1882   001518  100D               	iorwf	(___lmul@multiplier+2)^0,w,c
  1883   00151A  100E               	iorwf	(___lmul@multiplier+3)^0,w,c
  1884   00151C  A4D8               	btfss	status,2,c
  1885   00151E  EF93  F00A         	goto	u1251
  1886   001522  EF95  F00A         	goto	u1250
  1887   001526                     u1251:
  1888   001526  EF71  F00A         	goto	l1760
  1889   00152A                     u1250:
  1890   00152A  C013  F00B         	movff	___lmul@product,?___lmul
  1891   00152E  C014  F00C         	movff	___lmul@product+1,?___lmul+1
  1892   001532  C015  F00D         	movff	___lmul@product+2,?___lmul+2
  1893   001536  C016  F00E         	movff	___lmul@product+3,?___lmul+3
  1894   00153A  0012               	return		;funcret
  1895   00153C                     __end_of___lmul:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _printf *****************
  1899 ;; Defined at:
  1900 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  fmt             2   73[COMRAM] PTR const unsigned char 
  1903 ;;		 -> STR_5(8), STR_4(8), STR_3(4), STR_2(4), 
  1904 ;;		 -> STR_1(13), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  ap              2   77[COMRAM] PTR void [1]
  1907 ;;		 -> ?_printf(2), 
  1908 ;;  ret             2    0        int 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  2   73[COMRAM] int 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1918 ;;      Params:         4       0       0       0       0       0       0
  1919 ;;      Locals:         2       0       0       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0
  1921 ;;      Totals:         6       0       0       0       0       0       0
  1922 ;;Total ram usage:        6 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; Hardware stack levels required when called: 8
  1925 ;; This function calls:
  1926 ;;		_vfprintf
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text4
  1933   001634                     __ptext4:
  1934                           	callstack 0
  1935   001634                     _printf:
  1936                           	callstack 22
  1937   001634  0E4C               	movlw	low (?_printf+2)
  1938   001636  6E4E               	movwf	printf@ap^0,c
  1939   001638  0E00               	movlw	high (?_printf+2)
  1940   00163A  6E4F               	movwf	(printf@ap+1)^0,c
  1941   00163C  0E00               	movlw	0
  1942   00163E  6E42               	movwf	vfprintf@fp^0,c
  1943   001640  0E00               	movlw	0
  1944   001642  6E43               	movwf	(vfprintf@fp+1)^0,c
  1945   001644  C04A  F044         	movff	printf@fmt,vfprintf@fmt
  1946   001648  C04B  F045         	movff	printf@fmt+1,vfprintf@fmt+1
  1947   00164C  0E4E               	movlw	low printf@ap
  1948   00164E  6E46               	movwf	vfprintf@ap^0,c
  1949   001650  0E00               	movlw	high printf@ap
  1950   001652  6E47               	movwf	(vfprintf@ap+1)^0,c
  1951   001654  EC9E  F00A         	call	_vfprintf	;wreg free
  1952   001658  0012               	return		;funcret
  1953   00165A                     __end_of_printf:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _vfprintf *****************
  1957 ;; Defined at:
  1958 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  1961 ;;		 -> NULL(0), 
  1962 ;;  fmt             2   67[COMRAM] PTR const unsigned char 
  1963 ;;		 -> STR_5(8), STR_4(8), STR_3(4), STR_2(4), 
  1964 ;;		 -> STR_1(13), 
  1965 ;;  ap              2   69[COMRAM] PTR PTR void 
  1966 ;;		 -> printf@ap(2), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  cfmt            2   71[COMRAM] PTR unsigned char 
  1969 ;;		 -> STR_5(8), STR_4(8), STR_3(4), STR_2(4), 
  1970 ;;		 -> STR_1(13), 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  2   65[COMRAM] int 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1980 ;;      Params:         6       0       0       0       0       0       0
  1981 ;;      Locals:         2       0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0
  1983 ;;      Totals:         8       0       0       0       0       0       0
  1984 ;;Total ram usage:        8 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 7
  1987 ;; This function calls:
  1988 ;;		_vfpfcnvrt
  1989 ;; This function is called by:
  1990 ;;		_printf
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text5
  1995   00153C                     __ptext5:
  1996                           	callstack 0
  1997   00153C                     _vfprintf:
  1998                           	callstack 22
  1999   00153C                     
  2000                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2001   00153C  C044  F048         	movff	vfprintf@fmt,vfprintf@cfmt
  2002   001540  C045  F049         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2005   001544  EFB2  F00A         	goto	l1772
  2006   001548                     l1770:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2009   001548  C042  F034         	movff	vfprintf@fp,vfpfcnvrt@fp
  2010   00154C  C043  F035         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2011   001550  0E48               	movlw	low vfprintf@cfmt
  2012   001552  6E36               	movwf	vfpfcnvrt@fmt^0,c
  2013   001554  0E00               	movlw	high vfprintf@cfmt
  2014   001556  6E37               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2015   001558  C046  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
  2016   00155C  C047  F039         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2017   001560  EC09  F008         	call	_vfpfcnvrt	;wreg free
  2018   001564                     l1772:
  2019                           
  2020                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2021   001564  C048  FFF6         	movff	vfprintf@cfmt,tblptrl
  2022   001568  C049  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2023   00156C                     	if	0	;tblptru may be non-zero
  2024   00156C                     	endif
  2025   00156C                     	if	0	;tblptru may be non-zero
  2026   00156C                     	endif
  2027   00156C  0008               	tblrd		*
  2028   00156E  50F5               	movf	tablat,w,c
  2029   001570  0900               	iorlw	0
  2030   001572  A4D8               	btfss	status,2,c
  2031   001574  EFBE  F00A         	goto	u1261
  2032   001578  EFC0  F00A         	goto	u1260
  2033   00157C                     u1261:
  2034   00157C  EFA4  F00A         	goto	l1770
  2035   001580                     u1260:
  2036   001580                     
  2037                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2038   001580  0E00               	movlw	0
  2039   001582  6E43               	movwf	(?_vfprintf+1)^0,c
  2040   001584  0E00               	movlw	0
  2041   001586  6E42               	movwf	?_vfprintf^0,c
  2042   001588  0012               	return		;funcret
  2043   00158A                     __end_of_vfprintf:
  2044                           	callstack 0
  2045                           
  2046 ;; *************** function _vfpfcnvrt *****************
  2047 ;; Defined at:
  2048 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2051 ;;		 -> NULL(0), 
  2052 ;;  fmt             2   53[COMRAM] PTR PTR unsigned char 
  2053 ;;		 -> vfprintf@cfmt(2), 
  2054 ;;  ap              2   55[COMRAM] PTR PTR void 
  2055 ;;		 -> printf@ap(2), 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  convarg         4   59[COMRAM] struct .
  2058 ;;  cp              2   63[COMRAM] PTR unsigned char 
  2059 ;;		 -> STR_5(8), STR_4(8), STR_3(4), STR_2(4), 
  2060 ;;		 -> STR_1(13), 
  2061 ;;  i               2    0        int 
  2062 ;;  done            2    0        int 
  2063 ;;  c               1    0        unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2073 ;;      Params:         6       0       0       0       0       0       0
  2074 ;;      Locals:         6       0       0       0       0       0       0
  2075 ;;      Temps:          2       0       0       0       0       0       0
  2076 ;;      Totals:        14       0       0       0       0       0       0
  2077 ;;Total ram usage:       14 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 6
  2080 ;; This function calls:
  2081 ;;		_dtoa
  2082 ;;		_fputc
  2083 ;; This function is called by:
  2084 ;;		_vfprintf
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text6
  2089   001012                     __ptext6:
  2090                           	callstack 0
  2091   001012                     _vfpfcnvrt:
  2092                           	callstack 22
  2093   001012                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2095   001012  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2096   001016  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2097   00101A  CFDE FFF6          	movff	postinc2,tblptrl
  2098   00101E  CFDD FFF7          	movff	postdec2,tblptrh
  2099   001022                     	if	0	;tblptru may be non-zero
  2100   001022                     	endif
  2101   001022                     	if	0	;tblptru may be non-zero
  2102   001022                     	endif
  2103   001022  0008               	tblrd		*
  2104   001024  50F5               	movf	tablat,w,c
  2105   001026  0A25               	xorlw	37
  2106   001028  A4D8               	btfss	status,2,c
  2107   00102A  EF19  F008         	goto	u1211
  2108   00102E  EF1B  F008         	goto	u1210
  2109   001032                     u1211:
  2110   001032  EF85  F008         	goto	l1752
  2111   001036                     u1210:
  2112   001036                     
  2113                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2114   001036  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2115   00103A  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2116   00103E  2ADE               	incf	postinc2,f,c
  2117   001040  0E00               	movlw	0
  2118   001042  22DD               	addwfc	postdec2,f,c
  2119   001044                     
  2120                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2121   001044  0E00               	movlw	0
  2122   001046  6E5D               	movwf	(_width+1)^0,c
  2123   001048  0E00               	movlw	0
  2124   00104A  6E5C               	movwf	_width^0,c
  2125   00104C  C05C  F060         	movff	_width,_flags
  2126   001050                     
  2127                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2128   001050  685E               	setf	_prec^0,c
  2129   001052  685F               	setf	(_prec+1)^0,c
  2130   001054                     
  2131                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2132   001054  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2133   001058  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2134   00105C  CFDE F040          	movff	postinc2,vfpfcnvrt@cp
  2135   001060  CFDD F041          	movff	postdec2,vfpfcnvrt@cp+1
  2136   001064                     
  2137                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2138   001064  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2139   001068  C041  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2140   00106C                     	if	0	;tblptru may be non-zero
  2141   00106C                     	endif
  2142   00106C                     	if	0	;tblptru may be non-zero
  2143   00106C                     	endif
  2144   00106C  0008               	tblrd		*
  2145   00106E  50F5               	movf	tablat,w,c
  2146   001070  0A64               	xorlw	100
  2147   001072  B4D8               	btfsc	status,2,c
  2148   001074  EF3E  F008         	goto	u1221
  2149   001078  EF40  F008         	goto	u1220
  2150   00107C                     u1221:
  2151   00107C  EF4E  F008         	goto	l1742
  2152   001080                     u1220:
  2153   001080  C040  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2154   001084  C041  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2155   001088                     	if	0	;tblptru may be non-zero
  2156   001088                     	endif
  2157   001088                     	if	0	;tblptru may be non-zero
  2158   001088                     	endif
  2159   001088  0008               	tblrd		*
  2160   00108A  50F5               	movf	tablat,w,c
  2161   00108C  0A69               	xorlw	105
  2162   00108E  A4D8               	btfss	status,2,c
  2163   001090  EF4C  F008         	goto	u1231
  2164   001094  EF4E  F008         	goto	u1230
  2165   001098                     u1231:
  2166   001098  EF7C  F008         	goto	l1748
  2167   00109C                     u1230:
  2168   00109C                     l1742:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2171   00109C  C038  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2172   0010A0  C039  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2173   0010A4  CFDF F03A          	movff	indf2,??_vfpfcnvrt
  2174   0010A8  0E02               	movlw	2
  2175   0010AA  26DE               	addwf	postinc2,f,c
  2176   0010AC  CFDF F03B          	movff	indf2,??_vfpfcnvrt+1
  2177   0010B0  0E00               	movlw	0
  2178   0010B2  22DD               	addwfc	postdec2,f,c
  2179   0010B4  C03A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2180   0010B8  C03B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2181   0010BC  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg
  2182   0010C0  CFDD F03D          	movff	postdec2,vfpfcnvrt@convarg+1
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2185   0010C4  0E01               	movlw	1
  2186   0010C6  2440               	addwf	vfpfcnvrt@cp^0,w,c
  2187   0010C8  6E3A               	movwf	??_vfpfcnvrt^0,c
  2188   0010CA  0E00               	movlw	0
  2189   0010CC  2041               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2190   0010CE  6E3B               	movwf	(??_vfpfcnvrt+1)^0,c
  2191   0010D0  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2192   0010D4  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2193   0010D8  C03A  FFDE         	movff	??_vfpfcnvrt,postinc2
  2194   0010DC  C03B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2195   0010E0                     
  2196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2197   0010E0  C034  F027         	movff	vfpfcnvrt@fp,dtoa@fp
  2198   0010E4  C035  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2199   0010E8  C03C  F029         	movff	vfpfcnvrt@convarg,dtoa@d
  2200   0010EC  C03D  F02A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2201   0010F0  EC3F  F007         	call	_dtoa	;wreg free
  2202   0010F4  EF99  F008         	goto	l907
  2203   0010F8                     l1748:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2206   0010F8  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2207   0010FC  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2208   001100  2ADE               	incf	postinc2,f,c
  2209   001102  0E00               	movlw	0
  2210   001104  22DD               	addwfc	postdec2,f,c
  2211   001106  EF99  F008         	goto	l907
  2212   00110A                     l1752:
  2213                           
  2214                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2215   00110A  C036  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2216   00110E  C037  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2217   001112  CFDE FFF6          	movff	postinc2,tblptrl
  2218   001116  CFDD FFF7          	movff	postdec2,tblptrh
  2219   00111A                     	if	0	;tblptru may be non-zero
  2220   00111A                     	endif
  2221   00111A                     	if	0	;tblptru may be non-zero
  2222   00111A                     	endif
  2223   00111A  0008               	tblrd		*
  2224   00111C  50F5               	movf	tablat,w,c
  2225   00111E  6E0C               	movwf	fputc@c^0,c
  2226   001120  6A0D               	clrf	(fputc@c+1)^0,c
  2227   001122  C034  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  2228   001126  C035  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2229   00112A  EC9A  F008         	call	_fputc	;wreg free
  2230   00112E  EF7C  F008         	goto	l1748
  2231   001132                     l907:
  2232   001132  0012               	return		;funcret
  2233   001134                     __end_of_vfpfcnvrt:
  2234                           	callstack 0
  2235                           
  2236 ;; *************** function _dtoa *****************
  2237 ;; Defined at:
  2238 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  2241 ;;		 -> NULL(0), 
  2242 ;;  d               2   40[COMRAM] int 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  i               2   48[COMRAM] int 
  2245 ;;  w               2   46[COMRAM] int 
  2246 ;;  p               2   44[COMRAM] int 
  2247 ;;  s               1   50[COMRAM] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2257 ;;      Params:         4       0       0       0       0       0       0
  2258 ;;      Locals:         9       0       0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0
  2260 ;;      Totals:        13       0       0       0       0       0       0
  2261 ;;Total ram usage:       13 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 5
  2264 ;; This function calls:
  2265 ;;		___awdiv
  2266 ;;		___awmod
  2267 ;;		_abs
  2268 ;;		_pad
  2269 ;; This function is called by:
  2270 ;;		_vfpfcnvrt
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text7
  2275   000E7E                     __ptext7:
  2276                           	callstack 0
  2277   000E7E                     _dtoa:
  2278                           	callstack 22
  2279   000E7E                     
  2280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2281   000E7E  BE2A               	btfsc	(dtoa@d+1)^0,7,c
  2282   000E80  EF44  F007         	goto	u1111
  2283   000E84  EF47  F007         	goto	u1110
  2284   000E88                     u1111:
  2285   000E88  0E01               	movlw	1
  2286   000E8A  EF48  F007         	goto	u1120
  2287   000E8E                     u1110:
  2288   000E8E  0E00               	movlw	0
  2289   000E90                     u1120:
  2290   000E90  6E33               	movwf	dtoa@s^0,c
  2291   000E92                     
  2292                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2293   000E92  5033               	movf	dtoa@s^0,w,c
  2294   000E94  B4D8               	btfsc	status,2,c
  2295   000E96  EF4F  F007         	goto	u1131
  2296   000E9A  EF51  F007         	goto	u1130
  2297   000E9E                     u1131:
  2298   000E9E  EF55  F007         	goto	l1684
  2299   000EA2                     u1130:
  2300   000EA2                     
  2301                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2302   000EA2  6C29               	negf	dtoa@d^0,c
  2303   000EA4  1E2A               	comf	(dtoa@d+1)^0,f,c
  2304   000EA6  B0D8               	btfsc	status,0,c
  2305   000EA8  2A2A               	incf	(dtoa@d+1)^0,f,c
  2306   000EAA                     l1684:
  2307                           
  2308                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2309   000EAA  BE5F               	btfsc	(_prec+1)^0,7,c
  2310   000EAC  EF5C  F007         	goto	u1140
  2311   000EB0  EF5A  F007         	goto	u1141
  2312   000EB4                     u1141:
  2313   000EB4  EF62  F007         	goto	l886
  2314   000EB8                     u1140:
  2315   000EB8  0E00               	movlw	0
  2316   000EBA  6E2E               	movwf	(dtoa@p+1)^0,c
  2317   000EBC  0E01               	movlw	1
  2318   000EBE  6E2D               	movwf	dtoa@p^0,c
  2319   000EC0  EF66  F007         	goto	l888
  2320   000EC4                     l886:
  2321   000EC4  C05E  F02D         	movff	_prec,dtoa@p
  2322   000EC8  C05F  F02E         	movff	_prec+1,dtoa@p+1
  2323   000ECC                     l888:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2326   000ECC  C05C  F02F         	movff	_width,dtoa@w
  2327   000ED0  C05D  F030         	movff	_width+1,dtoa@w+1
  2328   000ED4                     
  2329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2330   000ED4  5033               	movf	dtoa@s^0,w,c
  2331   000ED6  B4D8               	btfsc	status,2,c
  2332   000ED8  EF70  F007         	goto	u1151
  2333   000EDC  EF72  F007         	goto	u1150
  2334   000EE0                     u1151:
  2335   000EE0  EF89  F007         	goto	l889
  2336   000EE4                     u1150:
  2337   000EE4                     
  2338                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2339   000EE4  062F               	decf	dtoa@w^0,f,c
  2340   000EE6  A0D8               	btfss	status,0,c
  2341   000EE8  0630               	decf	(dtoa@w+1)^0,f,c
  2342   000EEA                     
  2343                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2344   000EEA  5033               	movf	dtoa@s^0,w,c
  2345   000EEC  A4D8               	btfss	status,2,c
  2346   000EEE  EF7B  F007         	goto	u1161
  2347   000EF2  EF7D  F007         	goto	u1160
  2348   000EF6                     u1161:
  2349   000EF6  EF83  F007         	goto	l1696
  2350   000EFA                     u1160:
  2351   000EFA  0E00               	movlw	0
  2352   000EFC  6E2C               	movwf	(_dtoa$1304+1)^0,c
  2353   000EFE  0E2B               	movlw	43
  2354   000F00  6E2B               	movwf	_dtoa$1304^0,c
  2355   000F02  EF87  F007         	goto	l1698
  2356   000F06                     l1696:
  2357   000F06  0E00               	movlw	0
  2358   000F08  6E2C               	movwf	(_dtoa$1304+1)^0,c
  2359   000F0A  0E2D               	movlw	45
  2360   000F0C  6E2B               	movwf	_dtoa$1304^0,c
  2361   000F0E                     l1698:
  2362   000F0E  C02B  F033         	movff	_dtoa$1304,dtoa@s
  2363   000F12                     l889:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2366   000F12  0E00               	movlw	0
  2367   000F14  6E32               	movwf	(dtoa@i+1)^0,c
  2368   000F16  0E1F               	movlw	31
  2369   000F18  6E31               	movwf	dtoa@i^0,c
  2370   000F1A                     
  2371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2372   000F1A  0E00               	movlw	0
  2373   000F1C  0100               	movlb	0	; () banked
  2374   000F1E  6FB7               	movwf	(_dbuf+31)& (0+255),b
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2377   000F20  EFC2  F007         	goto	l1712
  2378   000F24                     l1702:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2381   000F24  0631               	decf	dtoa@i^0,f,c
  2382   000F26  A0D8               	btfss	status,0,c
  2383   000F28  0632               	decf	(dtoa@i+1)^0,f,c
  2384   000F2A                     
  2385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2386   000F2A  0E98               	movlw	low _dbuf
  2387   000F2C  2431               	addwf	dtoa@i^0,w,c
  2388   000F2E  6ED9               	movwf	fsr2l,c
  2389   000F30  0E00               	movlw	high _dbuf
  2390   000F32  2032               	addwfc	(dtoa@i+1)^0,w,c
  2391   000F34  6EDA               	movwf	fsr2h,c
  2392   000F36  C029  F00B         	movff	dtoa@d,___awmod@dividend
  2393   000F3A  C02A  F00C         	movff	dtoa@d+1,___awmod@dividend+1
  2394   000F3E  0E00               	movlw	0
  2395   000F40  6E0E               	movwf	(___awmod@divisor+1)^0,c
  2396   000F42  0E0A               	movlw	10
  2397   000F44  6E0D               	movwf	___awmod@divisor^0,c
  2398   000F46  EC61  F009         	call	___awmod	;wreg free
  2399   000F4A  C00B  F011         	movff	?___awmod,abs@a
  2400   000F4E  C00C  F012         	movff	?___awmod+1,abs@a+1
  2401   000F52  ECE7  F00A         	call	_abs	;wreg free
  2402   000F56  5011               	movf	?_abs^0,w,c
  2403   000F58  0F30               	addlw	48
  2404   000F5A  6EDF               	movwf	indf2,c
  2405   000F5C                     
  2406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2407   000F5C  062D               	decf	dtoa@p^0,f,c
  2408   000F5E  A0D8               	btfss	status,0,c
  2409   000F60  062E               	decf	(dtoa@p+1)^0,f,c
  2410   000F62                     
  2411                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2412   000F62  062F               	decf	dtoa@w^0,f,c
  2413   000F64  A0D8               	btfss	status,0,c
  2414   000F66  0630               	decf	(dtoa@w+1)^0,f,c
  2415   000F68                     
  2416                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2417   000F68  C029  F00B         	movff	dtoa@d,___awdiv@dividend
  2418   000F6C  C02A  F00C         	movff	dtoa@d+1,___awdiv@dividend+1
  2419   000F70  0E00               	movlw	0
  2420   000F72  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  2421   000F74  0E0A               	movlw	10
  2422   000F76  6E0D               	movwf	___awdiv@divisor^0,c
  2423   000F78  ECFF  F008         	call	___awdiv	;wreg free
  2424   000F7C  C00B  F029         	movff	?___awdiv,dtoa@d
  2425   000F80  C00C  F02A         	movff	?___awdiv+1,dtoa@d+1
  2426   000F84                     l1712:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2429   000F84  BE32               	btfsc	(dtoa@i+1)^0,7,c
  2430   000F86  EFCD  F007         	goto	u1171
  2431   000F8A  5032               	movf	(dtoa@i+1)^0,w,c
  2432   000F8C  E108               	bnz	u1170
  2433   000F8E  0431               	decf	dtoa@i^0,w,c
  2434   000F90  A0D8               	btfss	status,0,c
  2435   000F92  EFCD  F007         	goto	u1171
  2436   000F96  EFCF  F007         	goto	u1170
  2437   000F9A                     u1171:
  2438   000F9A  EFE5  F007         	goto	l1718
  2439   000F9E                     u1170:
  2440   000F9E  5029               	movf	dtoa@d^0,w,c
  2441   000FA0  102A               	iorwf	(dtoa@d+1)^0,w,c
  2442   000FA2  A4D8               	btfss	status,2,c
  2443   000FA4  EFD6  F007         	goto	u1181
  2444   000FA8  EFD8  F007         	goto	u1180
  2445   000FAC                     u1181:
  2446   000FAC  EF92  F007         	goto	l1702
  2447   000FB0                     u1180:
  2448   000FB0  BE2E               	btfsc	(dtoa@p+1)^0,7,c
  2449   000FB2  EFE5  F007         	goto	u1190
  2450   000FB6  502E               	movf	(dtoa@p+1)^0,w,c
  2451   000FB8  E106               	bnz	u1191
  2452   000FBA  042D               	decf	dtoa@p^0,w,c
  2453   000FBC  B0D8               	btfsc	status,0,c
  2454   000FBE  EFE3  F007         	goto	u1191
  2455   000FC2  EFE5  F007         	goto	u1190
  2456   000FC6                     u1191:
  2457   000FC6  EF92  F007         	goto	l1702
  2458   000FCA                     u1190:
  2459   000FCA                     l1718:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2462   000FCA  5033               	movf	dtoa@s^0,w,c
  2463   000FCC  B4D8               	btfsc	status,2,c
  2464   000FCE  EFEB  F007         	goto	u1201
  2465   000FD2  EFED  F007         	goto	u1200
  2466   000FD6                     u1201:
  2467   000FD6  EFF8  F007         	goto	l1724
  2468   000FDA                     u1200:
  2469   000FDA                     
  2470                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2471   000FDA  0631               	decf	dtoa@i^0,f,c
  2472   000FDC  A0D8               	btfss	status,0,c
  2473   000FDE  0632               	decf	(dtoa@i+1)^0,f,c
  2474   000FE0                     
  2475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2476   000FE0  0E98               	movlw	low _dbuf
  2477   000FE2  2431               	addwf	dtoa@i^0,w,c
  2478   000FE4  6ED9               	movwf	fsr2l,c
  2479   000FE6  0E00               	movlw	high _dbuf
  2480   000FE8  2032               	addwfc	(dtoa@i+1)^0,w,c
  2481   000FEA  6EDA               	movwf	fsr2h,c
  2482   000FEC  C033  FFDF         	movff	dtoa@s,indf2
  2483   000FF0                     l1724:
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2486   000FF0  C027  F01C         	movff	dtoa@fp,pad@fp
  2487   000FF4  C028  F01D         	movff	dtoa@fp+1,pad@fp+1
  2488   000FF8  0E98               	movlw	low _dbuf
  2489   000FFA  2431               	addwf	dtoa@i^0,w,c
  2490   000FFC  6E1E               	movwf	pad@buf^0,c
  2491   000FFE  0E00               	movlw	high _dbuf
  2492   001000  2032               	addwfc	(dtoa@i+1)^0,w,c
  2493   001002  6E1F               	movwf	(pad@buf+1)^0,c
  2494   001004  C02F  F020         	movff	dtoa@w,pad@p
  2495   001008  C030  F021         	movff	dtoa@w+1,pad@p+1
  2496   00100C  ECF6  F009         	call	_pad	;wreg free
  2497   001010  0012               	return		;funcret
  2498   001012                     __end_of_dtoa:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function _pad *****************
  2502 ;; Defined at:
  2503 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2506 ;;		 -> NULL(0), 
  2507 ;;  buf             2   29[COMRAM] PTR unsigned char 
  2508 ;;		 -> dbuf(32), 
  2509 ;;  p               2   31[COMRAM] int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  w               2   36[COMRAM] int 
  2512 ;;  i               2   34[COMRAM] int 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         6       0       0       0       0       0       0
  2523 ;;      Locals:         4       0       0       0       0       0       0
  2524 ;;      Temps:          1       0       0       0       0       0       0
  2525 ;;      Totals:        11       0       0       0       0       0       0
  2526 ;;Total ram usage:       11 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 4
  2529 ;; This function calls:
  2530 ;;		_fputc
  2531 ;;		_fputs
  2532 ;; This function is called by:
  2533 ;;		_dtoa
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text8
  2538   0013EC                     __ptext8:
  2539                           	callstack 0
  2540   0013EC                     _pad:
  2541                           	callstack 22
  2542   0013EC                     
  2543                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2544   0013EC  BE21               	btfsc	(pad@p+1)^0,7,c
  2545   0013EE  EFFB  F009         	goto	u1081
  2546   0013F2  EFFD  F009         	goto	u1080
  2547   0013F6                     u1081:
  2548   0013F6  EF03  F00A         	goto	l1664
  2549   0013FA                     u1080:
  2550   0013FA  C020  F025         	movff	pad@p,pad@w
  2551   0013FE  C021  F026         	movff	pad@p+1,pad@w+1
  2552   001402  EF07  F00A         	goto	l877
  2553   001406                     l1664:
  2554   001406  0E00               	movlw	0
  2555   001408  6E26               	movwf	(pad@w+1)^0,c
  2556   00140A  0E00               	movlw	0
  2557   00140C  6E25               	movwf	pad@w^0,c
  2558   00140E                     l877:
  2559                           
  2560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2561   00140E  0E00               	movlw	0
  2562   001410  6E24               	movwf	(pad@i+1)^0,c
  2563   001412  0E00               	movlw	0
  2564   001414  6E23               	movwf	pad@i^0,c
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2567   001416  EF19  F00A         	goto	l1670
  2568   00141A                     l1666:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2571   00141A  0E00               	movlw	0
  2572   00141C  6E0D               	movwf	(fputc@c+1)^0,c
  2573   00141E  0E20               	movlw	32
  2574   001420  6E0C               	movwf	fputc@c^0,c
  2575   001422  C01C  F00E         	movff	pad@fp,fputc@fp
  2576   001426  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  2577   00142A  EC9A  F008         	call	_fputc	;wreg free
  2578   00142E                     
  2579                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2580   00142E  4A23               	infsnz	pad@i^0,f,c
  2581   001430  2A24               	incf	(pad@i+1)^0,f,c
  2582   001432                     l1670:
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2585   001432  5025               	movf	pad@w^0,w,c
  2586   001434  5C23               	subwf	pad@i^0,w,c
  2587   001436  5024               	movf	(pad@i+1)^0,w,c
  2588   001438  0A80               	xorlw	128
  2589   00143A  6E22               	movwf	??_pad^0,c
  2590   00143C  5026               	movf	(pad@w+1)^0,w,c
  2591   00143E  0A80               	xorlw	128
  2592   001440  5822               	subwfb	??_pad^0,w,c
  2593   001442  A0D8               	btfss	status,0,c
  2594   001444  EF26  F00A         	goto	u1091
  2595   001448  EF28  F00A         	goto	u1090
  2596   00144C                     u1091:
  2597   00144C  EF0D  F00A         	goto	l1666
  2598   001450                     u1090:
  2599   001450                     
  2600                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2601   001450  C01E  F015         	movff	pad@buf,fputs@s
  2602   001454  C01F  F016         	movff	pad@buf+1,fputs@s+1
  2603   001458  C01C  F017         	movff	pad@fp,fputs@fp
  2604   00145C  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  2605   001460  ECC5  F00A         	call	_fputs	;wreg free
  2606   001464  0012               	return		;funcret
  2607   001466                     __end_of_pad:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _fputs *****************
  2611 ;; Defined at:
  2612 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  s               2   20[COMRAM] PTR const unsigned char 
  2615 ;;		 -> dbuf(32), 
  2616 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  2617 ;;		 -> NULL(0), 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  i               2   25[COMRAM] int 
  2620 ;;  c               1   24[COMRAM] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  2   20[COMRAM] int 
  2623 ;; Registers used:
  2624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2630 ;;      Params:         4       0       0       0       0       0       0
  2631 ;;      Locals:         3       0       0       0       0       0       0
  2632 ;;      Temps:          0       0       0       0       0       0       0
  2633 ;;      Totals:         7       0       0       0       0       0       0
  2634 ;;Total ram usage:        7 bytes
  2635 ;; Hardware stack levels used: 1
  2636 ;; Hardware stack levels required when called: 3
  2637 ;; This function calls:
  2638 ;;		_fputc
  2639 ;; This function is called by:
  2640 ;;		_pad
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text9
  2645   00158A                     __ptext9:
  2646                           	callstack 0
  2647   00158A                     _fputs:
  2648                           	callstack 22
  2649   00158A  0E00               	movlw	0
  2650   00158C  6E1B               	movwf	(fputs@i+1)^0,c
  2651   00158E  0E00               	movlw	0
  2652   001590  6E1A               	movwf	fputs@i^0,c
  2653   001592  EFD6  F00A         	goto	l1578
  2654   001596                     l1574:
  2655   001596  C019  F00C         	movff	fputs@c,fputc@c
  2656   00159A  6A0D               	clrf	(fputc@c+1)^0,c
  2657   00159C  C017  F00E         	movff	fputs@fp,fputc@fp
  2658   0015A0  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  2659   0015A4  EC9A  F008         	call	_fputc	;wreg free
  2660   0015A8  4A1A               	infsnz	fputs@i^0,f,c
  2661   0015AA  2A1B               	incf	(fputs@i+1)^0,f,c
  2662   0015AC                     l1578:
  2663   0015AC  501A               	movf	fputs@i^0,w,c
  2664   0015AE  2415               	addwf	fputs@s^0,w,c
  2665   0015B0  6ED9               	movwf	fsr2l,c
  2666   0015B2  501B               	movf	(fputs@i+1)^0,w,c
  2667   0015B4  2016               	addwfc	(fputs@s+1)^0,w,c
  2668   0015B6  6EDA               	movwf	fsr2h,c
  2669   0015B8  50DF               	movf	indf2,w,c
  2670   0015BA  6E19               	movwf	fputs@c^0,c
  2671   0015BC  5019               	movf	fputs@c^0,w,c
  2672   0015BE  A4D8               	btfss	status,2,c
  2673   0015C0  EFE4  F00A         	goto	u951
  2674   0015C4  EFE6  F00A         	goto	u950
  2675   0015C8                     u951:
  2676   0015C8  EFCB  F00A         	goto	l1574
  2677   0015CC                     u950:
  2678   0015CC  0012               	return		;funcret
  2679   0015CE                     __end_of_fputs:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function _fputc *****************
  2683 ;; Defined at:
  2684 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  c               2   11[COMRAM] int 
  2687 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2688 ;;		 -> NULL(0), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  2   11[COMRAM] int 
  2693 ;; Registers used:
  2694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2700 ;;      Params:         4       0       0       0       0       0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0
  2702 ;;      Temps:          5       0       0       0       0       0       0
  2703 ;;      Totals:         9       0       0       0       0       0       0
  2704 ;;Total ram usage:        9 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; Hardware stack levels required when called: 2
  2707 ;; This function calls:
  2708 ;;		_putch
  2709 ;; This function is called by:
  2710 ;;		_pad
  2711 ;;		_vfpfcnvrt
  2712 ;;		_fputs
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text10
  2717   001134                     __ptext10:
  2718                           	callstack 0
  2719   001134                     _fputc:
  2720                           	callstack 25
  2721   001134  500E               	movf	fputc@fp^0,w,c
  2722   001136  100F               	iorwf	(fputc@fp+1)^0,w,c
  2723   001138  B4D8               	btfsc	status,2,c
  2724   00113A  EFA1  F008         	goto	u911
  2725   00113E  EFA3  F008         	goto	u910
  2726   001142                     u911:
  2727   001142  EFAC  F008         	goto	l1562
  2728   001146                     u910:
  2729   001146  500E               	movf	fputc@fp^0,w,c
  2730   001148  100F               	iorwf	(fputc@fp+1)^0,w,c
  2731   00114A  A4D8               	btfss	status,2,c
  2732   00114C  EFAA  F008         	goto	u921
  2733   001150  EFAC  F008         	goto	u920
  2734   001154                     u921:
  2735   001154  EFB1  F008         	goto	l1564
  2736   001158                     u920:
  2737   001158                     l1562:
  2738   001158  500C               	movf	fputc@c^0,w,c
  2739   00115A  EC4D  F00B         	call	_putch
  2740   00115E  EFFE  F008         	goto	l932
  2741   001162                     l1564:
  2742   001162  EE20 F00A          	lfsr	2,10
  2743   001166  500E               	movf	fputc@fp^0,w,c
  2744   001168  26D9               	addwf	fsr2l,f,c
  2745   00116A  500F               	movf	(fputc@fp+1)^0,w,c
  2746   00116C  22DA               	addwfc	fsr2h,f,c
  2747   00116E  50DE               	movf	postinc2,w,c
  2748   001170  10DE               	iorwf	postinc2,w,c
  2749   001172  B4D8               	btfsc	status,2,c
  2750   001174  EFBE  F008         	goto	u931
  2751   001178  EFC0  F008         	goto	u930
  2752   00117C                     u931:
  2753   00117C  EFDB  F008         	goto	l1568
  2754   001180                     u930:
  2755   001180  EE20 F00A          	lfsr	2,10
  2756   001184  500E               	movf	fputc@fp^0,w,c
  2757   001186  26D9               	addwf	fsr2l,f,c
  2758   001188  500F               	movf	(fputc@fp+1)^0,w,c
  2759   00118A  22DA               	addwfc	fsr2h,f,c
  2760   00118C  EE10 F003          	lfsr	1,3
  2761   001190  500E               	movf	fputc@fp^0,w,c
  2762   001192  26E1               	addwf	fsr1l,f,c
  2763   001194  500F               	movf	(fputc@fp+1)^0,w,c
  2764   001196  22E2               	addwfc	fsr1h,f,c
  2765   001198  50DE               	movf	postinc2,w,c
  2766   00119A  5CE6               	subwf	postinc1,w,c
  2767   00119C  50E6               	movf	postinc1,w,c
  2768   00119E  0A80               	xorlw	128
  2769   0011A0  6E14               	movwf	(??_fputc+4)^0,c
  2770   0011A2  50DE               	movf	postinc2,w,c
  2771   0011A4  0A80               	xorlw	128
  2772   0011A6  5814               	subwfb	(??_fputc+4)^0,w,c
  2773   0011A8  B0D8               	btfsc	status,0,c
  2774   0011AA  EFD9  F008         	goto	u941
  2775   0011AE  EFDB  F008         	goto	u940
  2776   0011B2                     u941:
  2777   0011B2  EFFE  F008         	goto	l932
  2778   0011B6                     u940:
  2779   0011B6                     l1568:
  2780   0011B6  EE20 F003          	lfsr	2,3
  2781   0011BA  500E               	movf	fputc@fp^0,w,c
  2782   0011BC  26D9               	addwf	fsr2l,f,c
  2783   0011BE  500F               	movf	(fputc@fp+1)^0,w,c
  2784   0011C0  22DA               	addwfc	fsr2h,f,c
  2785   0011C2  CFDE F010          	movff	postinc2,??_fputc
  2786   0011C6  CFDD F011          	movff	postdec2,??_fputc+1
  2787   0011CA  C00E  FFD9         	movff	fputc@fp,fsr2l
  2788   0011CE  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  2789   0011D2  CFDE F012          	movff	postinc2,??_fputc+2
  2790   0011D6  CFDD F013          	movff	postdec2,??_fputc+3
  2791   0011DA  5010               	movf	??_fputc^0,w,c
  2792   0011DC  2412               	addwf	(??_fputc+2)^0,w,c
  2793   0011DE  6ED9               	movwf	fsr2l,c
  2794   0011E0  5011               	movf	(??_fputc+1)^0,w,c
  2795   0011E2  2013               	addwfc	(??_fputc+3)^0,w,c
  2796   0011E4  6EDA               	movwf	fsr2h,c
  2797   0011E6  C00C  FFDF         	movff	fputc@c,indf2
  2798   0011EA  EE20 F003          	lfsr	2,3
  2799   0011EE  500E               	movf	fputc@fp^0,w,c
  2800   0011F0  26D9               	addwf	fsr2l,f,c
  2801   0011F2  500F               	movf	(fputc@fp+1)^0,w,c
  2802   0011F4  22DA               	addwfc	fsr2h,f,c
  2803   0011F6  2ADE               	incf	postinc2,f,c
  2804   0011F8  0E00               	movlw	0
  2805   0011FA  22DD               	addwfc	postdec2,f,c
  2806   0011FC                     l932:
  2807   0011FC  0012               	return		;funcret
  2808   0011FE                     __end_of_fputc:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _putch *****************
  2812 ;; Defined at:
  2813 ;;		line 30 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  byte            1    wreg     unsigned char 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  byte            1   10[COMRAM] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2827 ;;      Params:         0       0       0       0       0       0       0
  2828 ;;      Locals:         1       0       0       0       0       0       0
  2829 ;;      Temps:          0       0       0       0       0       0       0
  2830 ;;      Totals:         1       0       0       0       0       0       0
  2831 ;;Total ram usage:        1 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 1
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_fputc
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           	psect	text11
  2842   00169A                     __ptext11:
  2843                           	callstack 0
  2844   00169A                     _putch:
  2845                           	callstack 25
  2846                           
  2847                           ;incstack = 0
  2848                           ;putch@byte stored from wreg
  2849   00169A  6E0B               	movwf	putch@byte^0,c
  2850   00169C                     
  2851                           ;main.c: 31:     TXREG = byte;
  2852   00169C  C00B  FFAD         	movff	putch@byte,4013	;volatile
  2853   0016A0                     l53:
  2854   0016A0  A2AC               	btfss	172,1,c	;volatile
  2855   0016A2  EF55  F00B         	goto	u901
  2856   0016A6  EF57  F00B         	goto	u900
  2857   0016AA                     u901:
  2858   0016AA  EF50  F00B         	goto	l53
  2859   0016AE                     u900:
  2860   0016AE  0012               	return		;funcret
  2861   0016B0                     __end_of_putch:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _abs *****************
  2865 ;; Defined at:
  2866 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  a               2   16[COMRAM] int 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;		None
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2   16[COMRAM] int 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2880 ;;      Params:         2       0       0       0       0       0       0
  2881 ;;      Locals:         0       0       0       0       0       0       0
  2882 ;;      Temps:          2       0       0       0       0       0       0
  2883 ;;      Totals:         4       0       0       0       0       0       0
  2884 ;;Total ram usage:        4 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 1
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_dtoa
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text12
  2895   0015CE                     __ptext12:
  2896                           	callstack 0
  2897   0015CE                     _abs:
  2898                           	callstack 25
  2899   0015CE  BE12               	btfsc	(abs@a+1)^0,7,c
  2900   0015D0  EFF4  F00A         	goto	u1100
  2901   0015D4  5012               	movf	(abs@a+1)^0,w,c
  2902   0015D6  E106               	bnz	u1101
  2903   0015D8  0411               	decf	abs@a^0,w,c
  2904   0015DA  B0D8               	btfsc	status,0,c
  2905   0015DC  EFF2  F00A         	goto	u1101
  2906   0015E0  EFF4  F00A         	goto	u1100
  2907   0015E4                     u1101:
  2908   0015E4  EF02  F00B         	goto	l917
  2909   0015E8                     u1100:
  2910   0015E8  C011  F013         	movff	abs@a,??_abs
  2911   0015EC  C012  F014         	movff	abs@a+1,??_abs+1
  2912   0015F0  1E13               	comf	??_abs^0,f,c
  2913   0015F2  1E14               	comf	(??_abs+1)^0,f,c
  2914   0015F4  4A13               	infsnz	??_abs^0,f,c
  2915   0015F6  2A14               	incf	(??_abs+1)^0,f,c
  2916   0015F8  C013  F011         	movff	??_abs,?_abs
  2917   0015FC  C014  F012         	movff	??_abs+1,?_abs+1
  2918   001600  EF06  F00B         	goto	l920
  2919   001604                     l917:
  2920   001604  C011  F011         	movff	abs@a,?_abs
  2921   001608  C012  F012         	movff	abs@a+1,?_abs+1
  2922   00160C                     l920:
  2923   00160C  0012               	return		;funcret
  2924   00160E                     __end_of_abs:
  2925                           	callstack 0
  2926                           
  2927 ;; *************** function ___awmod *****************
  2928 ;; Defined at:
  2929 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  dividend        2   10[COMRAM] int 
  2932 ;;  divisor         2   12[COMRAM] int 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  sign            1   15[COMRAM] unsigned char 
  2935 ;;  counter         1   14[COMRAM] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  2   10[COMRAM] int 
  2938 ;; Registers used:
  2939 ;;		wreg, status,2, status,0
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2945 ;;      Params:         4       0       0       0       0       0       0
  2946 ;;      Locals:         2       0       0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0       0       0
  2948 ;;      Totals:         6       0       0       0       0       0       0
  2949 ;;Total ram usage:        6 bytes
  2950 ;; Hardware stack levels used: 1
  2951 ;; Hardware stack levels required when called: 1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_dtoa
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text13
  2960   0012C2                     __ptext13:
  2961                           	callstack 0
  2962   0012C2                     ___awmod:
  2963                           	callstack 25
  2964   0012C2  0E00               	movlw	0
  2965   0012C4  6E10               	movwf	___awmod@sign^0,c
  2966   0012C6  BE0C               	btfsc	(___awmod@dividend+1)^0,7,c
  2967   0012C8  EF6A  F009         	goto	u1020
  2968   0012CC  EF68  F009         	goto	u1021
  2969   0012D0                     u1021:
  2970   0012D0  EF70  F009         	goto	l1632
  2971   0012D4                     u1020:
  2972   0012D4  6C0B               	negf	___awmod@dividend^0,c
  2973   0012D6  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  2974   0012D8  B0D8               	btfsc	status,0,c
  2975   0012DA  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  2976   0012DC  0E01               	movlw	1
  2977   0012DE  6E10               	movwf	___awmod@sign^0,c
  2978   0012E0                     l1632:
  2979   0012E0  BE0E               	btfsc	(___awmod@divisor+1)^0,7,c
  2980   0012E2  EF77  F009         	goto	u1030
  2981   0012E6  EF75  F009         	goto	u1031
  2982   0012EA                     u1031:
  2983   0012EA  EF7B  F009         	goto	l1636
  2984   0012EE                     u1030:
  2985   0012EE  6C0D               	negf	___awmod@divisor^0,c
  2986   0012F0  1E0E               	comf	(___awmod@divisor+1)^0,f,c
  2987   0012F2  B0D8               	btfsc	status,0,c
  2988   0012F4  2A0E               	incf	(___awmod@divisor+1)^0,f,c
  2989   0012F6                     l1636:
  2990   0012F6  500D               	movf	___awmod@divisor^0,w,c
  2991   0012F8  100E               	iorwf	(___awmod@divisor+1)^0,w,c
  2992   0012FA  B4D8               	btfsc	status,2,c
  2993   0012FC  EF82  F009         	goto	u1041
  2994   001300  EF84  F009         	goto	u1040
  2995   001304                     u1041:
  2996   001304  EFA8  F009         	goto	l1652
  2997   001308                     u1040:
  2998   001308  0E01               	movlw	1
  2999   00130A  6E0F               	movwf	___awmod@counter^0,c
  3000   00130C  EF8C  F009         	goto	l1642
  3001   001310                     l1640:
  3002   001310  90D8               	bcf	status,0,c
  3003   001312  360D               	rlcf	___awmod@divisor^0,f,c
  3004   001314  360E               	rlcf	(___awmod@divisor+1)^0,f,c
  3005   001316  2A0F               	incf	___awmod@counter^0,f,c
  3006   001318                     l1642:
  3007   001318  AE0E               	btfss	(___awmod@divisor+1)^0,7,c
  3008   00131A  EF91  F009         	goto	u1051
  3009   00131E  EF93  F009         	goto	u1050
  3010   001322                     u1051:
  3011   001322  EF88  F009         	goto	l1640
  3012   001326                     u1050:
  3013   001326                     l1644:
  3014   001326  500D               	movf	___awmod@divisor^0,w,c
  3015   001328  5C0B               	subwf	___awmod@dividend^0,w,c
  3016   00132A  500E               	movf	(___awmod@divisor+1)^0,w,c
  3017   00132C  580C               	subwfb	(___awmod@dividend+1)^0,w,c
  3018   00132E  A0D8               	btfss	status,0,c
  3019   001330  EF9C  F009         	goto	u1061
  3020   001334  EF9E  F009         	goto	u1060
  3021   001338                     u1061:
  3022   001338  EFA2  F009         	goto	l1648
  3023   00133C                     u1060:
  3024   00133C  500D               	movf	___awmod@divisor^0,w,c
  3025   00133E  5E0B               	subwf	___awmod@dividend^0,f,c
  3026   001340  500E               	movf	(___awmod@divisor+1)^0,w,c
  3027   001342  5A0C               	subwfb	(___awmod@dividend+1)^0,f,c
  3028   001344                     l1648:
  3029   001344  90D8               	bcf	status,0,c
  3030   001346  320E               	rrcf	(___awmod@divisor+1)^0,f,c
  3031   001348  320D               	rrcf	___awmod@divisor^0,f,c
  3032   00134A  2E0F               	decfsz	___awmod@counter^0,f,c
  3033   00134C  EF93  F009         	goto	l1644
  3034   001350                     l1652:
  3035   001350  5010               	movf	___awmod@sign^0,w,c
  3036   001352  B4D8               	btfsc	status,2,c
  3037   001354  EFAE  F009         	goto	u1071
  3038   001358  EFB0  F009         	goto	u1070
  3039   00135C                     u1071:
  3040   00135C  EFB4  F009         	goto	l1656
  3041   001360                     u1070:
  3042   001360  6C0B               	negf	___awmod@dividend^0,c
  3043   001362  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  3044   001364  B0D8               	btfsc	status,0,c
  3045   001366  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  3046   001368                     l1656:
  3047   001368  C00B  F00B         	movff	___awmod@dividend,?___awmod
  3048   00136C  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
  3049   001370  0012               	return		;funcret
  3050   001372                     __end_of___awmod:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function ___awdiv *****************
  3054 ;; Defined at:
  3055 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  dividend        2   10[COMRAM] int 
  3058 ;;  divisor         2   12[COMRAM] int 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  quotient        2   16[COMRAM] int 
  3061 ;;  sign            1   15[COMRAM] unsigned char 
  3062 ;;  counter         1   14[COMRAM] unsigned char 
  3063 ;; Return value:  Size  Location     Type
  3064 ;;                  2   10[COMRAM] int 
  3065 ;; Registers used:
  3066 ;;		wreg, status,2, status,0
  3067 ;; Tracked objects:
  3068 ;;		On entry : 0/0
  3069 ;;		On exit  : 0/0
  3070 ;;		Unchanged: 0/0
  3071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3072 ;;      Params:         4       0       0       0       0       0       0
  3073 ;;      Locals:         4       0       0       0       0       0       0
  3074 ;;      Temps:          0       0       0       0       0       0       0
  3075 ;;      Totals:         8       0       0       0       0       0       0
  3076 ;;Total ram usage:        8 bytes
  3077 ;; Hardware stack levels used: 1
  3078 ;; Hardware stack levels required when called: 1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_dtoa
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           	psect	text14
  3087   0011FE                     __ptext14:
  3088                           	callstack 0
  3089   0011FE                     ___awdiv:
  3090                           	callstack 25
  3091   0011FE  0E00               	movlw	0
  3092   001200  6E10               	movwf	___awdiv@sign^0,c
  3093   001202  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
  3094   001204  EF08  F009         	goto	u960
  3095   001208  EF06  F009         	goto	u961
  3096   00120C                     u961:
  3097   00120C  EF0E  F009         	goto	l1588
  3098   001210                     u960:
  3099   001210  6C0D               	negf	___awdiv@divisor^0,c
  3100   001212  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
  3101   001214  B0D8               	btfsc	status,0,c
  3102   001216  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
  3103   001218  0E01               	movlw	1
  3104   00121A  6E10               	movwf	___awdiv@sign^0,c
  3105   00121C                     l1588:
  3106   00121C  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
  3107   00121E  EF15  F009         	goto	u970
  3108   001222  EF13  F009         	goto	u971
  3109   001226                     u971:
  3110   001226  EF1B  F009         	goto	l1594
  3111   00122A                     u970:
  3112   00122A  6C0B               	negf	___awdiv@dividend^0,c
  3113   00122C  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
  3114   00122E  B0D8               	btfsc	status,0,c
  3115   001230  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
  3116   001232  0E01               	movlw	1
  3117   001234  1A10               	xorwf	___awdiv@sign^0,f,c
  3118   001236                     l1594:
  3119   001236  0E00               	movlw	0
  3120   001238  6E12               	movwf	(___awdiv@quotient+1)^0,c
  3121   00123A  0E00               	movlw	0
  3122   00123C  6E11               	movwf	___awdiv@quotient^0,c
  3123   00123E  500D               	movf	___awdiv@divisor^0,w,c
  3124   001240  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
  3125   001242  B4D8               	btfsc	status,2,c
  3126   001244  EF26  F009         	goto	u981
  3127   001248  EF28  F009         	goto	u980
  3128   00124C                     u981:
  3129   00124C  EF50  F009         	goto	l1616
  3130   001250                     u980:
  3131   001250  0E01               	movlw	1
  3132   001252  6E0F               	movwf	___awdiv@counter^0,c
  3133   001254  EF30  F009         	goto	l1602
  3134   001258                     l1600:
  3135   001258  90D8               	bcf	status,0,c
  3136   00125A  360D               	rlcf	___awdiv@divisor^0,f,c
  3137   00125C  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
  3138   00125E  2A0F               	incf	___awdiv@counter^0,f,c
  3139   001260                     l1602:
  3140   001260  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
  3141   001262  EF35  F009         	goto	u991
  3142   001266  EF37  F009         	goto	u990
  3143   00126A                     u991:
  3144   00126A  EF2C  F009         	goto	l1600
  3145   00126E                     u990:
  3146   00126E                     l1604:
  3147   00126E  90D8               	bcf	status,0,c
  3148   001270  3611               	rlcf	___awdiv@quotient^0,f,c
  3149   001272  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
  3150   001274  500D               	movf	___awdiv@divisor^0,w,c
  3151   001276  5C0B               	subwf	___awdiv@dividend^0,w,c
  3152   001278  500E               	movf	(___awdiv@divisor+1)^0,w,c
  3153   00127A  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
  3154   00127C  A0D8               	btfss	status,0,c
  3155   00127E  EF43  F009         	goto	u1001
  3156   001282  EF45  F009         	goto	u1000
  3157   001286                     u1001:
  3158   001286  EF4A  F009         	goto	l1612
  3159   00128A                     u1000:
  3160   00128A  500D               	movf	___awdiv@divisor^0,w,c
  3161   00128C  5E0B               	subwf	___awdiv@dividend^0,f,c
  3162   00128E  500E               	movf	(___awdiv@divisor+1)^0,w,c
  3163   001290  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
  3164   001292  8011               	bsf	___awdiv@quotient^0,0,c
  3165   001294                     l1612:
  3166   001294  90D8               	bcf	status,0,c
  3167   001296  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
  3168   001298  320D               	rrcf	___awdiv@divisor^0,f,c
  3169   00129A  2E0F               	decfsz	___awdiv@counter^0,f,c
  3170   00129C  EF37  F009         	goto	l1604
  3171   0012A0                     l1616:
  3172   0012A0  5010               	movf	___awdiv@sign^0,w,c
  3173   0012A2  B4D8               	btfsc	status,2,c
  3174   0012A4  EF56  F009         	goto	u1011
  3175   0012A8  EF58  F009         	goto	u1010
  3176   0012AC                     u1011:
  3177   0012AC  EF5C  F009         	goto	l1620
  3178   0012B0                     u1010:
  3179   0012B0  6C11               	negf	___awdiv@quotient^0,c
  3180   0012B2  1E12               	comf	(___awdiv@quotient+1)^0,f,c
  3181   0012B4  B0D8               	btfsc	status,0,c
  3182   0012B6  2A12               	incf	(___awdiv@quotient+1)^0,f,c
  3183   0012B8                     l1620:
  3184   0012B8  C011  F00B         	movff	___awdiv@quotient,?___awdiv
  3185   0012BC  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
  3186   0012C0  0012               	return		;funcret
  3187   0012C2                     __end_of___awdiv:
  3188                           	callstack 0
  3189                           
  3190 ;; *************** function _initUART *****************
  3191 ;; Defined at:
  3192 ;;		line 141 in file "main.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, status,2
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3206 ;;      Params:         0       0       0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0
  3209 ;;      Totals:         0       0       0       0       0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; Hardware stack levels required when called: 1
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text15
  3221   001680                     __ptext15:
  3222                           	callstack 0
  3223   001680                     _initUART:
  3224                           	callstack 29
  3225   001680                     
  3226                           ;main.c: 142:     TRISCbits.RC6 = 1;
  3227   001680  8C94               	bsf	148,6,c	;volatile
  3228                           
  3229                           ;main.c: 143:     TRISCbits.RC7 = 1;
  3230   001682  8E94               	bsf	148,7,c	;volatile
  3231   001684                     
  3232                           ;main.c: 144:     SPBRG = 34;
  3233   001684  0E22               	movlw	34
  3234   001686  6EAF               	movwf	175,c	;volatile
  3235                           
  3236                           ;main.c: 145:     SPBRGH = 0;
  3237   001688  0E00               	movlw	0
  3238   00168A  6EB0               	movwf	176,c	;volatile
  3239   00168C                     
  3240                           ;main.c: 146:     BAUDCONbits.BRG16 = 1;
  3241   00168C  86B8               	bsf	184,3,c	;volatile
  3242   00168E                     
  3243                           ;main.c: 147:     TXSTAbits.BRGH = 1;
  3244   00168E  84AC               	bsf	172,2,c	;volatile
  3245   001690                     
  3246                           ;main.c: 148:     TXSTAbits.SYNC = 0;
  3247   001690  98AC               	bcf	172,4,c	;volatile
  3248   001692                     
  3249                           ;main.c: 149:     TXSTAbits.TXEN = 1;
  3250   001692  8AAC               	bsf	172,5,c	;volatile
  3251   001694                     
  3252                           ;main.c: 150:     RCSTAbits.SPEN = 1;
  3253   001694  8EAB               	bsf	171,7,c	;volatile
  3254   001696                     
  3255                           ;main.c: 151:     RCSTAbits.CREN = 1;
  3256   001696  88AB               	bsf	171,4,c	;volatile
  3257   001698  0012               	return		;funcret
  3258   00169A                     __end_of_initUART:
  3259                           	callstack 0
  3260                           
  3261 ;; *************** function _init *****************
  3262 ;; Defined at:
  3263 ;;		line 154 in file "main.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;		None
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg, status,2
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3277 ;;      Params:         0       0       0       0       0       0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0
  3280 ;;      Totals:         0       0       0       0       0       0       0
  3281 ;;Total ram usage:        0 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_main
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text16
  3292   00165A                     __ptext16:
  3293                           	callstack 0
  3294   00165A                     _init:
  3295                           	callstack 29
  3296   00165A                     
  3297                           ;main.c: 155:     ADCON1 = 0x0F;
  3298   00165A  0E0F               	movlw	15
  3299   00165C  6EC1               	movwf	193,c	;volatile
  3300                           
  3301                           ;main.c: 156:     TRISD = 0x00;
  3302   00165E  0E00               	movlw	0
  3303   001660  6E95               	movwf	149,c	;volatile
  3304                           
  3305                           ;main.c: 157:     PORTD = 0x00;
  3306   001662  0E00               	movlw	0
  3307   001664  6E83               	movwf	131,c	;volatile
  3308   001666                     
  3309                           ;main.c: 159:     TRISB = 0xFF;
  3310   001666  6893               	setf	147,c	;volatile
  3311   001668                     
  3312                           ;main.c: 160:     TRISCbits.RC2 = 0;
  3313   001668  9494               	bcf	148,2,c	;volatile
  3314   00166A                     
  3315                           ;main.c: 161:     INTCON2bits.RBPU = 0;
  3316   00166A  9EF1               	bcf	241,7,c	;volatile
  3317   00166C                     
  3318                           ;main.c: 163:     RCONbits.IPEN = 0;
  3319   00166C  9ED0               	bcf	208,7,c	;volatile
  3320   00166E                     
  3321                           ;main.c: 165:     INTCONbits.INT0IF = 0;
  3322   00166E  92F2               	bcf	242,1,c	;volatile
  3323   001670                     
  3324                           ;main.c: 166:     INTCON3bits.INT1IF = 0;
  3325   001670  90F0               	bcf	240,0,c	;volatile
  3326   001672                     
  3327                           ;main.c: 169:     INTCONbits.RBIE = 1;
  3328   001672  86F2               	bsf	242,3,c	;volatile
  3329   001674                     
  3330                           ;main.c: 171:     INTCON2bits.INTEDG0 = 0;
  3331   001674  9CF1               	bcf	241,6,c	;volatile
  3332   001676                     
  3333                           ;main.c: 172:     INTCON2bits.INTEDG1 = 0;
  3334   001676  9AF1               	bcf	241,5,c	;volatile
  3335   001678                     
  3336                           ;main.c: 174:     INTCONbits.INT0IE = 1;
  3337   001678  88F2               	bsf	242,4,c	;volatile
  3338   00167A                     
  3339                           ;main.c: 175:     INTCON3bits.INT1IE = 1;
  3340   00167A  86F0               	bsf	240,3,c	;volatile
  3341   00167C                     
  3342                           ;main.c: 176:     INTCONbits.GIE = 1;
  3343   00167C  8EF2               	bsf	242,7,c	;volatile
  3344   00167E  0012               	return		;funcret
  3345   001680                     __end_of_init:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _interruption *****************
  3349 ;; Defined at:
  3350 ;;		line 35 in file "main.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  i               2    8[COMRAM] int 
  3355 ;;  i               2    6[COMRAM] int 
  3356 ;;  i               2    4[COMRAM] int 
  3357 ;;  i               2    2[COMRAM] int 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3367 ;;      Params:         0       0       0       0       0       0       0
  3368 ;;      Locals:         8       0       0       0       0       0       0
  3369 ;;      Temps:          2       0       0       0       0       0       0
  3370 ;;      Totals:        10       0       0       0       0       0       0
  3371 ;;Total ram usage:       10 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		Interrupt level 2
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	intcode
  3381   000008                     __pintcode:
  3382                           	callstack 0
  3383   000008                     _interruption:
  3384                           	callstack 22
  3385                           
  3386                           ;incstack = 0
  3387   000008  8265               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3388   00000A  ED2A  F006         	call	int_func,f	;refresh shadow registers
  3389                           
  3390                           	psect	intcode_body
  3391   000C54                     __pintcode_body:
  3392                           	callstack 22
  3393   000C54                     int_func:
  3394                           	callstack 22
  3395   000C54  0006               	pop		; remove dummy address from shadow register refresh
  3396   000C56                     
  3397                           ;main.c: 37:     if (INTCONbits.RBIF == 0x01) {
  3398   000C56  A0F2               	btfss	242,0,c	;volatile
  3399   000C58  EF30  F006         	goto	i2u132_41
  3400   000C5C  EF32  F006         	goto	i2u132_40
  3401   000C60                     i2u132_41:
  3402   000C60  EF3D  F007         	goto	i2l81
  3403   000C64                     i2u132_40:
  3404   000C64                     
  3405                           ;main.c: 38:         if (PORTBbits.RB5 == 0)
  3406   000C64  BA81               	btfsc	129,5,c	;volatile
  3407   000C66  EF37  F006         	goto	i2u133_41
  3408   000C6A  EF39  F006         	goto	i2u133_40
  3409   000C6E                     i2u133_41:
  3410   000C6E  EF78  F006         	goto	i2l62
  3411   000C72                     i2u133_40:
  3412   000C72                     
  3413                           ;main.c: 39:         {;main.c: 40:             _delay((unsigned long)((50)*(16000000/400
      +                          0.0)));
  3414   000C72  0E02               	movlw	2
  3415   000C74  6E02               	movwf	(??_interruption+1)^0,c
  3416   000C76  0E04               	movlw	4
  3417   000C78  6E01               	movwf	??_interruption^0,c
  3418   000C7A  0EBA               	movlw	186
  3419   000C7C                     i2u181_47:
  3420   000C7C  2EE8               	decfsz	wreg,f,c
  3421   000C7E  D7FE               	bra	i2u181_47
  3422   000C80  2E01               	decfsz	??_interruption^0,f,c
  3423   000C82  D7FC               	bra	i2u181_47
  3424   000C84  2E02               	decfsz	(??_interruption+1)^0,f,c
  3425   000C86  D7FA               	bra	i2u181_47
  3426   000C88  D000               	nop2	
  3427   000C8A                     
  3428                           ;main.c: 41:             if (PORTBbits.RB5 == 0) {
  3429   000C8A  BA81               	btfsc	129,5,c	;volatile
  3430   000C8C  EF4A  F006         	goto	i2u134_41
  3431   000C90  EF4C  F006         	goto	i2u134_40
  3432   000C94                     i2u134_41:
  3433   000C94  EF3C  F007         	goto	i2l66
  3434   000C98                     i2u134_40:
  3435   000C98                     
  3436                           ;main.c: 42:                 pressedBTN1 = 1;
  3437   000C98  0E00               	movlw	0
  3438   000C9A  0100               	movlb	0	; () banked
  3439   000C9C  6F97               	movwf	(_pressedBTN1+1)& (0+255),b
  3440   000C9E  0E01               	movlw	1
  3441   000CA0  6F96               	movwf	_pressedBTN1& (0+255),b
  3442   000CA2                     
  3443                           ; BSR set to: 0
  3444                           ;main.c: 43:                 PORTDbits.RD0 = 1;
  3445   000CA2  8083               	bsf	131,0,c	;volatile
  3446                           
  3447                           ;main.c: 44:                 for (int i = 0; i < 255; i++) {
  3448   000CA4  0E00               	movlw	0
  3449   000CA6  6E04               	movwf	(interruption@i+1)^0,c
  3450   000CA8  0E00               	movlw	0
  3451   000CAA  6E03               	movwf	interruption@i^0,c
  3452   000CAC                     i2l64:
  3453                           
  3454                           ;main.c: 45:                     PORTCbits.RC2 = 1;
  3455   000CAC  8482               	bsf	130,2,c	;volatile
  3456   000CAE                     
  3457                           ;main.c: 46:                     _delay((unsigned long)((500)*(16000000/4000000.0)));
  3458   000CAE  0E03               	movlw	3
  3459   000CB0  6E01               	movwf	??_interruption^0,c
  3460   000CB2  0E98               	movlw	152
  3461   000CB4                     i2u182_47:
  3462   000CB4  2EE8               	decfsz	wreg,f,c
  3463   000CB6  D7FE               	bra	i2u182_47
  3464   000CB8  2E01               	decfsz	??_interruption^0,f,c
  3465   000CBA  D7FC               	bra	i2u182_47
  3466   000CBC                     
  3467                           ;main.c: 47:                     PORTCbits.RC2 = 0;
  3468   000CBC  9482               	bcf	130,2,c	;volatile
  3469                           
  3470                           ;main.c: 48:                     _delay((unsigned long)((500)*(16000000/4000000.0)));
  3471   000CBE  0E03               	movlw	3
  3472   000CC0  6E01               	movwf	??_interruption^0,c
  3473   000CC2  0E98               	movlw	152
  3474   000CC4                     i2u183_47:
  3475   000CC4  2EE8               	decfsz	wreg,f,c
  3476   000CC6  D7FE               	bra	i2u183_47
  3477   000CC8  2E01               	decfsz	??_interruption^0,f,c
  3478   000CCA  D7FC               	bra	i2u183_47
  3479   000CCC                     
  3480                           ;main.c: 49:                 }
  3481   000CCC  4A03               	infsnz	interruption@i^0,f,c
  3482   000CCE  2A04               	incf	(interruption@i+1)^0,f,c
  3483   000CD0  BE04               	btfsc	(interruption@i+1)^0,7,c
  3484   000CD2  EF73  F006         	goto	i2u135_41
  3485   000CD6  5004               	movf	(interruption@i+1)^0,w,c
  3486   000CD8  E108               	bnz	i2u135_40
  3487   000CDA  2803               	incf	interruption@i^0,w,c
  3488   000CDC  A0D8               	btfss	status,0,c
  3489   000CDE  EF73  F006         	goto	i2u135_41
  3490   000CE2  EF75  F006         	goto	i2u135_40
  3491   000CE6                     i2u135_41:
  3492   000CE6  EF56  F006         	goto	i2l64
  3493   000CEA                     i2u135_40:
  3494   000CEA                     
  3495                           ;main.c: 50:                 PORTDbits.RD0 = 0;
  3496   000CEA  9083               	bcf	131,0,c	;volatile
  3497   000CEC  EF3C  F007         	goto	i2l66
  3498   000CF0                     i2l62:
  3499   000CF0  B881               	btfsc	129,4,c	;volatile
  3500   000CF2  EF7D  F006         	goto	i2u136_41
  3501   000CF6  EF7F  F006         	goto	i2u136_40
  3502   000CFA                     i2u136_41:
  3503   000CFA  EFBE  F006         	goto	i2l67
  3504   000CFE                     i2u136_40:
  3505   000CFE                     
  3506                           ;main.c: 53:             _delay((unsigned long)((50)*(16000000/4000.0)));
  3507   000CFE  0E02               	movlw	2
  3508   000D00  6E02               	movwf	(??_interruption+1)^0,c
  3509   000D02  0E04               	movlw	4
  3510   000D04  6E01               	movwf	??_interruption^0,c
  3511   000D06  0EBA               	movlw	186
  3512   000D08                     i2u184_47:
  3513   000D08  2EE8               	decfsz	wreg,f,c
  3514   000D0A  D7FE               	bra	i2u184_47
  3515   000D0C  2E01               	decfsz	??_interruption^0,f,c
  3516   000D0E  D7FC               	bra	i2u184_47
  3517   000D10  2E02               	decfsz	(??_interruption+1)^0,f,c
  3518   000D12  D7FA               	bra	i2u184_47
  3519   000D14  D000               	nop2	
  3520   000D16                     
  3521                           ;main.c: 54:             if (PORTBbits.RB4 == 0) {
  3522   000D16  B881               	btfsc	129,4,c	;volatile
  3523   000D18  EF90  F006         	goto	i2u137_41
  3524   000D1C  EF92  F006         	goto	i2u137_40
  3525   000D20                     i2u137_41:
  3526   000D20  EF3C  F007         	goto	i2l66
  3527   000D24                     i2u137_40:
  3528   000D24                     
  3529                           ;main.c: 55:                 pressedBTN2 = 1;
  3530   000D24  0E00               	movlw	0
  3531   000D26  0100               	movlb	0	; () banked
  3532   000D28  6F95               	movwf	(_pressedBTN2+1)& (0+255),b
  3533   000D2A  0E01               	movlw	1
  3534   000D2C  6F94               	movwf	_pressedBTN2& (0+255),b
  3535   000D2E                     
  3536                           ; BSR set to: 0
  3537                           ;main.c: 56:                 PORTDbits.RD1 = 1;
  3538   000D2E  8283               	bsf	131,1,c	;volatile
  3539                           
  3540                           ;main.c: 57:                 for (int i = 0; i < 255; i++) {
  3541   000D30  0E00               	movlw	0
  3542   000D32  6E06               	movwf	(interruption@i_687+1)^0,c
  3543   000D34  0E00               	movlw	0
  3544   000D36  6E05               	movwf	interruption@i_687^0,c
  3545   000D38                     i2l69:
  3546                           
  3547                           ;main.c: 58:                     PORTCbits.RC2 = 1;
  3548   000D38  8482               	bsf	130,2,c	;volatile
  3549   000D3A                     
  3550                           ;main.c: 59:                     _delay((unsigned long)((400)*(16000000/4000000.0)));
  3551   000D3A  0EE4               	movlw	228
  3552   000D3C                     i2u185_47:
  3553   000D3C  D000               	nop2	
  3554   000D3E  D000               	nop2	
  3555   000D40  2EE8               	decfsz	wreg,f,c
  3556   000D42  D7FC               	bra	i2u185_47
  3557   000D44  D000               	nop2	
  3558   000D46  D000               	nop2	
  3559   000D48                     
  3560                           ;main.c: 60:                     PORTCbits.RC2 = 0;
  3561   000D48  9482               	bcf	130,2,c	;volatile
  3562                           
  3563                           ;main.c: 61:                     _delay((unsigned long)((400)*(16000000/4000000.0)));
  3564   000D4A  0EE4               	movlw	228
  3565   000D4C                     i2u186_47:
  3566   000D4C  D000               	nop2	
  3567   000D4E  D000               	nop2	
  3568   000D50  2EE8               	decfsz	wreg,f,c
  3569   000D52  D7FC               	bra	i2u186_47
  3570   000D54  D000               	nop2	
  3571   000D56  D000               	nop2	
  3572   000D58                     
  3573                           ;main.c: 62:                 }
  3574   000D58  4A05               	infsnz	interruption@i_687^0,f,c
  3575   000D5A  2A06               	incf	(interruption@i_687+1)^0,f,c
  3576   000D5C  BE06               	btfsc	(interruption@i_687+1)^0,7,c
  3577   000D5E  EFB9  F006         	goto	i2u138_41
  3578   000D62  5006               	movf	(interruption@i_687+1)^0,w,c
  3579   000D64  E108               	bnz	i2u138_40
  3580   000D66  2805               	incf	interruption@i_687^0,w,c
  3581   000D68  A0D8               	btfss	status,0,c
  3582   000D6A  EFB9  F006         	goto	i2u138_41
  3583   000D6E  EFBB  F006         	goto	i2u138_40
  3584   000D72                     i2u138_41:
  3585   000D72  EF9C  F006         	goto	i2l69
  3586   000D76                     i2u138_40:
  3587   000D76                     
  3588                           ;main.c: 63:                 PORTDbits.RD1 = 0;
  3589   000D76  9283               	bcf	131,1,c	;volatile
  3590   000D78  EF3C  F007         	goto	i2l66
  3591   000D7C                     i2l67:
  3592   000D7C  BE81               	btfsc	129,7,c	;volatile
  3593   000D7E  EFC3  F006         	goto	i2u139_41
  3594   000D82  EFC5  F006         	goto	i2u139_40
  3595   000D86                     i2u139_41:
  3596   000D86  EFFE  F006         	goto	i2l72
  3597   000D8A                     i2u139_40:
  3598   000D8A                     
  3599                           ;main.c: 66:             _delay((unsigned long)((50)*(16000000/4000.0)));
  3600   000D8A  0E02               	movlw	2
  3601   000D8C  6E02               	movwf	(??_interruption+1)^0,c
  3602   000D8E  0E04               	movlw	4
  3603   000D90  6E01               	movwf	??_interruption^0,c
  3604   000D92  0EBA               	movlw	186
  3605   000D94                     i2u187_47:
  3606   000D94  2EE8               	decfsz	wreg,f,c
  3607   000D96  D7FE               	bra	i2u187_47
  3608   000D98  2E01               	decfsz	??_interruption^0,f,c
  3609   000D9A  D7FC               	bra	i2u187_47
  3610   000D9C  2E02               	decfsz	(??_interruption+1)^0,f,c
  3611   000D9E  D7FA               	bra	i2u187_47
  3612   000DA0  D000               	nop2	
  3613   000DA2                     
  3614                           ;main.c: 67:             if (PORTBbits.RB7 == 0) {
  3615   000DA2  BE81               	btfsc	129,7,c	;volatile
  3616   000DA4  EFD6  F006         	goto	i2u140_41
  3617   000DA8  EFD8  F006         	goto	i2u140_40
  3618   000DAC                     i2u140_41:
  3619   000DAC  EF3C  F007         	goto	i2l66
  3620   000DB0                     i2u140_40:
  3621   000DB0                     
  3622                           ;main.c: 68:                 pressedBTN3 = 1;
  3623   000DB0  0E00               	movlw	0
  3624   000DB2  0100               	movlb	0	; () banked
  3625   000DB4  6F93               	movwf	(_pressedBTN3+1)& (0+255),b
  3626   000DB6  0E01               	movlw	1
  3627   000DB8  6F92               	movwf	_pressedBTN3& (0+255),b
  3628   000DBA                     
  3629                           ; BSR set to: 0
  3630                           ;main.c: 69:                 PORTDbits.RD2 = 1;
  3631   000DBA  8483               	bsf	131,2,c	;volatile
  3632                           
  3633                           ;main.c: 70:                 for (int i = 0; i < 255; i++) {
  3634   000DBC  0E00               	movlw	0
  3635   000DBE  6E08               	movwf	(interruption@i_688+1)^0,c
  3636   000DC0  0E00               	movlw	0
  3637   000DC2  6E07               	movwf	interruption@i_688^0,c
  3638   000DC4                     i2l74:
  3639                           
  3640                           ;main.c: 71:                     PORTCbits.RC2 = 1;
  3641   000DC4  8482               	bsf	130,2,c	;volatile
  3642   000DC6                     
  3643                           ;main.c: 72:                     _delay((unsigned long)((300)*(16000000/4000000.0)));
  3644   000DC6  0EF0               	movlw	240
  3645   000DC8                     i2u188_47:
  3646   000DC8  D000               	nop2	
  3647   000DCA  2EE8               	decfsz	wreg,f,c
  3648   000DCC  D7FD               	bra	i2u188_47
  3649   000DCE                     
  3650                           ;main.c: 73:                     PORTCbits.RC2 = 0;
  3651   000DCE  9482               	bcf	130,2,c	;volatile
  3652                           
  3653                           ;main.c: 74:                     _delay((unsigned long)((300)*(16000000/4000000.0)));
  3654   000DD0  0EF0               	movlw	240
  3655   000DD2                     i2u189_47:
  3656   000DD2  D000               	nop2	
  3657   000DD4  2EE8               	decfsz	wreg,f,c
  3658   000DD6  D7FD               	bra	i2u189_47
  3659   000DD8                     
  3660                           ;main.c: 75:                 }
  3661   000DD8  4A07               	infsnz	interruption@i_688^0,f,c
  3662   000DDA  2A08               	incf	(interruption@i_688+1)^0,f,c
  3663   000DDC  BE08               	btfsc	(interruption@i_688+1)^0,7,c
  3664   000DDE  EFF9  F006         	goto	i2u141_41
  3665   000DE2  5008               	movf	(interruption@i_688+1)^0,w,c
  3666   000DE4  E108               	bnz	i2u141_40
  3667   000DE6  2807               	incf	interruption@i_688^0,w,c
  3668   000DE8  A0D8               	btfss	status,0,c
  3669   000DEA  EFF9  F006         	goto	i2u141_41
  3670   000DEE  EFFB  F006         	goto	i2u141_40
  3671   000DF2                     i2u141_41:
  3672   000DF2  EFE2  F006         	goto	i2l74
  3673   000DF6                     i2u141_40:
  3674   000DF6                     
  3675                           ;main.c: 76:                 PORTDbits.RD2 = 0;
  3676   000DF6  9483               	bcf	131,2,c	;volatile
  3677   000DF8  EF3C  F007         	goto	i2l66
  3678   000DFC                     i2l72:
  3679   000DFC  BC81               	btfsc	129,6,c	;volatile
  3680   000DFE  EF03  F007         	goto	i2u142_41
  3681   000E02  EF05  F007         	goto	i2u142_40
  3682   000E06                     i2u142_41:
  3683   000E06  EF3C  F007         	goto	i2l66
  3684   000E0A                     i2u142_40:
  3685   000E0A                     
  3686                           ;main.c: 79:             _delay((unsigned long)((50)*(16000000/4000.0)));
  3687   000E0A  0E02               	movlw	2
  3688   000E0C  6E02               	movwf	(??_interruption+1)^0,c
  3689   000E0E  0E04               	movlw	4
  3690   000E10  6E01               	movwf	??_interruption^0,c
  3691   000E12  0EBA               	movlw	186
  3692   000E14                     i2u190_47:
  3693   000E14  2EE8               	decfsz	wreg,f,c
  3694   000E16  D7FE               	bra	i2u190_47
  3695   000E18  2E01               	decfsz	??_interruption^0,f,c
  3696   000E1A  D7FC               	bra	i2u190_47
  3697   000E1C  2E02               	decfsz	(??_interruption+1)^0,f,c
  3698   000E1E  D7FA               	bra	i2u190_47
  3699   000E20  D000               	nop2	
  3700   000E22                     
  3701                           ;main.c: 80:             if (PORTBbits.RB6 == 0) {
  3702   000E22  BC81               	btfsc	129,6,c	;volatile
  3703   000E24  EF16  F007         	goto	i2u143_41
  3704   000E28  EF18  F007         	goto	i2u143_40
  3705   000E2C                     i2u143_41:
  3706   000E2C  EF3C  F007         	goto	i2l66
  3707   000E30                     i2u143_40:
  3708   000E30                     
  3709                           ;main.c: 81:                 pressedBTN4 = 1;
  3710   000E30  0E00               	movlw	0
  3711   000E32  0100               	movlb	0	; () banked
  3712   000E34  6F91               	movwf	(_pressedBTN4+1)& (0+255),b
  3713   000E36  0E01               	movlw	1
  3714   000E38  6F90               	movwf	_pressedBTN4& (0+255),b
  3715   000E3A                     
  3716                           ; BSR set to: 0
  3717                           ;main.c: 82:                 PORTDbits.RD3 = 1;
  3718   000E3A  8683               	bsf	131,3,c	;volatile
  3719                           
  3720                           ;main.c: 83:                 for (int i = 0; i < 255; i++) {
  3721   000E3C  0E00               	movlw	0
  3722   000E3E  6E0A               	movwf	(interruption@i_689+1)^0,c
  3723   000E40  0E00               	movlw	0
  3724   000E42  6E09               	movwf	interruption@i_689^0,c
  3725   000E44                     i2l79:
  3726                           
  3727                           ;main.c: 84:                     PORTCbits.RC2 = 1;
  3728   000E44  8482               	bsf	130,2,c	;volatile
  3729   000E46                     
  3730                           ;main.c: 85:                     _delay((unsigned long)((200)*(16000000/4000000.0)));
  3731   000E46  0EA0               	movlw	160
  3732   000E48                     i2u191_47:
  3733   000E48  D000               	nop2	
  3734   000E4A  2EE8               	decfsz	wreg,f,c
  3735   000E4C  D7FD               	bra	i2u191_47
  3736   000E4E                     
  3737                           ;main.c: 86:                     PORTCbits.RC2 = 0;
  3738   000E4E  9482               	bcf	130,2,c	;volatile
  3739                           
  3740                           ;main.c: 87:                     _delay((unsigned long)((200)*(16000000/4000000.0)));
  3741   000E50  0EA0               	movlw	160
  3742   000E52                     i2u192_47:
  3743   000E52  D000               	nop2	
  3744   000E54  2EE8               	decfsz	wreg,f,c
  3745   000E56  D7FD               	bra	i2u192_47
  3746   000E58                     
  3747                           ;main.c: 88:                 }
  3748   000E58  4A09               	infsnz	interruption@i_689^0,f,c
  3749   000E5A  2A0A               	incf	(interruption@i_689+1)^0,f,c
  3750   000E5C  BE0A               	btfsc	(interruption@i_689+1)^0,7,c
  3751   000E5E  EF39  F007         	goto	i2u144_41
  3752   000E62  500A               	movf	(interruption@i_689+1)^0,w,c
  3753   000E64  E108               	bnz	i2u144_40
  3754   000E66  2809               	incf	interruption@i_689^0,w,c
  3755   000E68  A0D8               	btfss	status,0,c
  3756   000E6A  EF39  F007         	goto	i2u144_41
  3757   000E6E  EF3B  F007         	goto	i2u144_40
  3758   000E72                     i2u144_41:
  3759   000E72  EF22  F007         	goto	i2l79
  3760   000E76                     i2u144_40:
  3761   000E76                     
  3762                           ;main.c: 89:                 PORTDbits.RD3 = 0;
  3763   000E76  9683               	bcf	131,3,c	;volatile
  3764   000E78                     i2l66:
  3765                           
  3766                           ;main.c: 92:         INTCONbits.RBIF = 0;
  3767   000E78  90F2               	bcf	242,0,c	;volatile
  3768   000E7A                     i2l81:
  3769   000E7A  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3770   000E7C  0011               	retfie		f
  3771   000E7E                     __end_of_interruption:
  3772                           	callstack 0
  3773                           
  3774                           	psect	rparam
  3775   000000                     
  3776                           	psect	temp
  3777   000065                     btemp:
  3778                           	callstack 0
  3779   000065                     	ds	1
  3780   000000                     int$flags	set	btemp
  3781   000000                     wtemp8	set	btemp+1
  3782   000000                     ttemp5	set	btemp+1
  3783   000000                     ttemp6	set	btemp+4
  3784   000000                     ttemp7	set	btemp+8
  3785                           
  3786                           	psect	idloc
  3787                           
  3788                           ;Config register IDLOC0 @ 0x200000
  3789                           ;	unspecified, using default values
  3790   200000                     	org	2097152
  3791   200000  FF                 	db	255
  3792                           
  3793                           ;Config register IDLOC1 @ 0x200001
  3794                           ;	unspecified, using default values
  3795   200001                     	org	2097153
  3796   200001  FF                 	db	255
  3797                           
  3798                           ;Config register IDLOC2 @ 0x200002
  3799                           ;	unspecified, using default values
  3800   200002                     	org	2097154
  3801   200002  FF                 	db	255
  3802                           
  3803                           ;Config register IDLOC3 @ 0x200003
  3804                           ;	unspecified, using default values
  3805   200003                     	org	2097155
  3806   200003  FF                 	db	255
  3807                           
  3808                           ;Config register IDLOC4 @ 0x200004
  3809                           ;	unspecified, using default values
  3810   200004                     	org	2097156
  3811   200004  FF                 	db	255
  3812                           
  3813                           ;Config register IDLOC5 @ 0x200005
  3814                           ;	unspecified, using default values
  3815   200005                     	org	2097157
  3816   200005  FF                 	db	255
  3817                           
  3818                           ;Config register IDLOC6 @ 0x200006
  3819                           ;	unspecified, using default values
  3820   200006                     	org	2097158
  3821   200006  FF                 	db	255
  3822                           
  3823                           ;Config register IDLOC7 @ 0x200007
  3824                           ;	unspecified, using default values
  3825   200007                     	org	2097159
  3826   200007  FF                 	db	255
  3827                           
  3828                           	psect	config
  3829                           
  3830                           ; Padding undefined space
  3831   300000                     	org	3145728
  3832   300000  FF                 	db	255
  3833                           
  3834                           ;Config register CONFIG1H @ 0x300001
  3835                           ;	Oscillator Selection bits
  3836                           ;	OSC = XT, XT oscillator
  3837                           ;	Fail-Safe Clock Monitor Enable bit
  3838                           ;	FCMEN = 0x0, unprogrammed default
  3839                           ;	Internal/External Oscillator Switchover bit
  3840                           ;	IESO = 0x0, unprogrammed default
  3841   300001                     	org	3145729
  3842   300001  01                 	db	1
  3843                           
  3844                           ;Config register CONFIG2L @ 0x300002
  3845                           ;	Power-up Timer Enable bit
  3846                           ;	PWRT = 0x1, unprogrammed default
  3847                           ;	Brown-out Reset Enable bits
  3848                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3849                           ;	Brown Out Reset Voltage bits
  3850                           ;	BORV = 0x3, unprogrammed default
  3851   300002                     	org	3145730
  3852   300002  19                 	db	25
  3853                           
  3854                           ;Config register CONFIG2H @ 0x300003
  3855                           ;	Watchdog Timer Enable bit
  3856                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3857                           ;	Watchdog Timer Postscale Select bits
  3858                           ;	WDTPS = 0xF, unprogrammed default
  3859   300003                     	org	3145731
  3860   300003  1E                 	db	30
  3861                           
  3862                           ; Padding undefined space
  3863   300004                     	org	3145732
  3864   300004  FF                 	db	255
  3865                           
  3866                           ;Config register CONFIG3H @ 0x300005
  3867                           ;	unspecified, using default values
  3868                           ;	CCP2 MUX bit
  3869                           ;	CCP2MX = 0x1, unprogrammed default
  3870                           ;	PORTB A/D Enable bit
  3871                           ;	PBADEN = 0x1, unprogrammed default
  3872                           ;	Low-Power Timer1 Oscillator Enable bit
  3873                           ;	LPT1OSC = 0x0, unprogrammed default
  3874                           ;	MCLR Pin Enable bit
  3875                           ;	MCLRE = 0x1, unprogrammed default
  3876   300005                     	org	3145733
  3877   300005  83                 	db	131
  3878                           
  3879                           ;Config register CONFIG4L @ 0x300006
  3880                           ;	unspecified, using default values
  3881                           ;	Stack Full/Underflow Reset Enable bit
  3882                           ;	STVREN = 0x1, unprogrammed default
  3883                           ;	Single-Supply ICSP Enable bit
  3884                           ;	LVP = 0x1, unprogrammed default
  3885                           ;	Extended Instruction Set Enable bit
  3886                           ;	XINST = 0x0, unprogrammed default
  3887                           ;	Background Debugger Enable bit
  3888                           ;	DEBUG = 0x1, unprogrammed default
  3889   300006                     	org	3145734
  3890   300006  85                 	db	133
  3891                           
  3892                           ; Padding undefined space
  3893   300007                     	org	3145735
  3894   300007  FF                 	db	255
  3895                           
  3896                           ;Config register CONFIG5L @ 0x300008
  3897                           ;	unspecified, using default values
  3898                           ;	Code Protection bit
  3899                           ;	CP0 = 0x1, unprogrammed default
  3900                           ;	Code Protection bit
  3901                           ;	CP1 = 0x1, unprogrammed default
  3902                           ;	Code Protection bit
  3903                           ;	CP2 = 0x1, unprogrammed default
  3904                           ;	Code Protection bit
  3905                           ;	CP3 = 0x1, unprogrammed default
  3906   300008                     	org	3145736
  3907   300008  0F                 	db	15
  3908                           
  3909                           ;Config register CONFIG5H @ 0x300009
  3910                           ;	unspecified, using default values
  3911                           ;	Boot Block Code Protection bit
  3912                           ;	CPB = 0x1, unprogrammed default
  3913                           ;	Data EEPROM Code Protection bit
  3914                           ;	CPD = 0x1, unprogrammed default
  3915   300009                     	org	3145737
  3916   300009  C0                 	db	192
  3917                           
  3918                           ;Config register CONFIG6L @ 0x30000A
  3919                           ;	unspecified, using default values
  3920                           ;	Write Protection bit
  3921                           ;	WRT0 = 0x1, unprogrammed default
  3922                           ;	Write Protection bit
  3923                           ;	WRT1 = 0x1, unprogrammed default
  3924                           ;	Write Protection bit
  3925                           ;	WRT2 = 0x1, unprogrammed default
  3926                           ;	Write Protection bit
  3927                           ;	WRT3 = 0x1, unprogrammed default
  3928   30000A                     	org	3145738
  3929   30000A  0F                 	db	15
  3930                           
  3931                           ;Config register CONFIG6H @ 0x30000B
  3932                           ;	unspecified, using default values
  3933                           ;	Configuration Register Write Protection bit
  3934                           ;	WRTC = 0x1, unprogrammed default
  3935                           ;	Boot Block Write Protection bit
  3936                           ;	WRTB = 0x1, unprogrammed default
  3937                           ;	Data EEPROM Write Protection bit
  3938                           ;	WRTD = 0x1, unprogrammed default
  3939   30000B                     	org	3145739
  3940   30000B  E0                 	db	224
  3941                           
  3942                           ;Config register CONFIG7L @ 0x30000C
  3943                           ;	unspecified, using default values
  3944                           ;	Table Read Protection bit
  3945                           ;	EBTR0 = 0x1, unprogrammed default
  3946                           ;	Table Read Protection bit
  3947                           ;	EBTR1 = 0x1, unprogrammed default
  3948                           ;	Table Read Protection bit
  3949                           ;	EBTR2 = 0x1, unprogrammed default
  3950                           ;	Table Read Protection bit
  3951                           ;	EBTR3 = 0x1, unprogrammed default
  3952   30000C                     	org	3145740
  3953   30000C  0F                 	db	15
  3954                           
  3955                           ;Config register CONFIG7H @ 0x30000D
  3956                           ;	unspecified, using default values
  3957                           ;	Boot Block Table Read Protection bit
  3958                           ;	EBTRB = 0x1, unprogrammed default
  3959   30000D                     	org	3145741
  3960   30000D  40                 	db	64
  3961                           tosu	equ	0xFFF
  3962                           tosh	equ	0xFFE
  3963                           tosl	equ	0xFFD
  3964                           stkptr	equ	0xFFC
  3965                           pclatu	equ	0xFFB
  3966                           pclath	equ	0xFFA
  3967                           pcl	equ	0xFF9
  3968                           tblptru	equ	0xFF8
  3969                           tblptrh	equ	0xFF7
  3970                           tblptrl	equ	0xFF6
  3971                           tablat	equ	0xFF5
  3972                           prodh	equ	0xFF4
  3973                           prodl	equ	0xFF3
  3974                           indf0	equ	0xFEF
  3975                           postinc0	equ	0xFEE
  3976                           postdec0	equ	0xFED
  3977                           preinc0	equ	0xFEC
  3978                           plusw0	equ	0xFEB
  3979                           fsr0h	equ	0xFEA
  3980                           fsr0l	equ	0xFE9
  3981                           wreg	equ	0xFE8
  3982                           indf1	equ	0xFE7
  3983                           postinc1	equ	0xFE6
  3984                           postdec1	equ	0xFE5
  3985                           preinc1	equ	0xFE4
  3986                           plusw1	equ	0xFE3
  3987                           fsr1h	equ	0xFE2
  3988                           fsr1l	equ	0xFE1
  3989                           bsr	equ	0xFE0
  3990                           indf2	equ	0xFDF
  3991                           postinc2	equ	0xFDE
  3992                           postdec2	equ	0xFDD
  3993                           preinc2	equ	0xFDC
  3994                           plusw2	equ	0xFDB
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         73
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     83     100
    BANK0           128     46     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1237$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1237$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1277$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[8]), STR_4(CODE[8]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    sp__generate_random_sequence_easy	PTR int  size(2) Largest target is 8
		 -> generate_random_sequence_easy@array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _rand->___lmul
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___awmod

Critical Paths under _interruption in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruption in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0    7867
                                             79 COMRAM     4     4      0
                                              0 BANK0     46    46      0
                               _init
                           _initUART
                             _printf
                               _rand
                             _setLED
 ---------------------------------------------------------------------------------
 (1) _setLED                                               4     3      1     262
                                             10 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _rand                                                 6     4      2     370
                                             22 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                             10 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    5696
                                             73 COMRAM     6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5262
                                             65 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    4912
                                             51 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    3670
                                             38 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2043
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     953
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     704
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      22
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             16 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _interruption                                        10    10      0     184
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _initUART
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _rand
     ___lmul
   _setLED

 _interruption (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     2E      66       5       79.7%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     53      64       1       79.4%
BITBIGSFRhlhhhh     1F      0       0      17        0.0%
BITBIGSFRlhhh       15      0       0      22        0.0%
BITBIGSFRlhhl        F      0       0      23        0.0%
BITBIGSFRhlhhhl      E      0       0      18        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRhlhhl       8      0       0      19        0.0%
BITBIGSFRhlhl        7      0       0      20        0.0%
BITBIGSFRhll         1      0       0      21        0.0%
BITBIGSFRll          1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      25        0.0%
DATA                 0      0      CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 06 01:38:28 2023

                                l53 16A0                                  l56 16AE  
                                l90 13EA                                  l85 1378  
                                l87 1386                                  l88 1394  
                                l89 13A2                        ___awdiv@sign 0010  
                               l102 1698                                 l105 167E  
                               l126 07D8                                 l421 1370  
                               l408 12C0                                 l188 152A  
                               l189 153A                                 l900 1010  
                               l920 160C                                 l913 1588  
                               l907 1132                                 l932 11FC  
                               l940 15CC                                 l917 1604  
                               l855 1658                                 l881 1464  
                               l948 14D0                                 l877 140E  
                               l886 0EC4                                 l888 0ECC  
                               l889 0F12                                 u900 16AE  
                               u901 16AA                                 u910 1146  
                               u911 1142                                 u920 1158  
                               u921 1154                                 u930 1180  
                               u931 117C                                 u940 11B6  
                               u941 11B2                                 u950 15CC  
                               u951 15C8                                 u960 1210  
                               u961 120C                                 u970 122A  
                               u971 1226                                 u980 1250  
                               u981 124C                                 u990 126E  
                               u991 126A                                 _abs 15CE  
                               _pad 13EC                        ___awmod@sign 0010  
                               wreg 0FE8                                l2000 07A0  
                              l2010 07F2                                l2002 07B6  
                              ?_abs 0011                                l2100 0B46  
                              l2020 0868                                l2012 080A  
                              l2004 07BC                                l2110 0B78  
                              l2102 0B4E                                l2030 08AA  
                              l2022 0884                                l2006 07D8  
                              l2120 0BB6                                l2040 0920  
                              l2032 08C2                                l2024 0890  
                              l2016 082A                                l2008 07E0  
                              l2112 0B88                                l2130 0C04  
                              l2122 0BCA                                l2106 0B56  
                              l2050 095A                                l2018 084E  
                              l2132 0C12                                l2140 0C40  
                              l2124 0BDC                                l2116 0B9E  
                              l2108 0B68                                l2060 09D0  
                              l2052 0972                                l2044 0940  
                              l2036 08E2                                l2028 0898  
                              l2134 0C1E                                l2126 0BE4  
                              l2142 0C4C                                l2070 0A0A  
                              l2038 0906                                l1600 1258  
                              l2136 0C38                                l2080 0A80  
                              l2072 0A22                                l2064 09F0  
                              l2056 0992                                l2048 0948  
                              l1610 1292                                l1602 1260  
                              l2090 0ABA                                l2058 09B6  
                              l1620 12B8                                l1612 1294  
                              l1604 126E                                l1700 0F1A  
                              l2092 0AC2                                l2084 0AA0  
                              l2076 0A42                                l2068 09F8  
                              l1614 129A                                l1606 1274  
                              l1630 12DC                                l1710 0F68  
                              l1702 0F24                                l2078 0A66  
                              l1800 1694                                l1608 128A  
                              l1616 12A0                                l1640 1310  
                              l1632 12E0                                l1624 12C2  
                              l1560 1146                                l1720 0FDA  
                              l1704 0F2A                                l1712 0F84  
                              l2168 13C4                                l2096 0AE2  
                              l2088 0AA8                                l1810 166A  
                              l1802 1696                                l1618 12B0  
                              l1650 134A                                l1642 1318  
                              l1634 12EE                                l1626 12C6  
                              l1562 1158                                l1722 0FE0  
                              l1714 0F9E                                l1706 0F5C  
                              l1730 1036                                l2098 0B08  
                              l1820 1674                                l1812 166C  
                              l1804 165A                                l1580 11FE  
                              l1644 1326                                l1652 1350  
                              l1636 12F6                                l1628 12D4  
                              l1556 169C                                l1564 1162  
                              l1572 158A                                l1660 13EC  
                              l1724 0FF0                                l1716 0FB0  
                              l1708 0F62                                l1740 1080  
                              l1732 1044                                l1822 1676  
                              l1814 166E                                l1806 1666  
                              l1590 122A                                l1582 1202  
                              l1654 1360                                l1646 133C  
                              l1638 1308                                l1566 1180  
                              l1558 1134                                l1574 1596  
                              l1670 1432                                l1662 13FA  
                              l1718 0FCA                                l1742 109C  
                              l1734 1050                                l1830 1466  
                              l1824 1678                                l1816 1670  
                              l1808 1668                                l1592 1232  
                              l1584 1210                                l1656 1368  
                              l1648 1344                                l1568 11B6  
                              l1576 15A8                                l1672 1450  
                              l1664 1406                                l1680 0E92  
                              l1744 10E0                                l1736 1054  
                              l1752 110A                                l1728 1012  
                              l1760 14E2                                l1832 14A2  
                              l1826 167A                                l1818 1672  
                              l1594 1236                                l1586 1218  
                              l1674 15CE                                l1578 15AC  
                              l1666 141A                                l1690 0EE4  
                              l1682 0EA2                                l1738 1064  
                              l1770 1548                                l1762 14F0  
                              l1828 167C                                l1596 123E  
                              l1588 121C                                l1676 15E8  
                              l1668 142E                                l1692 0EEA  
                              l1684 0EAA                                l1748 10F8  
                              l1772 1564                                l1836 1634  
                              l1764 1500                                l1940 062C  
                              l1790 1684                                l1598 1250  
                              l1694 0EFA                                l1686 0EB8  
                              l1678 0E7E                                l1774 1580  
                              l1838 163C                                l1766 150A  
                              l1758 14D2                                l1782 13B0  
                              l1950 0656                                l1942 0638  
                              l1792 168C                                l1696 0F06  
                              l1688 0ED4                                l1768 153C  
                              l1960 0682                                l1952 065E  
                              l1944 0644                                l1794 168E  
                              l1698 0F0E                                l1778 1374  
                              l1962 0682                                l1954 066A  
                              l1946 0644                                l1938 0624  
                              l1796 1690                                l1788 1680  
                              l1980 06E8                                l1972 06B0  
                              l1964 0696                                l1956 0672  
                              l1948 064E                                l1798 1692  
                              l1982 0704                                l1974 06BE  
                              l1966 06A8                                l1958 067A  
                              ?_pad 001C                                l1992 0726  
                              l1976 06CA                                l1984 070C  
                              l1994 074C                                l1986 071E  
                              l1978 06E4                                l1996 076A  
                              l1998 0782                                STR_1 0601  
                              STR_2 061E                                STR_3 061E  
                              STR_4 060E                                STR_5 0616  
                              u1000 128A                                u1001 1286  
                              u1010 12B0                                u1011 12AC  
                              u1020 12D4                                u1100 15E8  
                              u1021 12D0                                u1101 15E4  
                              u1030 12EE                                u1110 0E8E  
                              u1031 12EA                                u1111 0E88  
                              u1040 1308                                u1200 0FDA  
                              u1120 0E90                                u1041 1304  
                              u1201 0FD6                                u1050 1326  
                              u1130 0EA2                                u1210 1036  
                              u1051 1322                                u1131 0E9E  
                              u1211 1032                                u1060 133C  
                              u1140 0EB8                                u1220 1080  
                              u1061 1338                                u1141 0EB4  
                              u1221 107C                                u1070 1360  
                              u1150 0EE4                                u1230 109C  
                              u1310 14C2                                u1071 135C  
                              u1151 0EE0                                u1231 1098  
                              u1080 13FA                                u1160 0EFA  
                              u1240 14F0                                u1081 13F6  
                              u1161 0EF6                                u1241 14EC  
                              u1305 13AA                                u1090 1450  
                              u1170 0F9E                                u1250 152A  
                              u1306 13AC                                u1091 144C  
                              u1171 0F9A                                u1251 1526  
                              u1315 14B8                                u1180 0FB0  
                              u1260 1580                                u1500 06A8  
                              u1181 0FAC                                u1261 157C  
                              u1501 06A4                                u1190 0FCA  
                              u1510 0704                                u1191 0FC6  
                              u1511 0700                                u1600 0906  
                              u1520 071E                                u1601 0902  
                              u1521 071A                                u1610 093C  
                              u1530 07D8                                u1275 1380  
                              u1611 0938                                u1531 07D4  
                              u1276 1382                                u1700 0ABA  
                              u1620 095A                                u1540 07F2  
                              u1285 138E                                u1701 0AB6  
                              u1621 0956                                u1541 07EE  
                              u1286 1390                                u1710 0ADE  
                              u1630 098E                                u1550 0826  
                              u1295 139C                                u1711 0ADA  
                              u1631 098A                                u1551 0822  
                              u1471 063E                                u1296 139E  
                              u1720 0B46                                u1640 09B6  
                              u1560 084E                                u1721 0B42  
                              u1641 09B2                                u1561 084A  
                              u1481 0664                                u1730 0B68  
                              u1650 09EC                                u1570 0884  
                              u1490 0696                                u1731 0B64  
                              u1651 09E8                                u1571 0880  
                              u1491 0692                                u1740 0B9A  
                              u1660 0A0A                                u1580 08AA  
                              u1741 0B96                                u1661 0A06  
                              u1581 08A6                                u1750 0BB2  
                              u1670 0A3E                                u1590 08DE  
                              u1751 0BAE                                u1671 0A3A  
                              u1591 08DA                                u1807 07AA  
                              u1760 0BCA                                u1680 0A66  
                              u1761 0BC6                                u1681 0A62  
                              u1770 0BDC                                u1690 0A9C  
                              u1771 0BD8                                u1691 0A98  
                              u1780 0C00                                u1781 0BFC  
                              u1797 0774                                i2l70 0D76  
                              i2l62 0CF0                                i2l80 0E76  
                              i2l72 0DFC                                i2l64 0CAC  
                              i2l65 0CEA                                i2l81 0E7A  
                              i2l74 0DC4                                i2l66 0E78  
                              i2l75 0DF6                                i2l67 0D7C  
                              i2l69 0D38                                i2l79 0E44  
                       main@estagio 00E4                                abs@a 0011  
                              _dbuf 0098                                _main 0624  
                              _dtoa 0E7E                                _init 165A  
                              _rand 1466                                _seed 0061  
                              _prec 005E                                pad@i 0023  
                              pad@p 0020                                fsr1h 0FE2  
                              fsr2h 0FDA                                indf2 0FDF  
                              fsr1l 0FE1                                pad@w 0025  
                              fsr2l 0FD9                                btemp 0065  
                              start 000E                        ___param_bank 0000  
                             ??_abs 0013                               ??_pad 0022  
                             ?_main 0001                               ?_dtoa 0027  
                             ?_init 0001                               ?_rand 0017  
                   __end_of___awdiv 12C2                     __end_of___awmod 1372  
                   ___awdiv@divisor 000D                     ___awdiv@counter 000F  
                      vfpfcnvrt@fmt 0036                               _SPBRG 0FAF  
                             _PORTD 0F83                               _TRISB 0F93  
                             _TRISD 0F95                               _TXREG 0FAD  
               ___lmul@multiplicand 000F                               _flags 0060  
                             _fputc 1134                               _fputs 158A  
                             pad@fp 001C                               _width 005C  
                             _putch 169A                               main@i 00D2  
                             dtoa@d 0029                               main@r 00D6  
                             dtoa@i 0031                               dtoa@p 002D  
                             dtoa@s 0033                               dtoa@w 002F  
                             tablat 0FF5                               ttemp5 0066  
                             ttemp6 0069                               ttemp7 006D  
                             status 0FD8                               wtemp8 0066  
                   __initialization 160E                        __end_of_main 0C54  
                      __end_of_dtoa 1012                        __end_of_init 1680  
                      __end_of_rand 14D2                              ??_main 0050  
                            ??_dtoa 002B                              ??_init 000B  
                            ??_rand 0019                       __activetblptr 0002  
                            _ADCON1 0FC1                              ?_fputc 000C  
                            ?_fputs 0015                    ___awdiv@dividend 000B  
                            ?_putch 0001                              i2l1900 0E0A  
                            i2l1902 0E22                              i2l1912 0E46  
                            i2l1904 0E30                              i2l1914 0E4E  
                            i2l1906 0E3A                              i2l1850 0C98  
                            i2l1842 0C56                              i2l1916 0E58  
                            i2l1860 0CBC                              i2l1852 0CA2  
                            i2l1844 0C64                              i2l1870 0D2E  
                            i2l1862 0CCC                              i2l1846 0C72  
                            i2l1880 0D58                              i2l1864 0CFE  
                            i2l1848 0C8A                              i2l1882 0D8A  
                            i2l1866 0D16                              i2l1858 0CAE  
                            i2l1884 0DA2                              i2l1876 0D3A  
                            i2l1868 0D24                              i2l1894 0DC6  
                            i2l1886 0DB0                              i2l1878 0D48  
                            i2l1896 0DCE                              i2l1888 0DBA  
                            i2l1898 0DD8                              _SPBRGH 0FB0  
                      vfprintf@cfmt 0048                              ___lmul 14D2  
                         ??___awdiv 000F                           ??___awmod 000F  
                  __end_of_initUART 169A                              _setLED 1372  
                            clear_0 1614                              clear_1 1620  
                  ___awdiv@quotient 0011                     ___awmod@divisor 000D  
                       setLED@value 000B                              isa$std 0001  
                   ___awmod@counter 000F                              _printf 1634  
                            pad@buf 001E                              dtoa@fp 0027  
                            fputc@c 000C                              fputs@c 0019  
                            fputs@i 001A                              fputs@s 0015  
                      __mediumconst 0000                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
                     interruption@i 0003                    __end_of_vfprintf 158A  
                        __accesstop 0080             __end_of__initialization 1626  
                     ___rparam_used 0001                      __pcstackCOMRAM 0001  
                     ?_interruption 0001                       __end_of_fputc 11FE  
                     __end_of_fputs 15CE                       __end_of_putch 16B0  
                           ??_fputc 0010                             ??_fputs 0019  
               main@sequencia_facil 00C8                             ??_putch 000B  
                        __pbssBANK0 0080          main@sequencia_facil_perdeu 00BA  
     main@esperando_sequencia_facil 00BE                      ??_interruption 0001  
                           ?___lmul 000B                             ?_setLED 000B  
                    ___lmul@product 0013                             ?_printf 004A  
                         ?_initUART 0001                             __Hparam 0000  
                           __Lparam 0000                             ___awdiv 11FE  
                           ___awmod 12C2                           ?_vfprintf 0042  
                      __psmallconst 0600                             __pcinit 160E  
                           __ramtop 0600                             __ptext0 0624  
                           __ptext1 1372                             __ptext2 1466  
                           __ptext3 14D2                             __ptext4 1634  
                           __ptext5 153C                             __ptext6 1012  
                           __ptext7 0E7E                             __ptext8 13EC  
                           __ptext9 158A                    ___awmod@dividend 000B  
                    __pintcode_body 0C54                end_of_initialization 1626  
                        ??_initUART 000B                             fputc@fp 000E  
                     __Lmediumconst 0000                             int_func 0C54  
                           fputs@fp 0017                   __end_of_vfpfcnvrt 1134  
                         _RCSTAbits 0FAB                             postdec2 0FDD  
                           postinc0 0FEE                             postinc1 0FE6  
                           postinc2 0FDE                    vfpfcnvrt@convarg 003C  
                        ??_vfprintf 0048                           _PORTBbits 0F81  
                         _PORTCbits 0F82                           _PORTDbits 0F83  
                         _TRISCbits 0F94          main@possui_sequencia_facil 00B8  
        main@possui_sequencia_media 00BC                __end_of_interruption 0E7E  
                         _TXSTAbits 0FAC                      __end_of___lmul 153C  
                       vfpfcnvrt@ap 0038                         vfpfcnvrt@cp 0040  
                       vfpfcnvrt@fp 0034                         _BAUDCONbits 0FB8  
                    __end_of_setLED 13EC                      __end_of_printf 165A  
               start_initialization 160E                         __end_of_abs 160E  
                       __end_of_pad 1466                         vfprintf@fmt 0044  
                          ??___lmul 0013                            ??_setLED 000C  
                          ??_printf 004E                         __pbssCOMRAM 0054  
                     __pcstackBANK0 00B8                           _dtoa$1304 002B  
                         __pintcode 0008                            ?___awdiv 000B  
                          ?___awmod 000B       main@sequencia_facil_finalizou 00D0  
                       __smallconst 0600                            i2u140_40 0DB0  
                          i2u132_40 0C64                            i2u140_41 0DAC  
                          i2u132_41 0C60                            i2u141_40 0DF6  
                          i2u133_40 0C72                            i2u141_41 0DF2  
                          i2u133_41 0C6E                            i2u142_40 0E0A  
                          i2u134_40 0C98                            i2u142_41 0E06  
                          i2u134_41 0C94                            i2u143_40 0E30  
                          i2u135_40 0CEA                            i2u143_41 0E2C  
                          i2u135_41 0CE6                            i2u144_40 0E76  
                          i2u136_40 0CFE                            i2u144_41 0E72  
                          i2u136_41 0CFA                            i2u137_40 0D24  
                          i2u137_41 0D20                            i2u138_40 0D76  
                          i2u138_41 0D72                            i2u139_40 0D8A  
                          i2u139_41 0D86                            i2u181_47 0C7C  
                          i2u190_47 0E14                            i2u182_47 0CB4  
                          i2u191_47 0E48                            i2u183_47 0CC4  
                          i2u192_47 0E52                            i2u184_47 0D08  
                          i2u185_47 0D3C                            i2u186_47 0D4C  
                          i2u187_47 0D94                            i2u188_47 0DC8  
                          i2u189_47 0DD2                            _RCONbits 0FD0  
                         main@F2912 0088                           main@F2918 0080  
                 interruption@i_687 0005                   interruption@i_688 0007  
                 interruption@i_689 0009                        _interruption 0008  
                         _vfpfcnvrt 1012                           main@i_790 00E0  
                         main@i_791 00E2                           main@i_784 00D8  
                         main@i_787 00DA                           main@i_795 00D4  
                         main@i_788 00DC                           main@i_789 00DE  
                         main@array 00C0  generate_random_sequence_easy@F2907 0054  
                 ___lmul@multiplier 000B                         _INTCON2bits 0FF1  
                       _INTCON3bits 0FF0                            __Hrparam 0000  
                        vfprintf@ap 0046                            __Lrparam 0000  
                        vfprintf@fp 0042                           setLED@pos 000E  
                        ?_vfpfcnvrt 0034                            __ptext10 1134  
                          __ptext11 169A                            __ptext12 15CE  
                          __ptext13 12C2                            __ptext14 11FE  
                          __ptext15 1680                            __ptext16 165A  
                          _initUART 1680                            isa$xinst 0000  
                          int$flags 0065                            _vfprintf 153C  
                         printf@fmt 004A                           putch@byte 000B  
                        _INTCONbits 0FF2                            intlevel2 0000  
                          printf@ap 004E                         ??_vfpfcnvrt 003A  
                       _pressedBTN1 0096                         _pressedBTN2 0094  
                       _pressedBTN3 0092                         _pressedBTN4 0090  
